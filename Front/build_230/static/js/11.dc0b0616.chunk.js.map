{"version":3,"sources":["components/Dialogs/AddToolDialog.js"],"names":["AddToolDialog","active","setActive","service_id","useState","tool","setTool","method","setMethod","allMethodsData","setAllMethodsData","useEffect","fetch","process","headers","localStorage","getItem","then","response","json","data","open","onClose","maxWidth","fullWidth","name","onSubmit","e","find","item","id","body","JSON","stringify","Group","controlId","Label","Control","as","value","onChange","event","target","hidden","disabled","map","type","placeholder","onClick","style","outline"],"mappings":"2NA8EeA,UApEf,YAAyD,IAAjCC,EAAgC,EAAhCA,OAAQC,EAAwB,EAAxBA,UAAWC,EAAa,EAAbA,WAEvC,EAAwBC,mBAAS,IAAjC,mBAAOC,EAAP,KAAaC,EAAb,KACA,EAA4BF,mBAAS,IAArC,mBAAOG,EAAP,KAAeC,EAAf,KACA,EAA2CJ,mBAAS,IAApD,mBAAOK,EAAP,KAAuBC,EAAvB,KAiCA,OAJAC,qBAAU,WAZNC,MAAMC,qDAAkD,CAAEC,QAAU,CAChE,eAAgB,mBAChB,OAAU,mBACV,cAAiB,UAAYC,aAAaC,QAAQ,eAGrDC,MAAK,SAAAC,GAAQ,OAAEA,EAASC,UACxBF,MAAK,SAAAG,GACFV,EAAkBU,QAMvB,EAlCc,IAqCb,mCACI,eAAC,IAAD,CAAQC,KAAMpB,EAAQqB,QAASpB,EAAWqB,SAAS,KAAKC,WAAS,EAAjE,UACI,cAAC,IAAD,4HACA,eAAC,IAAD,CAAMC,KAAK,UAAUC,SAnCjC,SAAsBC,GAClBf,MAAMC,iDAA+CV,EAAa,IAAMM,EAAemB,MAAK,SAAAC,GAAI,OAAIA,EAAKJ,OAASlB,KAAQuB,GAAK,eAAe,CAC1IvB,OAAQ,OACRO,QAAQ,CACJ,OAAS,mBACT,eAAe,mBACf,cAAiB,UAAYC,aAAaC,QAAQ,aAEtDe,KAAMC,KAAKC,UAAU,CACjB,UAAa5B,OA0Bb,UACI,eAAC,IAAD,WACI,eAAC,IAAK6B,MAAN,CAAYC,UAAU,eAAtB,UACI,cAAC,IAAKC,MAAN,8FACA,eAAC,IAAKC,QAAN,CAAcC,GAAG,SAASH,UAAU,gBAAgBV,KAAK,gBAAgBc,MAAOhC,EAAQiC,SAAU,SAAAC,GAAK,OAAIjC,EAAUiC,EAAMC,OAAOH,QAAlI,UACI,wBAAQI,QAAM,EAACC,UAAQ,IACtBnC,EAAeoC,KAAI,SAAAhB,GAAI,OAAI,wBAAsBU,MAAOV,EAAKJ,KAAlC,SAAyCI,EAAKJ,MAAjCI,EAAKC,aAGtD,cAAC,IAAKI,MAAN,UACI,cAAC,IAAKG,QAAN,CACAS,KAAK,OACLhB,GAAG,WACHU,SAAU,SAAAb,GAAC,OAAIrB,EAAQqB,EAAEe,OAAOH,QAChCQ,YAAY,wKAIxB,cAAC,IAAD,UACI,cAAC,IAAD,CAAQD,KAAK,SAASE,QAAS9C,EAAW+C,MAAO,CAACC,QAAS,QAA3D","file":"static/js/11.dc0b0616.chunk.js","sourcesContent":["import React, {useState, useEffect} from 'react';\r\n\r\nimport {\r\n    Button,\r\n    TextField,\r\n    Dialog, DialogContent, DialogTitle, DialogActions\r\n} from \"@material-ui/core\";\r\n\r\nimport {Form} from 'react-bootstrap';\r\n\r\nfunction AddToolDialog({active, setActive, service_id}) {\r\n    const constant = false;\r\n    const [tool, setTool] = useState(\"\");\r\n    const [method, setMethod] = useState(\"\");\r\n    const [allMethodsData, setAllMethodsData]= useState([]);\r\n\r\n    function onSubmitTool(e){\r\n        fetch(process.env.REACT_APP_API+'service_methods/' + service_id + '/' + allMethodsData.find(item => item.name === method).id + '?format=json',{\r\n            method: 'POST',\r\n            headers:{\r\n                'Accept':'application/json',\r\n                'Content-Type':'application/json',\r\n                'Authorization': \"Token \" + localStorage.getItem('id_token')\r\n            },\r\n            body: JSON.stringify({\r\n                \"tool_type\": tool\r\n            }) \r\n        })\r\n    };\r\n\r\n    const getAllMethods = () => {\r\n        fetch(process.env.REACT_APP_API+'methods/?format=json', { headers : { \r\n            'Content-Type': 'application/json',\r\n            'Accept': 'application/json',\r\n            'Authorization': \"Token \" + localStorage.getItem('id_token')\r\n           }\r\n        }) \r\n        .then(response=>response.json())\r\n        .then(data=>{\r\n            setAllMethodsData(data);\r\n        })\r\n    }\r\n\r\n    useEffect(() => {\r\n        getAllMethods();\r\n    }, [constant])\r\n\r\n    return (\r\n        <>\r\n            <Dialog open={active} onClose={setActive} maxWidth=\"xs\" fullWidth>\r\n                <DialogTitle>Добавить инструмент</DialogTitle>\r\n                <Form name=\"addtool\" onSubmit={onSubmitTool}>\r\n                    <DialogContent>\r\n                        <Form.Group controlId=\"chooseMethod\">\r\n                            <Form.Label>Выберите метод</Form.Label>\r\n                            <Form.Control as=\"select\" controlId=\"choose_method\" name=\"choose_method\" value={method} onChange={event => setMethod(event.target.value)}>\r\n                                <option hidden disabled></option>\r\n                                {allMethodsData.map(item => <option key={item.id} value={item.name}>{item.name}</option>)}\r\n                            </Form.Control>\r\n                        </Form.Group>\r\n                        <Form.Group>\r\n                            <Form.Control\r\n                            type=\"text\"\r\n                            id=\"add_tool\"\r\n                            onChange={e => setTool(e.target.value)} \r\n                            placeholder=\"Введите название инструмента\"\r\n                            />\r\n                        </Form.Group>\r\n                    </DialogContent>\r\n                <DialogActions>\r\n                    <Button type=\"submit\" onClick={setActive} style={{outline: \"none\"}}>Сохранить</Button>\r\n                </DialogActions>\r\n                </Form>\r\n            </Dialog>   \r\n        </>\r\n    )\r\n}\r\n\r\nexport default AddToolDialog;"],"sourceRoot":""}