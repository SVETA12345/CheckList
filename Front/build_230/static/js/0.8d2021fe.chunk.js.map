{"version":3,"sources":["components/Dialogs/LasDialog.js"],"names":["LasDialog","active","setActive","las","onUpdate","role","localStorage","getItem","useState","useRef","cap","setCap","parametres","setParametres","mnemodescription","setMnemodescription","tabledata","setTabledata","las_file_count","setKoef","status","setStatus","lasData","setLasData","updateValues","e","inputName","target","name","inputValue","value","useEffect","open","onClose","maxWidth","fullWidth","style","float","checked","width","onChange","onlabel","offlabel","onstyle","offstyle","Group","Label","htmlFor","Control","disabled","as","id","onClick","obj","key","delete_all_props","calc_koef","outline","visibility","push_all_full"],"mappings":"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","file":"static/js/0.8d2021fe.chunk.js","sourcesContent":["import React, {useEffect, useState, useRef} from 'react';\r\n\r\nimport {\r\n    Button,\r\n    Dialog, DialogContent, DialogTitle, DialogActions,\r\n} from \"@material-ui/core\";\r\nimport BootstrapSwitchButton from 'bootstrap-switch-button-react';\r\n\r\nimport {Form} from 'react-bootstrap';\r\nimport {calc_koef} from \"../../pages/checklist/Scripts\";\r\nimport {FiUpload} from \"react-icons/fi\";\r\n\r\nimport \"./stylesMaterial.css\";\r\n\r\nfunction LasDialog({active, setActive, las, onUpdate}) {\r\n    const role = localStorage.getItem('role');\r\n    const [uploadedFileName, setUploadedFileName] = useState(null);\r\n    const inputRef = useRef(null);\r\n    const [cap, setCap] = useState(\"\")\r\n    const [parametres, setParametres] = useState(\"\")\r\n    const [mnemodescription, setMnemodescription] = useState(\"\")\r\n    const [tabledata, setTabledata] = useState(\"\")\r\n    const [las_file_count, setKoef] = useState(null)\r\n    const [status, setStatus] = useState(true);\r\n    const [lasData, setLasData] = useState({});\r\n\r\n\r\n    const delete_all_props = (obj) => {\r\n        setCap(\"\");\r\n        setParametres(\"\");\r\n        setMnemodescription(\"\");\r\n        setTabledata(\"\");\r\n        setKoef(null);\r\n        for (var key in obj){\r\n            obj[key] = \"\"\r\n        }\r\n    }\r\n\r\n    const push_all_full = (obj) => {\r\n        setCap(\"Полная\");\r\n        setParametres(\"Полная\");\r\n        setMnemodescription(\"Полная\");\r\n        setTabledata(\"Полная\");\r\n        for (var key in obj){\r\n            if (key !== \"las_file_count\" && key !== \"status\"){\r\n                obj[key] = \"Полная\"\r\n            }\r\n        }\r\n    }\r\n\r\n    function updateValues(e){\r\n        var inputName = e.target.name;\r\n        var inputValue = e.target.value;\r\n        if(inputName === 'cap'){\r\n            setCap(inputValue);\r\n        }\r\n        else if(inputName === 'parametres'){\r\n            setParametres(inputValue);\r\n        }\r\n        else if(inputName === 'mnemodescription'){\r\n            setMnemodescription(inputValue);\r\n        }\r\n        else if(inputName === 'tabledata'){\r\n            setTabledata(inputValue);\r\n        }\r\n     }\r\n\r\n     useEffect(() => {\r\n        setLasData({\r\n            cap: cap,\r\n            parametres: parametres,\r\n            mnemodescription: mnemodescription,\r\n            tabledata: tabledata,\r\n            las_file_count: las_file_count,\r\n            status: status\r\n        })\r\n     },[cap, parametres, mnemodescription, tabledata, status])\r\n\r\n     useEffect(() => {\r\n        setCap(las.cap);\r\n        setParametres(las.parametres);\r\n        setMnemodescription(las.mnemodescription);\r\n        setTabledata(las.tabledata);\r\n        setKoef(las.las_file_count);\r\n        setStatus(las.status)\r\n     }, [las])\r\n\r\n      const handleUpload = () => {\r\n        inputRef.current?.click();\r\n      };\r\n      const handleDisplayFileDetails = () => {\r\n        inputRef.current?.files &&\r\n        setUploadedFileName(inputRef.current.files[0].name);\r\n      };\r\n\r\n    return (\r\n        <>\r\n            <Dialog open={active} onClose={setActive} maxWidth=\"sm\" fullWidth>\r\n                <DialogTitle>\r\n                    Оформление Las-файла\r\n                    <div style={{float:\"right\"}}>\r\n                    <BootstrapSwitchButton \r\n                        checked={status} \r\n                        width={150}\r\n                        onChange={(checked) => setStatus(checked)} \r\n                        onlabel=\"Присутствует\" \r\n                        offlabel=\"Отсутствует\" \r\n                        onstyle=\"success\" \r\n                        offstyle=\"danger\" />\r\n                    </div>\r\n                </DialogTitle>\r\n                <DialogContent>\r\n                <Form>\r\n                    <Form.Group>\r\n                        <Form.Label htmlFor=\"cap\">Шапка</Form.Label>\r\n                        <Form.Control disabled={!(role === \"user\" || role === \"superuser\")} as=\"select\" id=\"cap\" name=\"cap\" value={cap} onChange={e => updateValues(e)}>\r\n                            <option></option>\r\n                            <option>Полная</option>\r\n                            <option>Частичная</option>\r\n                            <option>Отсутствует</option>\r\n                        </Form.Control>\r\n                    </Form.Group>\r\n                    <Form.Group>\r\n                        <Form.Label htmlFor=\"parametres\">Параметры</Form.Label>\r\n                        <Form.Control disabled={!(role === \"user\" || role === \"superuser\")} as=\"select\" id=\"parametres\" name=\"parametres\" value={parametres} onChange={e => updateValues(e)}>\r\n                            <option></option>\r\n                            <option>Полная</option>\r\n                            <option>Частичная</option>\r\n                            <option>Отсутствует</option>\r\n                        </Form.Control>\r\n                    </Form.Group>\r\n                    <Form.Group>\r\n                        <Form.Label htmlFor=\"mnemodescription\">Описание мнемоник</Form.Label>\r\n                        <Form.Control disabled={!(role === \"user\" || role === \"superuser\")} as=\"select\" id=\"mnemodescription\" name=\"mnemodescription\" value={mnemodescription} onChange={e => updateValues(e)}>\r\n                            <option></option>\r\n                            <option>Полная</option>\r\n                            <option>Частичная</option>\r\n                            <option>Отсутствует</option>\r\n                        </Form.Control>\r\n                    </Form.Group>\r\n                    <Form.Group>\r\n                        <Form.Label htmlFor=\"tabledata\">Таблица с данными</Form.Label>\r\n                        <Form.Control disabled={!(role === \"user\" || role === \"superuser\")} as=\"select\" id=\"tabledata\" name=\"tabledata\" value={tabledata} onChange={e => updateValues(e)}>\r\n                            <option></option>\r\n                            <option>Полная</option>\r\n                            <option>Частичная</option>\r\n                            <option>Отсутствует</option>\r\n                        </Form.Control>\r\n                    </Form.Group>\r\n                </Form>\r\n                </DialogContent>\r\n                <DialogActions>\r\n                <Button onClick={() => {delete_all_props(lasData); onUpdate(lasData); calc_koef(lasData); setActive()}} style={{outline: \"none\", visibility: (role === \"user\" || role === \"superuser\" ? 'visible' : 'hidden')}}>Удалить</Button>\r\n                <Button onClick={() => {push_all_full(lasData); onUpdate(lasData); calc_koef(lasData); setActive()}} style={{outline: \"none\", visibility: (role === \"user\" || role === \"superuser\" ? 'visible' : 'hidden')}}>Все полные</Button>\r\n                <Button onClick={() => {onUpdate(lasData); calc_koef(lasData); setActive()}} style={{outline: \"none\", visibility: (role === \"user\" || role === \"superuser\" ? 'visible' : 'hidden')}}>Сохранить</Button>\r\n                </DialogActions>\r\n            </Dialog>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default LasDialog;"],"sourceRoot":""}