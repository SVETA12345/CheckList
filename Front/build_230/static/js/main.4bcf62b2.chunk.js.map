{"version":3,"sources":["pages/calcScripts.js","pages/checklist/styles.js","pages/checklist/data.js","pages/checklist/Scripts.js","themes/default.js","themes/index.js","components/Layout/styles.js","components/Header/styles.js","components/Wrappers/Wrappers.js","context/LayoutContext.js","context/UserContext.js","components/Header/Header.js","components/Sidebar/styles.js","components/Sidebar/components/SidebarLink/styles.js","components/Sidebar/components/Dot.js","components/Sidebar/components/SidebarLink/SidebarLink.js","components/Sidebar/Sidebar.js","pages/dashboard/styles.js","pages/dashboard/mock.js","components/Widget/styles.js","components/Widget/Widget.js","components/PageTitle/styles.js","components/PageTitle/PageTitle.js","pages/dashboard/components/Table/Table.js","pages/dashboard/components/BigStat/styles.js","pages/dashboard/components/BigStat/BigStat.js","pages/dashboard/Dashboard.js","pages/tables/Tables.js","components/Toolbar/CustomToolbarSelect.js","components/Toolbar/CustomToolbarSelectWithAdd.js","pages/customers/Customers.js","components/NotFound/NotFound.js","pages/reports/Reports.js","components/Toasts/ValidityToast.js","components/Toasts/SuccessToast.js","components/Toasts/NoChangesToast.js","pages/reports/Scripts.js","pages/reports/Report.js","pages/services/Services.js","pages/services/Scripts.js","pages/services/Service.js","components/Blocked/Blocked.js","pages/checklist/Checklist.js","pages/help/Help.js","components/Toasts/ValidAdmin.js","components/Dialogs/AdminDialog.js","pages/admin/Admin.js","components/Dialogs/AddStrataDialog.js","components/Dialogs/EditStrataDialog.js","pages/strata/Strata.js","components/Toolbar/CustomToolbarSelectTrash.js","pages/textLabels.js","pages/trash/Trash.js","pages/logs/Logs.js","components/Dialogs/EditClusterDialog.js","components/Dialogs/EditWellDialog.js","components/Dialogs/EditWellboreDialog.js","components/Toasts/WarningToast.js","pages/database/Database.js","components/Layout/Layout.js","pages/error/styles.js","pages/error/logo.svg","pages/error/Error.js","pages/login/styles.js","pages/login/4_IGIRGI.png","pages/login/Login.js","components/App.js","serviceWorker.js","index.js"],"names":["parametres_to_number","param","Number","undefined","calc_value_rt_azimut","secondrow","lqc","res","key","calc_value_rt","calc_value_memory","koef_shod","calc_value_memory_azimut","calc_finish_value","rows","las","witsml","full_inf_count","status","i","length","method_value","petrophysic_task","las_file_count","witsml_count","styleCell","color","styleInput","fontSize","styleSelect","styleBlueInput","backgroundColor","borderColor","textAlign","fontWeight","MenuProps","PaperProps","style","maxHeight","ITEM_HEIGHT","width","maxWidth","petrophysic_names","calc_koef","obj","koef","hasOwnProperty","Math","round","Object","keys","prepare_for_put_inform_method","arr","methods","service_devices","post_inform_method","id_post","id","index","method_id","find","m","name","method","service_device_id","s","tool_type","prepare_for_post_inform_method","prepare_for_put_secondtable","post_second_table","inform_for_method_id","prepare_for_post_secondtable","check_validity","customer","field","num_pad","num_well","num_wellbore","data_type","section_interval_start","section_interval_end","primary","secondary","warning","success","info","lightenRate","defaultTheme","palette","main","light","tinycolor","lighten","toHexString","dark","darken","contrastText","text","hint","title","background","default","customShadows","widget","widgetDark","widgetWide","overrides","MuiBackdrop","root","MuiMenu","paper","boxShadow","MuiSelect","icon","MuiListItem","button","MuiTouchRipple","child","MuiTableRow","height","MuiTableCell","borderBottom","paddingLeft","head","body","PrivateSwitchBase","marginLeft","typography","h1","h2","h3","h4","h5","h6","fontFamily","join","themes","createTheme","makeStyles","theme","display","overflowX","content","flexGrow","padding","spacing","minHeight","contentShift","transition","transitions","create","easing","sharp","duration","enteringScreen","fakeToolbar","mixins","toolbar","link","logotype","marginRight","whiteSpace","breakpoints","down","appBar","zIndex","drawer","leavingScreen","paddingRight","hide","grow","search","position","borderRadius","alpha","common","black","cursor","searchFocused","up","searchIcon","right","alignItems","justifyContent","searchIconOpened","inputRoot","inputInput","messageContent","flexDirection","headerMenu","marginTop","headerMenuList","headerMenuItem","headerMenuButton","headerMenuButtonSandwich","headerMenuButtonCollapse","headerIcon","headerIconCollapse","profileMenu","minWidth","profileMenuUser","profileMenuItem","profileMenuIcon","profileMenuLink","textDecoration","messageNotification","messageNotificationSide","messageNotificationBodySide","sendMessageButton","margin","marginBottom","textTransform","sendButtonIcon","purchaseBtn","badge","Typography","children","weight","size","colorBrightness","props","useTheme","getColor","getFontWeight","getFontSize","variant","brigtness","multiplier","defaultSize","LayoutStateContext","React","createContext","LayoutDispatchContext","layoutReducer","state","action","type","isSidebarOpened","Error","LayoutProvider","useReducer","dispatch","Provider","value","useLayoutState","context","useContext","useLayoutDispatch","toggleSidebar","UserStateContext","UserDispatchContext","userReducer","isAuthenticated","UserProvider","token","localStorage","getItem","exp_time","jwt_decode","exp","Date","now","fetch","process","headers","JSON","stringify","then","response","json","data","setItem","removeItem","useUserDispatch","loginUser","login","password","history","setIsLoading","setError","setTimeout","role","push","Header","classes","useStyles","useHistory","layoutState","layoutDispatch","userDispatch","useState","setProfileMenu","AppBar","className","Toolbar","IconButton","onClick","classNames","outline","ArrowBack","e","currentTarget","Menu","open","Boolean","anchorEl","onClose","disableAutoFocusItem","pathname","signOut","menuButton","flexShrink","drawerOpen","drawerClose","mobileBackButton","only","externalLink","linkActive","linkNested","linkIcon","linkIconActive","linkText","linkTextActive","linkTextHidden","opacity","nestedList","sectionTitle","divider","dotBase","dotSmall","dotLarge","Dot","classnames","SidebarLink","label","location","nested","isOpen","setIsOpen","isLinkActive","indexOf","Divider","includes","ListItem","linkRoot","disableRipple","href","ListItemIcon","ListItemText","component","Link","preventDefault","to","Inbox","Collapse","in","timeout","unmountOnExit","List","disablePadding","map","childrenLink","structure","Equalizer","NoteAdd","Person","Settings","Storage","Description","Delete","Layers","Help","withRouter","isPermanent","setPermanent","useEffect","window","addEventListener","handleWindowWidthChange","removeEventListener","Drawer","sidebarList","isSmallScreen","innerWidth","values","md","card","visitsNumberContainer","paddingBottom","progressSection","progressTitle","progress","pieChartLegendWrapper","legendItemContainer","fullHeightBody","tableWidget","progressBarPrimary","progressBarWarning","performanceLegendWrapper","legendElement","legendElementText","serverOverviewElement","serverOverviewElementText","serverOverviewElementChartWrapper","mainChartBody","mainChartHeader","flexWrap","mainChartHeaderLabels","order","mainChartHeaderLabel","mainChartSelectRoot","mainChartSelect","mainChartLegentElement","mock","tasks","time","bigStat","product","total","monthly","weekly","daily","percent","profit","registrations","bounce","notifications","table","email","price","date","city","widgetWrapper","widgetHeader","widgetRoot","widgetBody","noPadding","overflow","moreButton","noWidgetShadow","Widget","noBodyPadding","bodyClass","disableWidgetMenu","header","noHeaderPadding","headerClass","moreButtonRef","setMoreButtonRef","isMoreMenuOpen","setMoreMenuOpen","Paper","Fragment","noWrap","buttonRef","MenuItem","pageTitleContainer","typo","PageTitle","states","sent","pending","declined","TableComponent","toUpperCase","shift","Table","TableHead","TableRow","TableCell","TableBody","Chip","toLowerCase","bottomStatsContainer","statCell","totalValueContainer","totalValue","profitArrow","transform","fill","profitArrowDanger","selectInput","bodyWidgetOverflow","BigStat","setValue","Select","onChange","target","input","Input","disableUnderline","select","upperTitle","BarChart","Array","floor","random","Bar","dataKey","radius","barSize","borderRight","Grid","container","ArrowForward","mainChartData","resultArray","tablet","getRandomData","desktop","mobile","getMainChartData","PieChartData","Dashboard","mainChartState","setMainChartState","Button","item","lg","sm","xs","LineChart","Line","stroke","strokeWidth","dot","direction","justify","progressSectionTitle","LinearProgress","barColorPrimary","ResponsiveContainer","AreaChart","Area","fillOpacity","PieChart","Pie","innerRadius","outerRadius","entry","Cell","OutlinedInput","labelWidth","notchedOutline","autoWidth","ComposedChart","top","left","bottom","YAxis","ticks","tick","tickLine","XAxis","tickFormatter","activeDot","stat","min","max","lastValue","maxDiff","array","randomValue","datatableData","tableOverflow","Tables","columns","options","filterType","CustomToolbarSelect","handleClickChangeName","onChangeName","handleClickRowsDelete","onRowsDelete","this","iconContainer","Tooltip","iconButton","Edit","Component","withStyles","CustomToolbarSelectWithAdd","handleClickRowsAdd","onRowsAdd","Add","AddCustomerDialog","lazy","AddFieldDialog","EditCustomerDialog","EditFieldDialog","Customers","fullData","setFullData","showModalCustomer","setShowModalCustomer","showModalEditCustomer","setShowModalEditCustomer","showModalEditField","setShowModalEditField","showModalField","setShowModalField","customer_id_addfield","setCustomer_id_addfield","customer_name_addfield","setCustomer_name_addfield","field_id","setField_id","field_name","setField_name","customer_index","setCustomer_index","selectedRowCustomer","setSelectedRowCustomer","selectedRowField","setSelectedRowField","constant","getCustomers","changeNameField","handleModalEditField","changeNameCustomer","handleModalEditCustomer","rowsDeleteCustomer","customer_id","confirm","splice","fieldAdd","handleModalField","rowsDeleteField","deleteField","handleModalCustomer","fallback","active","setActive","customer_name","visibility","CircularProgress","responsive","sort","viewColumns","filter","print","download","pagination","rowsPerPage","textLabels","noMatch","toolTip","selectedRows","expandableRows","expandableRowsHeader","rowsSelected","isRowExpandable","dataIndex","expandedRows","d","onRowExpansionChange","currentRowsExpanded","allRowsExpanded","rowsExpanded","onRowSelectionChange","rowsSelectedData","allRows","customToolbarSelect","displayData","setSelectedRows","selectableRows","renderExpandableRow","rowData","rowMeta","colSpan","next","previous","displayRows","setRowProps","onRowClick","NotFound","TableContainer","align","Reports","reportsData","setReportsData","getReports","catch","err","console","log","quality_control_id","well","pie_well","all","reset","filterTable","report_id","ValidityToast","Toast","show","delay","autohide","Body","SuccessToast","NoChangesToast","make_indexes","FullnessDialog","LasDialog","WitsmlDialog","DensityDialog","FillDataDialog","tableRowIndex","Report","reportData","setReportData","hover","setHover","showModalFullness","setShowModalFullness","showModalLas","setShowModalLas","showModalWitsml","setShowModalWitsml","showModalDensity","setShowModalDensity","showValidityToast","setShowValidityToast","showNoChangesToast","setShowNoChangesToast","showSuccessToast","setShowSuccessToast","showModalData","setShowModalData","setRows","secondrows","setSecondrows","fullness_data","curvenames","mnemodescription","witsmlData","setWitsmlData","cap","parametres","tabledata","lasData","setLasData","density","densityData","setDensityData","titul_list","well_construction","wellbore_sizes","chrono_data","sol_data","dash_comp","summary_data","inklino_data","main_record","parametr","control_record","calibration","fullnessData","setFullnessData","setCustomer","setField","setNum_pad","setCluster_id","setNum_well","well_id","setWell_id","setNum_wellbore","wellbore_id","setWellbore_id","well_type","setWell_type","service","setService","service_id","setService_id","setPie_well","setData_type","setSection_interval_start","setSection_interval_end","diametr","setDiametr","rowIndex","setRowIndex","test","servicesData","setServicesData","methodsData","setMethodsData","devicesData","setDevicesData","customersData","setCustomersData","fieldsData","setFieldsData","clustersData","setClustersData","wellsData","setWellsData","wellboresData","setWellboresData","arrNumWells","setArrNumWells","checkWellboreValues","setCheckWellboreValues","checkWellValues","setCheckWellValues","checkValues","setCheckValues","checkValuesForPost","setCheckValuesForPost","checkLasChange","setCheckLasChange","checkWitsmlChange","setCheckWitsmlChange","checkFullnessChange","setCheckFullnessChange","checkDensityChange","setCheckDensityChange","getFields","getClusters","getWells","cluster_id","self","num","getWellbores","getMethods","getDevices","putReport","match","params","ok","putWitsmlData","putDensityData","putFullnessData","putWellboreValues","putWellValues","putInformSecondValues","split_wellbore","split","postReport","putReportValue","updateBaseValues","inputName","inputValue","split_well","deleteData","updatedRows","updatedRowsSecond","indexToRemove","findIndex","x","handleModalFullness","handleModalLas","handleModalWitsml","handleModalDensity","handleModalData","service_name","las_file","full_inform","inform_for_method","second_table","getReport","toFixed","mainData","fullness","onUpdate","density_data","row","parseFloat","onDelete","Card","sx","elevation","CardContent","Form","Group","as","Row","Col","FormControl","fullWidth","InputLabel","labelId","hidden","disabled","htmlFor","ListSubheader","wells","Label","column","paddingTop","NotInterested","verticalAlign","Control","step","float","file","getExcel","getPdf","onMouseEnter","onMouseLeave","RemoveCircleOutline","tool_num","calibr_date","start_date","end_date","interval_shod_start","interval_shod_end","reason_rashod","koef_fail","goBack","AddServiceDialog","EditServiceDialog","Services","setService_name","showModalService","setShowModalService","showModalEditService","setShowModalEditService","getServices","changeName","handleModalEditService","rowsDelete","deleteService","handleModalService","unique","result","str","AddToolDialog","Service","names_methods","setNames_methods","optimizedData","setOptimizedData","showModalAddTool","setShowModalAddTool","getService","cb","method_class","name_methods","arr_copy","j","optimize_for_table","handleModalAddTool","copy_optimized","ceil","cells","DropdownButton","drop","device","Dropdown","Item","tool_id","id_service_method","go","Blocked","Checklist","Accept","quality_control_pk","ValidAdmin","AdminDialog","user","checkPost","user_login","setUser_login","setName","surname","setSurname","setEmail","tel","setTel","setPassword","checkpassword","setCheckpassword","setRole","is_active","setIs_active","changePass","setChangePass","customers","setCustomers","showValid","setShowValid","handleToastValid","handleSuccessToast","postUser","username","first_name","last_name","phone_number","Dialog","DialogTitle","DialogContent","IMaskInput","mask","checked","onlabel","offlabel","onstyle","offstyle","Text","multiple","renderValue","selected","Checkbox","toString","DialogActions","Admin","usersData","setUsersData","setUser","showModalAdmin","setShowModalAdmin","setCheckPost","getUsers","handleModalAdmin","user_id","AddStrataDialog","selectedFile","setSelectedFile","fileName","setFileName","strata","setStrata","onSubmit","formData","FormData","append","placeholder","event","files","EditWellDialog","strata_id","strata_name","strata_file","slice","lastIndexOf","onSubmitStrata","Strata","setMethod","collectors","setCollectors","saturation","setSaturation","kp","setKp","kng","setKng","lithotype","setLithotype","strataObj","setStrataObj","allMethodsData","setAllMethodsData","petroData","setPetroData","load","setLoad","showModalStrata","setShowModalStrata","showModalEditStrata","setShowModalEditStrata","customBodyRender","tableMeta","updateValue","handleModalEditStrata","updateMethod","separation_of_reservoirs","determination_nature_saturation","determination_Kp","determination_Kng","determination_lithotype","getPetroInformation","getFieldInformation","getStrataInformation","handleModalStrata","EditStrataDialog","TextField","InputLabelProps","shrink","petro_id","rowsPerPageOptions","CustomToolbarSelectTrash","handleClickRowsRecovery","onRowsRecovery","Loop","Trash","category","setCategory","stratasData","setStratasData","serviceMethodsData","setServiceMethodsData","qualityControlsData","setQualityControlsData","columnsStrata","rowsDeleteCluster","rowsDeleteWell","rowsDeleteWellbore","rowsDeleteStrata","rowsDeleteService","rowsDeleteServiceMethod","service_method_id","rowsDeleteQualityControl","recoveryRowsCustomer","recoveryRowsField","recoveryRowsCluster","recoveryRowsWell","recoveryRowsWellbore","recoveryRowsStrata","recoveryRowsService","recoveryRowsServiceMethod","recoveryRowsQualityControl","updateCategory","time_before_del","well_num","Logs","logsData","setLogsData","date_start","setDate_start","date_end","setDate_end","showInputTime","setShowInputTime","getLogs","Backspace","InputProps","startAdornment","InputAdornment","Check","user_name","request","substring","level","timestamp","EditClusterDialog","cluster_name","cluster","setCluster","onSubmitCluster","well_name","setWell","wellType","setWellType","onSubmitWell","EditWellboreDialog","wellbore_name","wellbore","setWellbore","pieWell","setPieWell","diametrEdit","setDiametrEdit","onSubmitWellbore","WarningToast","Database","customerId","fieldId","setFieldId","clusterId","setClusterId","wellId","setWellId","wellboreId","setWellboreId","selectedCluster","setSelectedCluster","selectedClusterName","setSelectedClusterName","selectedWell","setSelectedWell","selectedRowsCluster","setSelectedRowsCluster","selectedRowsWell","setSelectedRowsWell","selectedRowsWellbore","setSelectedRowsWellbore","showInputCluster","setShowInputCluster","showInputWell","setShowInputWell","showInputWellbore","setShowInputWellbore","refreshCluster","setRefreshCluster","refreshWell","setRefreshWell","refreshWellbore","setRefreshWellbore","showModalCluster","setShowModalCluster","showModalWell","setShowModalWell","showModalWellbore","setShowModalWellbore","showWarning","setShowWarning","updateCustomer","updateCluster","handleWarning","updateWell","updateWellbore","changeNameCluster","handleModalCluster","changeNameWell","handleModalWell","changeNameWellbore","handleModalWellbore","onUpdatePieWell","apply","o","autoWellbore","updateField","Box","mr","my","path","exact","logotypeText","logotypeIcon","paperRoot","textRow","errorCode","safetyText","backButton","src","logo","alt","logotypeContainer","logotypeImage","formContainer","form","tab","greeting","subGreeting","googleButton","googleButtonCreating","googleIcon","creatingButtonContainer","createAccountButton","formDividerContainer","formDividerWord","formDivider","errorMessage","textFieldUnderline","borderBottomColor","textField","formButtons","forgetButton","loginLoader","copyright","isLoading","error","activeTabId","setActiveTabId","nameValue","setNameValue","loginValue","setLoginValue","passwordValue","setPasswordValue","logo2","Tabs","indicatorColor","textColor","centered","Tab","Fade","underline","getFullYear","App","useUserState","render","PrivateRoute","Layout","PublicRoute","Login","rest","createElement","from","hostname","ReactDOM","ThemeProvider","Themes","CssBaseline","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.4bcf62b2.chunk.js","sourcesContent":["function parametres_to_number(param) {\r\n    if (param === \"Низкая плотность данных реального времени\" || param === \"Коррелируют\" || param === \"Имеется\" || param === \"Увязан\" || param === \"Отсутствуют\" || param === \"Отсутствует\" || param === \"Соответствует основному замеру\" || param === \"Соответствует данным опорных скважин\" || param === \"Лежат в области ожидаемых значений\" || param === \"Соответствуют\" || param === \"Хорошее\" || param === \"Полная\") {\r\n        return Number(1);\r\n    }\r\n    else if (param === \"Частичная\" || param === \"Проблема с передачей данных реального времени\" || param === \"Частично коррелируют\" || param === \"Частично неувязан\" || param === \"Единичные\" || param === \"Незначительная\" || param === \"Не соответствует данным опорных скважин (занижено)\" || param === \"Удовлетворительное\") {\r\n        return Number(0.5);\r\n    }\r\n    else if (param === \"Отменена по согласованию сторон\") {\r\n        return Number(0.66);\r\n    }\r\n    else if (param === \"Не соответствует основной записи\") {\r\n        return Number(0.33);\r\n    } \r\n    else if (param === \"Занижены\") {\r\n        return Number(0.8);\r\n    }\r\n    else if (param === \"Завышены\") {\r\n        return Number(0.6);\r\n    }\r\n    else if (param === \"Реперные горизонты не вскрыты\") {\r\n        return Number(0.4);\r\n    }\r\n    else if (param === \"Свойства реперного горизонта отсутствуют\") {\r\n        return Number(0.2);\r\n    }\r\n    else if (param === undefined || param === \"Перерасчет данных из памяти прибора\" || param === \"Не коррелируют\" || param === \"Не имеется\" || param === \"Неувязан\" || param === \"Регулярные\" || param === \"Высокая\" || param === \"Не произведена\" || param === \"Не соответствует данным опорных скважин (завышено)\" || param === \"Не лежат в области ожидаемых значений\" || param === \"Не соответствуют\" || param === \"Свойства реперного горизонта расходятся\" || param === \"Неудовлетворительное\") {\r\n        return Number(0);\r\n    } else { return param; }\r\n}\r\n\r\nexport function calc_value_rt_azimut(secondrow, lqc) {\r\n    var res = 0\r\n    for (var key in secondrow){\r\n        if (key !== \"method\" && key !== \"notes\" && key !== \"inform_for_method_id\" && key !== \"method_id\" && key !== \"index\" && key !== \"device_tech_condition\" && key !== \"distribute_palet\" && key !== \"distribute_support\" && key !== \"corresponse\")\r\n            if (lqc === \"Отсутствует\" || lqc === \"\")\r\n                if (key !== \"correlation\")\r\n                    res += parametres_to_number(secondrow[key]) * 9.5\r\n                else\r\n                    res += parametres_to_number(secondrow[key]) * 9 \r\n            else\r\n                res += parametres_to_number(secondrow[key]) * 6\r\n    }\r\n    if (lqc !== \"Отсутствует\" || lqc !== \"\")\r\n        res += parametres_to_number(secondrow[\"device_tech_condition\"]) * 24\r\n    return res / 66 * 100;\r\n}\r\n\r\nexport function calc_value_rt(secondrow, lqc) {\r\n    var res = 0\r\n    for (var key in secondrow){\r\n        if (key !== \"method\" && key !== \"notes\" && key !== \"inform_for_method_id\" && key !== \"method_id\" && key !== \"index\" && key !== \"device_tech_condition\")\r\n            if (lqc === \"Отсутствует\" || lqc === \"\")\r\n                res += parametres_to_number(secondrow[key]) * 6.6\r\n            else\r\n                res += parametres_to_number(secondrow[key]) * 4.5\r\n    }\r\n    if (lqc !== \"Отсутствует\" || lqc !== \"\")\r\n        res += parametres_to_number(secondrow[\"device_tech_condition\"]) * 21\r\n    return res / 66 * 100;\r\n}\r\n\r\nexport function calc_value_memory(secondrow, lqc, koef_shod) {\r\n    var res = 0\r\n    if (koef_shod < 99){\r\n        for (var key in secondrow){\r\n            if (key !== \"method\" && key !== \"notes\" && key !== \"inform_for_method_id\" && key !== \"method_id\" && key !== \"index\" && key !== \"device_tech_condition\")\r\n                if (lqc === \"Отсутствует\" || lqc === \"\")\r\n                    res += parametres_to_number(secondrow[key]) * 5.6\r\n                else\r\n                    res += parametres_to_number(secondrow[key]) * 3.5 \r\n        }\r\n        if (lqc !== \"Отсутствует\" || lqc !== \"\")\r\n            res += parametres_to_number(secondrow[\"device_tech_condition\"]) * 21\r\n        if (koef_shod >= 85) koef_shod = 100\r\n        res += koef_shod / 100 * 10\r\n    }\r\n    return res / 66 * 100;\r\n}\r\n\r\nexport function calc_value_memory_azimut(secondrow, lqc, koef_shod) {\r\n    var res = 0\r\n    if (koef_shod < 99){\r\n        for (var key in secondrow){\r\n            if (key !== \"method\" && key !== \"notes\" && key !== \"inform_for_method_id\" && key !== \"method_id\" && key !== \"index\" && key !== \"device_tech_condition\" && key !== \"distribute_palet\" && key !== \"distribute_support\" && key !== \"corresponse\")\r\n                if (lqc === \"Отсутствует\" || lqc === \"\")\r\n                    res += parametres_to_number(secondrow[key]) * 8\r\n                else\r\n                    res += parametres_to_number(secondrow[key]) * 5 \r\n        }\r\n        if (lqc !== \"Отсутствует\" || lqc !== \"\")\r\n            res += parametres_to_number(secondrow[\"device_tech_condition\"]) * 21\r\n        if (koef_shod >= 85) koef_shod = 100\r\n        res += koef_shod / 100 * 10\r\n    }\r\n    return res / 66 * 100;\r\n}\r\n\r\nexport function calc_finish_value(rows, las, witsml, full_inf_count) {\r\n    var res = 0\r\n        if (las.status === true && witsml.status === true) {\r\n            for (var i = 0; i < rows.length; i++)\r\n                res += rows[i].method_value * 66 / 100 * rows[i].petrophysic_task\r\n            res = res / rows.length + full_inf_count * 0.16 + las.las_file_count * 0.09 + witsml.witsml_count * 0.09\r\n        } \r\n        else {\r\n            for (var i = 0; i < rows.length; i++)\r\n                res += rows[i].method_value * 66 / 100 * rows[i].petrophysic_task\r\n            if (las.status === false && witsml.status === true)\r\n                res = res / rows.length + full_inf_count * 0.22 + witsml.witsml_count * 0.12\r\n            if (las.status === true && witsml.status === false)\r\n            res = res / rows.length + full_inf_count * 0.22 + las.las_file_count * 0.12\r\n        }\r\n    return res;\r\n}","\r\nexport const styleCell = {\r\n    //borderBottom:\"2px solid #6985AF\",\r\n    color: \"black\"\r\n}\r\n\r\nexport const styleInput = {\r\n    color: \"white\",\r\n    fontSize: \"20px\"\r\n}\r\n\r\nexport const styleSelect = {\r\n    color: \"white\",\r\n    //background: \"#6985AF\"\r\n    fontSize: \"20px\"\r\n}\r\n\r\nexport const styleTextfield = {\r\n    backgroundColor: \"#6985AF\",\r\n    color: \"white\",\r\n    width: \"10rem\"\r\n}\r\n\r\nexport const styleBlueInput = {\r\n    backgroundColor: \"#6985AF\",\r\n    borderColor: \"#6985AF\",\r\n    color: \"white\",\r\n    textAlign: \"center\",\r\n    fontWeight: \"700\",\r\n    fontSize: \"20px\"\r\n}","export const columnsTable = [\r\n    {\r\n     field: \"method\",\r\n     title: \"Метод\",\r\n     headerStyle: {\r\n        textAlign: \"center\",\r\n        width: \"250px\"\r\n     }\r\n    },\r\n    {\r\n     field: \"tool_type\",\r\n     title: \"Тип прибора\",\r\n     headerStyle: {\r\n        textAlign: \"center\",\r\n        width: \"150px\"\r\n     }\r\n    },\r\n    {\r\n     field: \"tool_num\",\r\n     title: \"Номер прибора\",\r\n     headerStyle: {\r\n        textAlign: \"center\"\r\n     }\r\n    },\r\n    {\r\n     field: \"calibr_date\",\r\n     title: \"Дата калибровки прибора\",\r\n     headerStyle: {\r\n        textAlign: \"center\"\r\n     }\r\n    },\r\n    {\r\n     field: \"start_date\",\r\n     title: \"Дата начала ГИС при бурении\",\r\n     headerStyle: {\r\n        textAlign: \"center\"\r\n     }\r\n    },\r\n    {\r\n     field: \"end_date\",\r\n     title: \"Дата окончания ГИС при бурении\",\r\n     headerStyle: {\r\n        textAlign: \"center\"\r\n     }\r\n    },\r\n    {\r\n     field: \"interval_record\",\r\n     title: \"Интервал записи (факт), м\",\r\n     headerStyle: {\r\n        textAlign: \"center\",\r\n        width: \"200px\"\r\n     }\r\n    },\r\n    {\r\n     field: \"koef_shod\",\r\n     title: \"Коэффициент сходимости данных\",\r\n     headerStyle: {\r\n        textAlign: \"center\"\r\n     }\r\n    },\r\n    {\r\n     field: \"reason_rashod\",\r\n     title: \"Причина расхождения данных\",\r\n     headerStyle: {\r\n        textAlign: \"center\"\r\n     }\r\n    },\r\n    {\r\n     field: \"koef_fail\",\r\n     title: \"Коэффициент отсутствия данных\",\r\n     headerStyle: {\r\n        textAlign: \"center\"\r\n     }\r\n    },\r\n    {\r\n     field: \"petrophysic_task\",\r\n     title: \"Петрофизическая задача\",\r\n     headerStyle: {\r\n        textAlign: \"center\",\r\n        width: \"200px\"\r\n     }\r\n    },\r\n   ];\r\n\r\nexport const ITEM_HEIGHT = 48;\r\nexport const ITEM_PADDING_TOP = 8;\r\nexport const MenuProps = {\r\n  PaperProps: {\r\n    style: {\r\n      maxHeight: ITEM_HEIGHT * 4.5 + ITEM_PADDING_TOP,\r\n      width: 400,\r\n      maxWidth: 400,\r\n    },\r\n  },\r\n};\r\n\r\nexport const petrophysic_names = [\r\n    'Выделение коллекторов',\r\n    'Определение характера насыщения',\r\n    'Определение Кп',\r\n    'Определение Кнг',\r\n    'Определение литотипа',\r\n  ];","\r\nexport function calc_koef(obj) {\r\n    var koef = 0;\r\n    for (var key in obj){\r\n        if (obj[key] === \"Полная\")\r\n            koef += 1;\r\n        if (obj[key] === \"Частичная\")\r\n            koef += 0.5;\r\n        if (obj[key] === \"Отсутствует\")\r\n            koef += 0;\r\n    }\r\n    if (obj.hasOwnProperty('full_inf_count')){\r\n        obj.full_inf_count = Math.round(koef / (Object.keys(obj).length - 1) *100);\r\n        return;\r\n    }\r\n    if (obj.hasOwnProperty('las_file_count')){\r\n        obj.las_file_count = Math.round(koef / (Object.keys(obj).length - 2) *100);\r\n        return;\r\n    }\r\n    if (obj.hasOwnProperty('witsml_count')){\r\n        obj.witsml_count = Math.round(koef / (Object.keys(obj).length - 2) *100);\r\n        return;\r\n    }\r\n}\r\n\r\nexport function push_all_full(obj) {\r\n    for (var key in obj){\r\n        if (key !== \"koef\"){\r\n            obj[key] = \"Полная\"\r\n        }\r\n    }\r\n}\r\n\r\nexport function delete_all_props(obj) {\r\n    for (var key in obj){\r\n        obj[key] = \"\"\r\n    }\r\n}\r\n\r\nexport function prepare_for_put_inform_method(arr, methods, service_devices) {\r\n    var post_inform_method = [];\r\n    var id_post = null;\r\n    for (var i = 0; i < arr.length; i++) {\r\n        if (arr[i].id === null)\r\n            id_post = -arr[i].index;\r\n        else\r\n            id_post = arr[i].id;\r\n        post_inform_method[i] = {\r\n            ...arr[i],\r\n            id: id_post,\r\n            method_id: methods.find(m => m.name === arr[i].method).id,\r\n            service_device_id: service_devices.find(s => s.tool_type === arr[i].tool_type).service_device_id\r\n        }\r\n        delete post_inform_method[i].method;\r\n        delete post_inform_method[i].tool_type;\r\n        delete post_inform_method[i].index;\r\n    }\r\n    return post_inform_method;\r\n}\r\n\r\nexport function prepare_for_post_inform_method(arr, methods, service_devices) {\r\n    var post_inform_method = [];\r\n    for (var i = 0; i < arr.length; i++) {\r\n        post_inform_method[i] = {\r\n            ...arr[i],\r\n            id: arr[i].index,\r\n            method_id: methods.find(m => m.name === arr[i].method).id,\r\n            service_device_id: service_devices.find(s => s.tool_type === arr[i].tool_type).service_device_id\r\n        }\r\n        delete post_inform_method[i].method;\r\n        delete post_inform_method[i].tool_type;\r\n        delete post_inform_method[i].index;\r\n    }\r\n    return post_inform_method;\r\n}\r\n\r\nexport function prepare_for_put_secondtable(arr, methods) {\r\n    var post_second_table = [];\r\n    var id_post = null;\r\n    for (var i = 0; i < arr.length; i++) {\r\n        if (arr[i].inform_for_method_id !== null)\r\n            id_post = arr[i].inform_for_method_id;\r\n        else\r\n            id_post = -arr[i].index;\r\n        post_second_table[i] = {\r\n            ...arr[i],\r\n            inform_for_method_id: id_post,\r\n            method_id: methods.find(m => m.name === arr[i].method).id\r\n        }\r\n        delete post_second_table[i].method;\r\n        delete post_second_table[i].index;\r\n    }\r\n    return post_second_table;\r\n}\r\n\r\nexport function prepare_for_post_secondtable(arr, methods) {\r\n    var post_second_table = [];\r\n    for (var i = 0; i < arr.length; i++) {\r\n        post_second_table[i] = {\r\n            ...arr[i],\r\n            inform_for_method_id: arr[i].index,\r\n            method_id: methods.find(m => m.name === arr[i].method).id\r\n        }\r\n        delete post_second_table[i].method;\r\n        delete post_second_table[i].index;\r\n    }\r\n    return post_second_table;\r\n}\r\n\r\nexport function check_validity(customer, field, num_pad, num_well, num_wellbore, data_type, section_interval_start, section_interval_end) {\r\n    var checkvalues = false;\r\n    customer === \"\" || field === \"\" || num_pad === \"\" || num_well === \"\" || num_wellbore === \"\" || data_type === \"\" || section_interval_start === null || section_interval_end === null ? checkvalues = false : checkvalues = true;\r\n    return checkvalues\r\n}","import tinycolor from \"tinycolor2\";\r\n\r\nconst primary = \"#34547A\";\r\nconst secondary = \"#FF5C93\";\r\nconst warning = \"#FFC260\";\r\nconst success = \"#3CD4A0\";\r\nconst info = \"#9013FE\";\r\n\r\nconst lightenRate = 7.5;\r\nconst darkenRate = 15;\r\n\r\nconst defaultTheme = {\r\n  palette: {\r\n    primary: {\r\n      main: primary,\r\n      light: tinycolor(primary)\r\n        .lighten(lightenRate)\r\n        .toHexString(),\r\n      dark: tinycolor(primary)\r\n        .darken(darkenRate)\r\n        .toHexString(),\r\n    },\r\n    secondary: {\r\n      main: secondary,\r\n      light: tinycolor(secondary)\r\n        .lighten(lightenRate)\r\n        .toHexString(),\r\n      dark: tinycolor(secondary)\r\n        .darken(darkenRate)\r\n        .toHexString(),\r\n      contrastText: \"#FFFFFF\",\r\n    },\r\n    warning: {\r\n      main: warning,\r\n      light: tinycolor(warning)\r\n        .lighten(lightenRate)\r\n        .toHexString(),\r\n      dark: tinycolor(warning)\r\n        .darken(darkenRate)\r\n        .toHexString(),\r\n    },\r\n    success: {\r\n      main: success,\r\n      light: tinycolor(success)\r\n        .lighten(lightenRate)\r\n        .toHexString(),\r\n      dark: tinycolor(success)\r\n        .darken(darkenRate)\r\n        .toHexString(),\r\n    },\r\n    info: {\r\n      main: info,\r\n      light: tinycolor(info)\r\n        .lighten(lightenRate)\r\n        .toHexString(),\r\n      dark: tinycolor(info)\r\n        .darken(darkenRate)\r\n        .toHexString(),\r\n    },\r\n    text: {\r\n      primary: \"#4A4A4A\",\r\n      secondary: \"#6E6E6E\",\r\n      hint: \"#B9B9B9\",\r\n      title: \"#34547A\"\r\n    },\r\n    background: {\r\n      default: \"#FFFCF3\",\r\n      light: \"#f0f0f0\",\r\n    },\r\n  },\r\n  customShadows: {\r\n    widget:\r\n      \"0px 3px 11px 0px #E8EAFC, 0 3px 3px -2px #B2B2B21A, 0 1px 8px 0 #9A9A9A1A\",\r\n    widgetDark:\r\n      \"0px 3px 18px 0px #4558A3B3, 0 3px 3px -2px #B2B2B21A, 0 1px 8px 0 #9A9A9A1A\",\r\n    widgetWide:\r\n      \"0px 12px 33px 0px #E8EAFC, 0 3px 3px -2px #B2B2B21A, 0 1px 8px 0 #9A9A9A1A\",\r\n  },\r\n  overrides: {\r\n    MuiBackdrop: {\r\n      root: {\r\n        backgroundColor: \"#4A4A4A1A\",\r\n      },\r\n    },\r\n    MuiMenu: {\r\n      paper: {\r\n        boxShadow:\r\n          \"0px 3px 11px 0px #E8EAFC, 0 3px 3px -2px #B2B2B21A, 0 1px 8px 0 #9A9A9A1A\",\r\n      },\r\n    },\r\n    MuiSelect: {\r\n      icon: {\r\n        color: \"#B9B9B9\",\r\n      },\r\n    },\r\n    MuiListItem: {\r\n      root: {\r\n        \"&$selected\": {\r\n          backgroundColor: \"#F3F5FF !important\",\r\n          \"&:focus\": {\r\n            backgroundColor: \"#F3F5FF\",\r\n          },\r\n        },\r\n      },\r\n      button: {\r\n        \"&:hover, &:focus\": {\r\n          backgroundColor: \"#F3F5FF\",\r\n        },\r\n      },\r\n    },\r\n    MuiTouchRipple: {\r\n      child: {\r\n        backgroundColor: \"white\",\r\n      },\r\n    },\r\n    MuiTableRow: {\r\n      root: {\r\n        height: 56,\r\n      },\r\n    },\r\n    MuiTableCell: {\r\n      root: {\r\n        borderBottom: \"1px solid rgba(224, 224, 224, .5)\",\r\n        paddingLeft: 24\r\n      },\r\n      head: {\r\n        fontSize: \"0.95rem\",\r\n      },\r\n      body: {\r\n        fontSize: \"0.95rem\",\r\n      },\r\n    },\r\n    PrivateSwitchBase: {\r\n      root: {\r\n        marginLeft: 10\r\n      }\r\n    }\r\n  },\r\n};\r\n\r\nexport default defaultTheme;\r\n","import defaultTheme from \"./default\";\r\n\r\nimport { createTheme } from \"@material-ui/core/styles\";\r\n\r\nconst overrides = {\r\n  typography: {\r\n    h1: {\r\n      fontSize: \"3rem\",\r\n    },\r\n    h2: {\r\n      fontSize: \"2rem\",\r\n    },\r\n    h3: {\r\n      fontSize: \"1.64rem\",\r\n    },\r\n    h4: {\r\n      fontSize: \"1.5rem\",\r\n    },\r\n    h5: {\r\n      fontSize: \"1.285rem\",\r\n    },\r\n    h6: {\r\n      fontSize: \"1.142rem\",\r\n    },\r\n    fontFamily: [\r\n      '\"Nunito\"', 'sans-serif'\r\n    ].join(','),\r\n  },\r\n};\r\n\r\nconst themes = {\r\n  default: createTheme({ ...defaultTheme, ...overrides }),\r\n};\r\n\r\nexport default themes;\r\n","import { makeStyles } from \"@material-ui/styles\";\r\n\r\nexport default makeStyles(theme => ({\r\n  root: {\r\n    display: \"flex\",\r\n    maxWidth: \"100vw\",\r\n    overflowX: \"hidden\",\r\n  },\r\n  content: {\r\n    flexGrow: 1,\r\n    padding: theme.spacing(3),\r\n    width: `calc(100vw - 240px)`,\r\n    minHeight: \"100vh\",\r\n  },\r\n  contentShift: {\r\n    width: `calc(100vw - ${240 + theme.spacing(6)}px)`,\r\n    transition: theme.transitions.create([\"width\", \"margin\"], {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.enteringScreen,\r\n    }),\r\n  },\r\n  fakeToolbar: {\r\n    ...theme.mixins.toolbar,\r\n  },\r\n  link: {\r\n    '&:not(:first-child)': {\r\n      paddingLeft: 15\r\n    }\r\n  }\r\n}));\r\n","import { makeStyles } from \"@material-ui/styles\";\r\nimport { alpha } from \"@material-ui/core/styles/colorManipulator\";\r\n\r\nexport default makeStyles(theme => ({\r\n  logotype: {\r\n    color: \"white\",\r\n    marginLeft: theme.spacing(2.5),\r\n    marginRight: theme.spacing(2.5),\r\n    fontWeight: 500,\r\n    fontSize: 18,\r\n    whiteSpace: \"nowrap\",\r\n    [theme.breakpoints.down(\"xs\")]: {\r\n      display: \"none\",\r\n    },\r\n  },\r\n  appBar: {\r\n    width: \"100vw\",\r\n    zIndex: theme.zIndex.drawer + 1,\r\n    transition: theme.transitions.create([\"margin\"], {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.leavingScreen,\r\n    }),\r\n  },\r\n  toolbar: {\r\n    paddingLeft: theme.spacing(2),\r\n    paddingRight: theme.spacing(2),\r\n  },\r\n  hide: {\r\n    display: \"none\",\r\n  },\r\n  grow: {\r\n    flexGrow: 1,\r\n  },\r\n  search: {\r\n    position: \"relative\",\r\n    borderRadius: 25,\r\n    paddingLeft: theme.spacing(2.5),\r\n    width: 36,\r\n    backgroundColor: alpha(theme.palette.common.black, 0),\r\n    transition: theme.transitions.create([\"background-color\", \"width\"]),\r\n    \"&:hover\": {\r\n      cursor: \"pointer\",\r\n      backgroundColor: alpha(theme.palette.common.black, 0.08),\r\n    },\r\n  },\r\n  searchFocused: {\r\n    backgroundColor: alpha(theme.palette.common.black, 0.08),\r\n    width: \"100%\",\r\n    [theme.breakpoints.up(\"md\")]: {\r\n      width: 250,\r\n    },\r\n  },\r\n  searchIcon: {\r\n    width: 36,\r\n    right: 0,\r\n    height: \"100%\",\r\n    position: \"absolute\",\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n    transition: theme.transitions.create(\"right\"),\r\n    \"&:hover\": {\r\n      cursor: \"pointer\",\r\n    },\r\n  },\r\n  searchIconOpened: {\r\n    right: theme.spacing(1.25),\r\n  },\r\n  inputRoot: {\r\n    color: \"inherit\",\r\n    width: \"100%\",\r\n  },\r\n  inputInput: {\r\n    height: 36,\r\n    padding: 0,\r\n    paddingRight: 36 + theme.spacing(1.25),\r\n    width: \"100%\",\r\n  },\r\n  messageContent: {\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n  },\r\n  headerMenu: {\r\n    marginTop: theme.spacing(7),\r\n  },\r\n  headerMenuList: {\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n  },\r\n  headerMenuItem: {\r\n    \"&:hover, &:focus\": {\r\n      backgroundColor: theme.palette.background.light,\r\n      // color: \"white\",\r\n    },\r\n  },\r\n  headerMenuButton: {\r\n    marginLeft: theme.spacing(2),\r\n    padding: theme.spacing(0.5),\r\n  },\r\n  headerMenuButtonSandwich: {\r\n    marginLeft: 9,\r\n    [theme.breakpoints.down(\"sm\")]: {\r\n      marginLeft: 0\r\n    },\r\n    padding: theme.spacing(0.5),\r\n  },\r\n  headerMenuButtonCollapse: {\r\n    marginRight: theme.spacing(2),\r\n  },\r\n  headerIcon: {\r\n    fontSize: 28,\r\n    color: \"rgba(255, 255, 255, 0.35)\",\r\n  },\r\n  headerIconCollapse: {\r\n    color: \"white\",\r\n  },\r\n  profileMenu: {\r\n    minWidth: 265,\r\n  },\r\n  profileMenuUser: {\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    padding: theme.spacing(2),\r\n  },\r\n  profileMenuItem: {\r\n    color: theme.palette.text.hint,\r\n  },\r\n  profileMenuIcon: {\r\n    marginRight: theme.spacing(2),\r\n    color: theme.palette.text.hint,\r\n    '&:hover': {\r\n      color: theme.palette.primary.main,\r\n    }\r\n  },\r\n  profileMenuLink: {\r\n    fontSize: 16,\r\n    textDecoration: \"none\",\r\n    \"&:hover\": {\r\n      cursor: \"pointer\",\r\n    },\r\n  },\r\n  messageNotification: {\r\n    height: \"auto\",\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    \"&:hover, &:focus\": {\r\n      backgroundColor: theme.palette.background.light,\r\n    },\r\n  },\r\n  messageNotificationSide: {\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    alignItems: \"center\",\r\n    marginRight: theme.spacing(2),\r\n  },\r\n  messageNotificationBodySide: {\r\n    alignItems: \"flex-start\",\r\n    marginRight: 0,\r\n  },\r\n  sendMessageButton: {\r\n    margin: theme.spacing(4),\r\n    marginTop: theme.spacing(2),\r\n    marginBottom: theme.spacing(2),\r\n    textTransform: \"none\",\r\n  },\r\n  sendButtonIcon: {\r\n    marginLeft: theme.spacing(2),\r\n  },\r\n  purchaseBtn: {\r\n    [theme.breakpoints.down('sm')]: {\r\n      display: 'none'\r\n    },\r\n    marginRight: theme.spacing(3)\r\n  }\r\n}));\r\n","import React from \"react\";\r\nimport {\r\n  withStyles,\r\n  Badge as BadgeBase,\r\n  Typography as TypographyBase,\r\n  Button as ButtonBase,\r\n} from \"@material-ui/core\";\r\nimport { useTheme, makeStyles } from \"@material-ui/styles\";\r\nimport classnames from \"classnames\";\r\n\r\n// styles\r\nvar useStyles = makeStyles(theme => ({\r\n  badge: {\r\n    fontWeight: 600,\r\n    height: 16,\r\n    minWidth: 16,\r\n  },\r\n}));\r\n\r\nfunction Badge({ children, colorBrightness, color, ...props }) {\r\n  var classes = useStyles();\r\n  var theme = useTheme();\r\n  var Styled = createStyled({\r\n    badge: {\r\n      backgroundColor: getColor(color, theme, colorBrightness),\r\n    },\r\n  });\r\n\r\n  return (\r\n    <Styled>\r\n      {styledProps => (\r\n        <BadgeBase\r\n          classes={{\r\n            badge: classnames(classes.badge, styledProps.classes.badge),\r\n          }}\r\n          {...props}\r\n        >\r\n          {children}\r\n        </BadgeBase>\r\n      )}\r\n    </Styled>\r\n  );\r\n}\r\n\r\nfunction Typography({\r\n  children,\r\n  weight,\r\n  size,\r\n  colorBrightness,\r\n  color,\r\n  ...props\r\n}) {\r\n  var theme = useTheme();\r\n\r\n  return (\r\n    <TypographyBase\r\n      style={{\r\n        color: getColor(color, theme, colorBrightness),\r\n        fontWeight: getFontWeight(weight),\r\n        fontSize: getFontSize(size, props.variant, theme),\r\n      }}\r\n      {...props}\r\n    >\r\n      {children}\r\n    </TypographyBase>\r\n  );\r\n}\r\n\r\nfunction Button({ children, color, className, ...props }) {\r\n  var theme = useTheme();\r\n\r\n  var Styled = createStyled({\r\n    root: {\r\n      color: getColor(color, theme),\r\n    },\r\n    contained: {\r\n      backgroundColor: getColor(color, theme),\r\n      boxShadow: theme.customShadows.widget,\r\n      color: `${color ? \"white\" : theme.palette.text.primary} !important`,\r\n      \"&:hover\": {\r\n        backgroundColor: getColor(color, theme, \"light\"),\r\n        boxShadow: theme.customShadows.widgetWide,\r\n      },\r\n      \"&:active\": {\r\n        boxShadow: theme.customShadows.widgetWide,\r\n      },\r\n    },\r\n    outlined: {\r\n      color: getColor(color, theme),\r\n      borderColor: getColor(color, theme),\r\n    },\r\n    select: {\r\n      backgroundColor: theme.palette.primary.main,\r\n      color: \"#fff\",\r\n    },\r\n  });\r\n\r\n  return (\r\n    <Styled>\r\n      {({ classes }) => (\r\n        <ButtonBase\r\n          classes={{\r\n            contained: classes.contained,\r\n            root: classes.root,\r\n            outlined: classes.outlined,\r\n          }}\r\n          {...props}\r\n          className={classnames(\r\n            {\r\n              [classes.select]: props.select,\r\n            },\r\n            className,\r\n          )}\r\n        >\r\n          {children}\r\n        </ButtonBase>\r\n      )}\r\n    </Styled>\r\n  );\r\n}\r\n\r\nexport { Badge, Typography, Button };\r\n\r\n// ########################################################################\r\n\r\nfunction getColor(color, theme, brigtness = \"main\") {\r\n  if (color && theme.palette[color] && theme.palette[color][brigtness]) {\r\n    return theme.palette[color][brigtness];\r\n  }\r\n}\r\n\r\nfunction getFontWeight(style) {\r\n  switch (style) {\r\n    case \"light\":\r\n      return 300;\r\n    case \"medium\":\r\n      return 500;\r\n    case \"bold\":\r\n      return 600;\r\n    default:\r\n      return 400;\r\n  }\r\n}\r\n\r\nfunction getFontSize(size, variant = \"\", theme) {\r\n  var multiplier;\r\n\r\n  switch (size) {\r\n    case \"sm\":\r\n      multiplier = 0.8;\r\n      break;\r\n    case \"md\":\r\n      multiplier = 1.5;\r\n      break;\r\n    case \"xl\":\r\n      multiplier = 2;\r\n      break;\r\n    case \"xxl\":\r\n      multiplier = 3;\r\n      break;\r\n    default:\r\n      multiplier = 1;\r\n      break;\r\n  }\r\n\r\n  var defaultSize =\r\n    variant && theme.typography[variant]\r\n      ? theme.typography[variant].fontSize\r\n      : theme.typography.fontSize + \"px\";\r\n\r\n  return `calc(${defaultSize} * ${multiplier})`;\r\n}\r\n\r\nfunction createStyled(styles, options) {\r\n  var Styled = function(props) {\r\n    const { children, ...other } = props;\r\n    return children(other);\r\n  };\r\n\r\n  return withStyles(styles, options)(Styled);\r\n}\r\n","import React from \"react\";\r\n\r\nvar LayoutStateContext = React.createContext();\r\nvar LayoutDispatchContext = React.createContext();\r\n\r\nfunction layoutReducer(state, action) {\r\n  switch (action.type) {\r\n    case \"TOGGLE_SIDEBAR\":\r\n      return { ...state, isSidebarOpened: !state.isSidebarOpened };\r\n    default: {\r\n      throw new Error(`Unhandled action type: ${action.type}`);\r\n    }\r\n  }\r\n}\r\n\r\nfunction LayoutProvider({ children }) {\r\n  var [state, dispatch] = React.useReducer(layoutReducer, {\r\n    isSidebarOpened: false,\r\n  });\r\n  return (\r\n    <LayoutStateContext.Provider value={state}>\r\n      <LayoutDispatchContext.Provider value={dispatch}>\r\n        {children}\r\n      </LayoutDispatchContext.Provider>\r\n    </LayoutStateContext.Provider>\r\n  );\r\n}\r\n\r\nfunction useLayoutState() {\r\n  var context = React.useContext(LayoutStateContext);\r\n  if (context === undefined) {\r\n    throw new Error(\"useLayoutState must be used within a LayoutProvider\");\r\n  }\r\n  return context;\r\n}\r\n\r\nfunction useLayoutDispatch() {\r\n  var context = React.useContext(LayoutDispatchContext);\r\n  if (context === undefined) {\r\n    throw new Error(\"useLayoutDispatch must be used within a LayoutProvider\");\r\n  }\r\n  return context;\r\n}\r\n\r\nexport { LayoutProvider, useLayoutState, useLayoutDispatch, toggleSidebar };\r\n\r\n// ###########################################################\r\nfunction toggleSidebar(dispatch) {\r\n  dispatch({\r\n    type: \"TOGGLE_SIDEBAR\",\r\n  });\r\n}\r\n","import React from \"react\";\r\n\r\nimport jwt_decode from \"jwt-decode\";\r\n\r\nvar UserStateContext = React.createContext();\r\nvar UserDispatchContext = React.createContext();\r\n\r\nfunction userReducer(state, action) {\r\n  switch (action.type) {\r\n    case \"LOGIN_SUCCESS\":\r\n      return { ...state, isAuthenticated: true };\r\n    case \"SIGN_OUT_SUCCESS\":\r\n      return { ...state, isAuthenticated: false };\r\n    case \"LOGIN_FAILURE\":\r\n      return { ...state, isAuthenticated: false };\r\n    default: {\r\n      throw new Error(`Unhandled action type: ${action.type}`);\r\n    }\r\n  }\r\n}\r\n\r\nfunction UserProvider({ children }) {\r\n  var token = localStorage.getItem('id_token');\r\n  if (token !== null) {\r\n    var exp_time = jwt_decode(token).exp;\r\n    if (Date.now() >= exp_time * 1000) {\r\n      fetch(process.env.REACT_APP_API + 'api-token-refresh/',{\r\n        method: 'POST',\r\n        headers:{\r\n            'Accept':'application/json',\r\n            'Content-Type':'application/json'\r\n        },\r\n        body: JSON.stringify({\r\n            \"token\": token\r\n        }) \r\n    })\r\n    .then(response => response.json())\r\n    .then(data=>{\r\n        localStorage.setItem('id_token', data.token);\r\n      })\r\n    }\r\n    if (Date.now() - localStorage.getItem('enter_time') >= 86400000) {\r\n      localStorage.removeItem('id_token');\r\n    }\r\n  }\r\n  var [state, dispatch] = React.useReducer(userReducer, {\r\n    isAuthenticated: !!localStorage.getItem(\"id_token\"),\r\n  });\r\n\r\n  return (\r\n    <UserStateContext.Provider value={state}>\r\n      <UserDispatchContext.Provider value={dispatch}>\r\n        {children}\r\n      </UserDispatchContext.Provider>\r\n    </UserStateContext.Provider>\r\n  );\r\n}\r\n\r\nfunction useUserState() {\r\n  var context = React.useContext(UserStateContext);\r\n  if (context === undefined) {\r\n    throw new Error(\"useUserState must be used within a UserProvider\");\r\n  }\r\n  return context;\r\n}\r\n\r\nfunction useUserDispatch() {\r\n  var context = React.useContext(UserDispatchContext);\r\n  if (context === undefined) {\r\n    throw new Error(\"useUserDispatch must be used within a UserProvider\");\r\n  }\r\n  return context;\r\n}\r\n\r\nexport { UserProvider, useUserState, useUserDispatch, loginUser, signOut };\r\n\r\n// ###########################################################\r\n\r\nfunction loginUser(dispatch, login, password, history, setIsLoading, setError) {\r\n    setIsLoading(true);\r\n    setTimeout(() => {\r\n      fetch(process.env.REACT_APP_API + 'api-token-auth/',{\r\n        method: 'POST',\r\n        headers:{\r\n            'Accept':'application/json',\r\n            'Content-Type':'application/json'\r\n        },\r\n        body: JSON.stringify({\r\n            \"username\": login,\r\n            \"password\": password\r\n        }) \r\n    })\r\n    .then(response => response.json())\r\n    .then(data=>{\r\n      localStorage.setItem('id_token', data.token);\r\n      localStorage.setItem('role', data.role);\r\n      localStorage.setItem('enter_time', Date.now());\r\n      if(data.token !== undefined) {\r\n        dispatch({ type: 'LOGIN_SUCCESS' })\r\n        history.push('/app/checklist')\r\n      } else {\r\n        setError(true);\r\n        localStorage.removeItem(\"id_token\");\r\n        localStorage.removeItem(\"login\");\r\n        localStorage.removeItem(\"role\");\r\n        localStorage.removeItem(\"enter_time\");\r\n        //dispatch({ type: \"LOGIN_FAILURE\" });\r\n      }\r\n    })\r\n      setIsLoading(false)\r\n    }, 2000);\r\n}\r\n\r\nfunction signOut(dispatch, history) {\r\n  localStorage.removeItem(\"id_token\");\r\n  localStorage.removeItem(\"login\");\r\n  dispatch({ type: \"SIGN_OUT_SUCCESS\" });\r\n  history.push(\"/login\");\r\n}\r\n","import React, { useState } from \"react\";\r\nimport {\r\n  AppBar,\r\n  Toolbar,\r\n  IconButton,\r\n  Menu\r\n} from \"@material-ui/core\";\r\nimport {\r\n  Menu as MenuIcon,\r\n  Person as AccountIcon,\r\n  ArrowBack as ArrowBackIcon,\r\n} from \"@material-ui/icons\";\r\nimport classNames from \"classnames\";\r\n\r\n// styles\r\nimport useStyles from \"./styles\";\r\n\r\nimport { useHistory } from \"react-router\";\r\n\r\n// components\r\nimport { Typography } from \"../Wrappers\";\r\n\r\n// context\r\nimport {\r\n  useLayoutState,\r\n  useLayoutDispatch,\r\n  toggleSidebar,\r\n} from \"../../context/LayoutContext\";\r\nimport { useUserDispatch, signOut } from \"../../context/UserContext\";\r\n\r\nexport default function Header(props) {\r\n  var classes = useStyles();\r\n  const history = useHistory();\r\n\r\n  // global\r\n  var layoutState = useLayoutState();\r\n  var layoutDispatch = useLayoutDispatch();\r\n  var userDispatch = useUserDispatch();\r\n\r\n  // local\r\n  var [profileMenu, setProfileMenu] = useState(null);\r\n\r\n  return (\r\n    <AppBar position=\"fixed\" className={classes.appBar} style={{backgroundColor: \"#95A0B2\"}}>\r\n      <Toolbar className={classes.toolbar}>\r\n        <IconButton\r\n          color=\"inherit\"\r\n          onClick={() => toggleSidebar(layoutDispatch)}\r\n          className={classNames(\r\n            classes.headerMenuButtonSandwich,\r\n            classes.headerMenuButtonCollapse,\r\n          )}\r\n          style={{outline: \"none\"}}\r\n        >\r\n          {layoutState.isSidebarOpened ? (\r\n            <ArrowBackIcon\r\n              classes={{\r\n                root: classNames(\r\n                  classes.headerIcon,\r\n                  classes.headerIconCollapse,\r\n                ),\r\n              }}\r\n            />\r\n          ) : (\r\n            <MenuIcon\r\n              classes={{\r\n                root: classNames(\r\n                  classes.headerIcon,\r\n                  classes.headerIconCollapse,\r\n                ),\r\n              }}\r\n            />\r\n          )}\r\n        </IconButton>\r\n        <Typography variant=\"h6\" weight=\"medium\" className={classes.logotype}>\r\n          Качество данных ГИС\r\n        </Typography>\r\n        <div className={classes.grow} />\r\n        <IconButton\r\n          aria-haspopup=\"true\"\r\n          color=\"inherit\"\r\n          className={classes.headerMenuButton}\r\n          aria-controls=\"profile-menu\"\r\n          onClick={e => setProfileMenu(e.currentTarget)}\r\n          style={{outline: \"none\"}}\r\n        >\r\n          <AccountIcon classes={{ root: classes.headerIcon }} style={{color: \"white\"}}/>\r\n        </IconButton>\r\n        <Menu\r\n          id=\"profile-menu\"\r\n          open={Boolean(profileMenu)}\r\n          anchorEl={profileMenu}\r\n          onClose={() => setProfileMenu(null)}\r\n          className={classes.headerMenu}\r\n          classes={{ paper: classes.profileMenu }}\r\n          disableAutoFocusItem\r\n        >\r\n          <div className={classes.profileMenuUser}>\r\n            <Typography variant=\"h4\" weight=\"medium\">\r\n              {localStorage.getItem('login')}\r\n            </Typography>\r\n          </div>\r\n          <div className={classes.profileMenuUser}>\r\n            <Typography\r\n              className={classes.profileMenuLink}\r\n              color=\"primary\"\r\n              onClick={() => history.push({pathname: \"/app/admin\"})}\r\n              style={{display:(localStorage.getItem('role') === \"superuser\" ? 'inline-block' : 'none')}}\r\n            >\r\n              Управление пользователями\r\n            </Typography>\r\n            </div>\r\n            <div className={classes.profileMenuUser}>\r\n            <Typography\r\n              className={classes.profileMenuLink}\r\n              color=\"primary\"\r\n              onClick={() => signOut(userDispatch, props.history)}\r\n            >\r\n              Выйти из профиля\r\n            </Typography>\r\n          </div>\r\n        </Menu>\r\n      </Toolbar>\r\n    </AppBar>\r\n  );\r\n}\r\n","import { makeStyles } from \"@material-ui/styles\";\r\n\r\nconst drawerWidth = 300;\r\n\r\nexport default makeStyles(theme => ({\r\n  menuButton: {\r\n    marginLeft: 12,\r\n    marginRight: 36,\r\n  },\r\n  hide: {\r\n    display: \"none\",\r\n  },\r\n  drawer: {\r\n    width: drawerWidth,\r\n    flexShrink: 0,\r\n    whiteSpace: \"nowrap\"\r\n  },\r\n  drawerOpen: {\r\n    width: drawerWidth,\r\n    transition: theme.transitions.create(\"width\", {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.enteringScreen,\r\n    }),\r\n  },\r\n  drawerClose: {\r\n    transition: theme.transitions.create(\"width\", {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.leavingScreen,\r\n    }),\r\n    overflowX: \"hidden\",\r\n    width: theme.spacing(7) + 40,\r\n    [theme.breakpoints.down(\"sm\")]: {\r\n      width: drawerWidth,\r\n    },\r\n  },\r\n  toolbar: {\r\n    ...theme.mixins.toolbar,\r\n    [theme.breakpoints.down(\"sm\")]: {\r\n      display: \"none\",\r\n    },\r\n  },\r\n  content: {\r\n    flexGrow: 1,\r\n    padding: theme.spacing(3),\r\n  },\r\n  /* sidebarList: {\r\n    marginTop: theme.spacing(6),\r\n  }, */\r\n  mobileBackButton: {\r\n    marginTop: theme.spacing(0.5),\r\n    marginLeft: 18,\r\n    [theme.breakpoints.only(\"sm\")]: {\r\n      marginTop: theme.spacing(0.625),\r\n    },\r\n    [theme.breakpoints.up(\"md\")]: {\r\n      display: \"none\",\r\n    },\r\n  },\r\n}));\r\n","import { makeStyles } from \"@material-ui/styles\";\r\n\r\nexport default makeStyles(theme => ({\r\n  link: {\r\n    textDecoration: \"none\",\r\n    \"&:hover, &:focus\": {\r\n      backgroundColor: theme.palette.background.light,\r\n    },\r\n  },\r\n  externalLink: {\r\n    display: 'flex',\r\n    justifyContent: 'center',\r\n    alignItems: 'center',\r\n    textDecoration: 'none'\r\n  },\r\n  linkActive: {\r\n    backgroundColor: theme.palette.background.light,\r\n  },\r\n  linkNested: {\r\n    paddingLeft: 0,\r\n    \"&:hover, &:focus\": {\r\n      backgroundColor: \"#FFFFFF\",\r\n    },\r\n  },\r\n  linkIcon: {\r\n    marginRight: theme.spacing(1),\r\n    color: theme.palette.text.secondary + \"99\",\r\n    transition: theme.transitions.create(\"color\"),\r\n    width: 24,\r\n    display: \"flex\",\r\n    justifyContent: \"center\",\r\n  },\r\n  linkIconActive: {\r\n    color: theme.palette.primary.main,\r\n  },\r\n  linkText: {\r\n    padding: 0,\r\n    color: theme.palette.text.secondary + \"CC\",\r\n    transition: theme.transitions.create([\"opacity\", \"color\"]),\r\n    fontSize: 16,\r\n  },\r\n  linkTextActive: {\r\n    color: theme.palette.text.primary,\r\n  },\r\n  linkTextHidden: {\r\n    opacity: 0,\r\n  },\r\n  nestedList: {\r\n    paddingLeft: theme.spacing(2) + 30,\r\n  },\r\n  sectionTitle: {\r\n    marginLeft: theme.spacing(4.5),\r\n    marginTop: theme.spacing(2),\r\n    marginBottom: theme.spacing(2),\r\n  },\r\n  divider: {\r\n    marginTop: theme.spacing(2),\r\n    marginBottom: theme.spacing(4),\r\n    height: 1,\r\n    backgroundColor: \"#D8D8D880\",\r\n  },\r\n}));\r\n","import React from \"react\";\r\nimport { makeStyles, useTheme } from \"@material-ui/styles\";\r\nimport classnames from \"classnames\";\r\n\r\n// styles\r\nvar useStyles = makeStyles(theme => ({\r\n  dotBase: {\r\n    width: 8,\r\n    height: 8,\r\n    backgroundColor: theme.palette.text.hint,\r\n    borderRadius: \"50%\",\r\n    transition: theme.transitions.create(\"background-color\"),\r\n  },\r\n  dotSmall: {\r\n    width: 5,\r\n    height: 5\r\n  },\r\n  dotLarge: {\r\n    width: 11,\r\n    height: 11,\r\n  },\r\n}));\r\n\r\nexport default function Dot({ size, color }) {\r\n  var classes = useStyles();\r\n  var theme = useTheme();\r\n\r\n  return (\r\n    <div\r\n      className={classnames(classes.dotBase, {\r\n        [classes.dotLarge]: size === \"large\",\r\n        [classes.dotSmall]: size === \"small\",\r\n      })}\r\n      style={{\r\n        backgroundColor:\r\n          color && theme.palette[color] && theme.palette[color].main,\r\n      }}\r\n    />\r\n  );\r\n}\r\n","import React, { useState } from \"react\";\r\nimport {\r\n  Collapse,\r\n  Divider,\r\n  List,\r\n  ListItem,\r\n  ListItemIcon,\r\n  ListItemText,\r\n  Typography,\r\n} from \"@material-ui/core\";\r\nimport { Inbox as InboxIcon } from \"@material-ui/icons\";\r\nimport { Link } from \"react-router-dom\";\r\nimport classnames from \"classnames\";\r\n\r\n// styles\r\nimport useStyles from \"./styles\";\r\n\r\n// components\r\nimport Dot from \"../Dot\";\r\n\r\nexport default function SidebarLink({\r\n  link,\r\n  icon,\r\n  label,\r\n  children,\r\n  location,\r\n  isSidebarOpened,\r\n  nested,\r\n  type,\r\n}) {\r\n  var classes = useStyles();\r\n\r\n  // local\r\n  var [isOpen, setIsOpen] = useState(false);\r\n  var isLinkActive =\r\n    link &&\r\n    (location.pathname === link || location.pathname.indexOf(link) !== -1);\r\n\r\n  if (type === \"title\")\r\n    return (\r\n      <Typography\r\n        className={classnames(classes.linkText, classes.sectionTitle, {\r\n          [classes.linkTextHidden]: !isSidebarOpened,\r\n        })}\r\n      >\r\n        {label}\r\n      </Typography>\r\n    );\r\n\r\n  if (type === \"divider\") return <Divider className={classes.divider} />;\r\n  if (link && link.includes('http')) {\r\n    return (\r\n      <ListItem\r\n        button\r\n        className={classes.link}\r\n        classes={{\r\n          root: classnames(classes.linkRoot, {\r\n            [classes.linkActive]: isLinkActive && !nested,\r\n            [classes.linkNested]: nested,\r\n          }),\r\n        }}\r\n        disableRipple\r\n      >\r\n        <a className={classes.externalLink} href={link}>\r\n        <ListItemIcon\r\n          className={classnames(classes.linkIcon, {\r\n            [classes.linkIconActive]: isLinkActive,\r\n          })}\r\n        >\r\n          {nested ? <Dot color={isLinkActive && \"primary\"} /> : icon}\r\n        </ListItemIcon>\r\n        <ListItemText\r\n          classes={{\r\n            primary: classnames(classes.linkText, {\r\n              [classes.linkTextActive]: isLinkActive,\r\n              [classes.linkTextHidden]: !isSidebarOpened,\r\n            }),\r\n          }}\r\n          primary={label}\r\n        />\r\n        </a>\r\n      </ListItem>\r\n    )\r\n  }\r\n  if (!children)\r\n    return (\r\n      <ListItem\r\n        button\r\n        component={link && Link}\r\n        to={link}\r\n        className={classes.link}\r\n        classes={{\r\n          root: classnames(classes.linkRoot, {\r\n            [classes.linkActive]: isLinkActive && !nested,\r\n            [classes.linkNested]: nested,\r\n          }),\r\n        }}\r\n        disableRipple\r\n      >\r\n        <ListItemIcon\r\n          className={classnames(classes.linkIcon, {\r\n            [classes.linkIconActive]: isLinkActive,\r\n          })}\r\n        >\r\n          {nested ? <Dot color={isLinkActive && \"primary\"} /> : icon}\r\n        </ListItemIcon>\r\n        <ListItemText\r\n          classes={{\r\n            primary: classnames(classes.linkText, {\r\n              [classes.linkTextActive]: isLinkActive,\r\n              [classes.linkTextHidden]: !isSidebarOpened,\r\n            }),\r\n          }}\r\n          primary={label}\r\n        />\r\n      </ListItem>\r\n    );\r\n\r\n  return (\r\n    <>\r\n      <ListItem\r\n        button\r\n        component={link && Link}\r\n        onClick={toggleCollapse}\r\n        className={classes.link}\r\n        to={link}\r\n        disableRipple\r\n      >\r\n        <ListItemIcon\r\n          className={classnames(classes.linkIcon, {\r\n            [classes.linkIconActive]: isLinkActive,\r\n          })}\r\n        >\r\n          {icon ? icon : <InboxIcon />}\r\n        </ListItemIcon>\r\n        <ListItemText\r\n          classes={{\r\n            primary: classnames(classes.linkText, {\r\n              [classes.linkTextActive]: isLinkActive,\r\n              [classes.linkTextHidden]: !isSidebarOpened,\r\n            }),\r\n          }}\r\n          primary={label}\r\n        />\r\n      </ListItem>\r\n      {children && (\r\n        <Collapse\r\n          in={isOpen && isSidebarOpened}\r\n          timeout=\"auto\"\r\n          unmountOnExit\r\n          className={classes.nestedList}\r\n        >\r\n          <List component=\"div\" disablePadding>\r\n            {children.map(childrenLink => (\r\n              <SidebarLink\r\n                key={childrenLink && childrenLink.link}\r\n                location={location}\r\n                isSidebarOpened={isSidebarOpened}\r\n                classes={classes}\r\n                nested\r\n                {...childrenLink}\r\n              />\r\n            ))}\r\n          </List>\r\n        </Collapse>\r\n      )}\r\n    </>\r\n  );\r\n\r\n  // ###########################################################\r\n\r\n  function toggleCollapse(e) {\r\n    if (isSidebarOpened) {\r\n      e.preventDefault();\r\n      setIsOpen(!isOpen);\r\n    }\r\n  }\r\n}\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { Drawer, IconButton, List } from \"@material-ui/core\";\r\nimport {\r\n  Delete as DeleteIcon,\r\n  Layers as LayersIcon,\r\n  ArrowBack as ArrowBackIcon,\r\n  Person as PersonIcon,\r\n  Settings as SettingsIcon,\r\n  Description as DescriptionIcon,\r\n  NoteAdd as NoteAddIcon,\r\n  Help as HelpIcon,\r\n  Equalizer as EqualizerIcon,\r\n  Storage as StorageIcon\r\n} from \"@material-ui/icons\";\r\nimport { useTheme } from \"@material-ui/styles\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport classNames from \"classnames\";\r\n\r\n// styles\r\nimport useStyles from \"./styles\";\r\n\r\n// components\r\nimport SidebarLink from \"./components/SidebarLink/SidebarLink\";\r\nimport Dot from \"./components/Dot\";\r\n\r\n// context\r\nimport {\r\n  useLayoutState,\r\n  useLayoutDispatch,\r\n  toggleSidebar,\r\n} from \"../../context/LayoutContext\";\r\n\r\nconst structure = [\r\n  { id: 0, label: \"Статистика\", link: \"/app/dashboard\", icon: <EqualizerIcon /> },\r\n  { id: 1, \r\n    label: \"Создать отчёт\", \r\n    link: \"/app/checklist\", \r\n    icon: <NoteAddIcon />\r\n  },\r\n  { id: 2, type: \"divider\" },\r\n  { \r\n    id: 3, \r\n    label: \"Общества группы\",\r\n    link: \"/app/customers\",\r\n    icon: <PersonIcon/>\r\n  },\r\n  { \r\n    id: 4, \r\n    label: \"Сервисные компании\",\r\n    link: \"/app/services\",\r\n    icon: <SettingsIcon/>\r\n  },\r\n  { \r\n    id: 5, \r\n    label: \"База данных скважин\",\r\n    link: \"/app/database\",\r\n    icon: <StorageIcon/>\r\n  },\r\n  { \r\n    id: 6, \r\n    label: \"Отчёты\",\r\n    link: \"/app/reports\",\r\n    icon: <DescriptionIcon/> \r\n  },\r\n  { id: 7, type: \"divider\" },\r\n  { \r\n    id: 8, \r\n    label: \"Корзина\",\r\n    link: \"/app/trash\",\r\n    icon: <DeleteIcon/> \r\n  },\r\n  { \r\n    id: 9, \r\n    label: \"Логи\",\r\n    link: \"/app/logs\",\r\n    icon: <LayersIcon/> \r\n  },\r\n  { \r\n    id: 10, \r\n    label: \"Помощь\",\r\n    link: \"/app/help\",\r\n    icon: <HelpIcon/> \r\n  },\r\n];\r\n\r\nfunction Sidebar({ location }) {\r\n  var classes = useStyles();\r\n  var theme = useTheme();\r\n\r\n  // global\r\n  var { isSidebarOpened } = useLayoutState();\r\n  var layoutDispatch = useLayoutDispatch();\r\n\r\n  // local\r\n  var [isPermanent, setPermanent] = useState(true);\r\n\r\n  useEffect(function() {\r\n    window.addEventListener(\"resize\", handleWindowWidthChange);\r\n    handleWindowWidthChange();\r\n    return function cleanup() {\r\n      window.removeEventListener(\"resize\", handleWindowWidthChange);\r\n    };\r\n  });\r\n\r\n  return (\r\n    <Drawer\r\n      variant={isPermanent ? \"permanent\" : \"temporary\"}\r\n      className={classNames(classes.drawer, {\r\n        [classes.drawerOpen]: isSidebarOpened,\r\n        [classes.drawerClose]: !isSidebarOpened,\r\n      })}\r\n      classes={{\r\n        paper: classNames({\r\n          [classes.drawerOpen]: isSidebarOpened,\r\n          [classes.drawerClose]: !isSidebarOpened,\r\n        }),\r\n      }}\r\n      open={isSidebarOpened}\r\n    >\r\n      <div className={classes.toolbar} />\r\n      <div className={classes.mobileBackButton}>\r\n        <IconButton onClick={() => toggleSidebar(layoutDispatch)}>\r\n          <ArrowBackIcon\r\n            classes={{\r\n              root: classNames(classes.headerIcon, classes.headerIconCollapse),\r\n            }}\r\n          />\r\n        </IconButton>\r\n      </div>\r\n      <List className={classes.sidebarList}>\r\n        {structure.map(link => (\r\n          <SidebarLink\r\n            key={link.id}\r\n            location={location}\r\n            isSidebarOpened={isSidebarOpened}\r\n            {...link}\r\n          />\r\n        ))}\r\n      </List>\r\n    </Drawer>\r\n  );\r\n\r\n  // ##################################################################\r\n  function handleWindowWidthChange() {\r\n    var windowWidth = window.innerWidth;\r\n    var breakpointWidth = theme.breakpoints.values.md;\r\n    var isSmallScreen = windowWidth < breakpointWidth;\r\n\r\n    if (isSmallScreen && isPermanent) {\r\n      setPermanent(false);\r\n    } else if (!isSmallScreen && !isPermanent) {\r\n      setPermanent(true);\r\n    }\r\n  }\r\n}\r\n\r\nexport default withRouter(Sidebar);\r\n","import { makeStyles } from \"@material-ui/styles\";\r\n\r\nexport default makeStyles(theme => ({\r\n  card: {\r\n    minHeight: \"100%\",\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n  },\r\n  visitsNumberContainer: {\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    flexGrow: 1,\r\n    paddingBottom: theme.spacing(1),\r\n  },\r\n  progressSection: {\r\n    marginBottom: theme.spacing(1),\r\n  },\r\n  progressTitle: {\r\n    marginBottom: theme.spacing(2),\r\n  },\r\n  progress: {\r\n    marginBottom: theme.spacing(1),\r\n    backgroundColor: 'rgb(236, 236, 236)',\r\n  },\r\n  pieChartLegendWrapper: {\r\n    height: \"100%\",\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    justifyContent: \"center\",\r\n    alignItems: \"flex-end\",\r\n    marginRight: theme.spacing(1),\r\n  },\r\n  legendItemContainer: {\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    marginBottom: theme.spacing(1),\r\n  },\r\n  fullHeightBody: {\r\n    display: \"flex\",\r\n    flexGrow: 1,\r\n    flexDirection: \"column\",\r\n    justifyContent: \"space-between\",\r\n  },\r\n  tableWidget: {\r\n    overflowX: \"auto\",\r\n  },\r\n  progressBarPrimary: {\r\n    backgroundColor: theme.palette.primary.main,\r\n  },\r\n  progressBarWarning: {\r\n    backgroundColor: theme.palette.warning.main,\r\n  },\r\n  performanceLegendWrapper: {\r\n    display: \"flex\",\r\n    flexGrow: 1,\r\n    alignItems: \"center\",\r\n    marginBottom: theme.spacing(1),\r\n  },\r\n  legendElement: {\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    marginRight: theme.spacing(2),\r\n  },\r\n  legendElementText: {\r\n    marginLeft: theme.spacing(1),\r\n  },\r\n  serverOverviewElement: {\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    maxWidth: \"100%\",\r\n  },\r\n  serverOverviewElementText: {\r\n    minWidth: 145,\r\n    paddingRight: theme.spacing(2),\r\n  },\r\n  serverOverviewElementChartWrapper: {\r\n    width: \"100%\",\r\n  },\r\n  mainChartBody: {\r\n    overflowX: \"auto\",\r\n  },\r\n  mainChartHeader: {\r\n    width: \"100%\",\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"space-between\",\r\n    [theme.breakpoints.only(\"xs\")]: {\r\n      flexWrap: \"wrap\",\r\n    },\r\n  },\r\n  mainChartHeaderLabels: {\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    [theme.breakpoints.only(\"xs\")]: {\r\n      order: 3,\r\n      width: \"100%\",\r\n      justifyContent: \"center\",\r\n      marginTop: theme.spacing(3),\r\n      marginBottom: theme.spacing(2),\r\n    },\r\n  },\r\n  mainChartHeaderLabel: {\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    marginLeft: theme.spacing(3),\r\n  },\r\n  mainChartSelectRoot: {\r\n    borderColor: theme.palette.text.hint + \"80 !important\",\r\n  },\r\n  mainChartSelect: {\r\n    padding: 10,\r\n    paddingRight: 25,\r\n  },\r\n  mainChartLegentElement: {\r\n    fontSize: \"18px !important\",\r\n    marginLeft: theme.spacing(1),\r\n  },\r\n  success: {\r\n    backgroundColor: theme.palette.success.main,\r\n    color: '#fff',\r\n  },\r\n  warning: {\r\n    backgroundColor: theme.palette.warning.main,\r\n    color: '#fff',\r\n  },\r\n  secondary: {\r\n    backgroundColor: theme.palette.secondary.main,\r\n    color: '#fff',\r\n  }\r\n}));\r\n","const mock = {\r\n  tasks: [\r\n    {\r\n      id: 0,\r\n      type: \"Meeting\",\r\n      title: \"Meeting with Andrew Piker\",\r\n      time: \"9:00\"\r\n    },\r\n    {\r\n      id: 1,\r\n      type: \"Call\",\r\n      title: \"Call with HT Company\",\r\n      time: \"12:00\"\r\n    },\r\n    {\r\n      id: 2,\r\n      type: \"Meeting\",\r\n      title: \"Meeting with Zoe Alison\",\r\n      time: \"14:00\"\r\n    },\r\n    {\r\n      id: 3,\r\n      type: \"Interview\",\r\n      title: \"Interview with HR\",\r\n      time: \"15:00\"\r\n    }\r\n  ],\r\n  bigStat: [\r\n    {\r\n      product: \"Light Blue\",\r\n      total: {\r\n        monthly: 4232,\r\n        weekly: 1465,\r\n        daily: 199,\r\n        percent: { value: 3.7, profit: false }\r\n      },\r\n      color: \"primary\",\r\n      registrations: {\r\n        monthly: { value: 830, profit: false },\r\n        weekly: { value: 215, profit: true },\r\n        daily: { value: 33, profit: true }\r\n      },\r\n      bounce: {\r\n        monthly: { value: 4.5, profit: false },\r\n        weekly: { value: 3, profit: true },\r\n        daily: { value: 3.25, profit: true }\r\n      }\r\n    },\r\n    {\r\n      product: \"Sing App\",\r\n      total: {\r\n        monthly: 754,\r\n        weekly: 180,\r\n        daily: 27,\r\n        percent: { value: 2.5, profit: true }\r\n      },\r\n      color: \"warning\",\r\n      registrations: {\r\n        monthly: { value: 32, profit: true },\r\n        weekly: { value: 8, profit: true },\r\n        daily: { value: 2, profit: false }\r\n      },\r\n      bounce: {\r\n        monthly: { value: 2.5, profit: true },\r\n        weekly: { value: 4, profit: false },\r\n        daily: { value: 4.5, profit: false }\r\n      }\r\n    },\r\n    {\r\n      product: \"RNS\",\r\n      total: {\r\n        monthly: 1025,\r\n        weekly: 301,\r\n        daily: 44,\r\n        percent: { value: 3.1, profit: true }\r\n      },\r\n      color: \"secondary\",\r\n      registrations: {\r\n        monthly: { value: 230, profit: true },\r\n        weekly: { value: 58, profit: false },\r\n        daily: { value: 15, profit: false }\r\n      },\r\n      bounce: {\r\n        monthly: { value: 21.5, profit: false },\r\n        weekly: { value: 19.35, profit: false },\r\n        daily: { value: 10.1, profit: true }\r\n      }\r\n    }\r\n  ],\r\n  notifications: [\r\n    {\r\n      id: 0,\r\n      icon: \"thumbs-up\",\r\n      color: \"primary\",\r\n      content:\r\n        'Ken <span className=\"fw-semi-bold\">accepts</span> your invitation'\r\n    },\r\n    {\r\n      id: 1,\r\n      icon: \"file\",\r\n      color: \"success\",\r\n      content: \"Report from LT Company\"\r\n    },\r\n    {\r\n      id: 2,\r\n      icon: \"envelope\",\r\n      color: \"danger\",\r\n      content: '4 <span className=\"fw-semi-bold\">Private</span> Mails'\r\n    },\r\n    {\r\n      id: 3,\r\n      icon: \"comment\",\r\n      color: \"success\",\r\n      content: '3 <span className=\"fw-semi-bold\">Comments</span> to your Post'\r\n    },\r\n    {\r\n      id: 4,\r\n      icon: \"cog\",\r\n      color: \"light\",\r\n      content: 'New <span className=\"fw-semi-bold\">Version</span> of RNS app'\r\n    },\r\n    {\r\n      id: 5,\r\n      icon: \"bell\",\r\n      color: \"info\",\r\n      content:\r\n        '15 <span className=\"fw-semi-bold\">Notifications</span> from Social Apps'\r\n    }\r\n  ],\r\n  table: [\r\n    {\r\n      id: 0,\r\n      name: \"Mark Otto\",\r\n      email: \"ottoto@wxample.com\",\r\n      product: \"ON the Road\",\r\n      price: \"$25 224.2\",\r\n      date: \"11 May 2017\",\r\n      city: \"Otsego\",\r\n      status: \"Sent\"\r\n    },\r\n    {\r\n      id: 1,\r\n      name: \"Jacob Thornton\",\r\n      email: \"thornton@wxample.com\",\r\n      product: \"HP Core i7\",\r\n      price: \"$1 254.2\",\r\n      date: \"4 Jun 2017\",\r\n      city: \"Fivepointville\",\r\n      status: \"Sent\"\r\n    },\r\n    {\r\n      id: 2,\r\n      name: \"Larry the Bird\",\r\n      email: \"bird@wxample.com\",\r\n      product: \"Air Pro\",\r\n      price: \"$1 570.0\",\r\n      date: \"27 Aug 2017\",\r\n      city: \"Leadville North\",\r\n      status: \"Pending\"\r\n    },\r\n    {\r\n      id: 3,\r\n      name: \"Joseph May\",\r\n      email: \"josephmay@wxample.com\",\r\n      product: \"Version Control\",\r\n      price: \"$5 224.5\",\r\n      date: \"19 Feb 2018\",\r\n      city: \"Seaforth\",\r\n      status: \"Declined\"\r\n    },\r\n    {\r\n      id: 4,\r\n      name: \"Peter Horadnia\",\r\n      email: \"horadnia@wxample.com\",\r\n      product: \"Let's Dance\",\r\n      price: \"$43 594.7\",\r\n      date: \"1 Mar 2018\",\r\n      city: \"Hanoverton\",\r\n      status: \"Sent\"\r\n    }\r\n  ]\r\n};\r\n\r\nexport default mock;","import { makeStyles } from \"@material-ui/styles\";\r\n\r\nexport default makeStyles(theme => ({\r\n  widgetWrapper: {\r\n    display: \"flex\",\r\n    minHeight: \"100%\",\r\n  },\r\n  widgetHeader: {\r\n    padding: theme.spacing(3),\r\n    paddingBottom: theme.spacing(1),\r\n    display: \"flex\",\r\n    justifyContent: \"space-between\",\r\n    alignItems: \"center\",\r\n  },\r\n  widgetRoot: {\r\n    boxShadow: theme.customShadows.widget,\r\n  },\r\n  widgetBody: {\r\n    paddingBottom: theme.spacing(3),\r\n    paddingRight: theme.spacing(3),\r\n    paddingLeft: theme.spacing(3),\r\n  },\r\n  noPadding: {\r\n    padding: 0,\r\n  },\r\n  paper: {\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    flexGrow: 1,\r\n    overflow: \"auto\",\r\n  },\r\n  moreButton: {\r\n    margin: -theme.spacing(1),\r\n    padding: 0,\r\n    width: 40,\r\n    height: 40,\r\n    color: theme.palette.text.hint,\r\n    \"&:hover\": {\r\n      backgroundColor: theme.palette.primary.main,\r\n      color: \"rgba(255, 255, 255, 0.35)\",\r\n    },\r\n  },\r\n  noWidgetShadow: {\r\n    boxShadow: 'none'\r\n  }\r\n}));\r\n","import React, { useState } from \"react\";\r\nimport {\r\n  Paper,\r\n  IconButton,\r\n  Menu,\r\n  MenuItem,\r\n  Typography,\r\n} from \"@material-ui/core\";\r\nimport { MoreVert as MoreIcon } from \"@material-ui/icons\";\r\nimport classnames from \"classnames\";\r\n\r\n// styles\r\nimport useStyles from \"./styles\";\r\n\r\nexport default function Widget({\r\n  children,\r\n  title,\r\n  noBodyPadding,\r\n  bodyClass,\r\n  disableWidgetMenu,\r\n  header,\r\n  noHeaderPadding,\r\n  headerClass,\r\n  style,\r\n  noWidgetShadow,\r\n  ...props\r\n}) {\r\n  var classes = useStyles();\r\n\r\n  // local\r\n  var [moreButtonRef, setMoreButtonRef] = useState(null);\r\n  var [isMoreMenuOpen, setMoreMenuOpen] = useState(false);\r\n\r\n  return (\r\n    <div className={classes.widgetWrapper} style={style && {...style}}>\r\n      <Paper className={classes.paper} classes={{ root: classnames(classes.widgetRoot, {\r\n        [classes.noWidgetShadow]: noWidgetShadow\r\n        }) }}>\r\n        <div className={classnames(classes.widgetHeader, {\r\n          [classes.noPadding]: noHeaderPadding,\r\n          [headerClass]: headerClass\r\n        })}>\r\n          {header ? (\r\n            header\r\n          ) : (\r\n            <React.Fragment>\r\n              <Typography variant=\"h5\" color=\"textSecondary\" noWrap>\r\n                {title}\r\n              </Typography>\r\n              {!disableWidgetMenu && (\r\n                <IconButton\r\n                  color=\"primary\"\r\n                  classes={{ root: classes.moreButton }}\r\n                  aria-owns=\"widget-menu\"\r\n                  aria-haspopup=\"true\"\r\n                  onClick={() => setMoreMenuOpen(true)}\r\n                  buttonRef={setMoreButtonRef}\r\n                >\r\n                  <MoreIcon />\r\n                </IconButton>\r\n              )}\r\n            </React.Fragment>\r\n          )}\r\n        </div>\r\n        <div\r\n          className={classnames(classes.widgetBody, {\r\n            [classes.noPadding]: noBodyPadding,\r\n            [bodyClass]: bodyClass,\r\n          })}\r\n        >\r\n          {children}\r\n        </div>\r\n      </Paper>\r\n      <Menu\r\n        id=\"widget-menu\"\r\n        open={isMoreMenuOpen}\r\n        anchorEl={moreButtonRef}\r\n        onClose={() => setMoreMenuOpen(false)}\r\n        disableAutoFocusItem\r\n      >\r\n        <MenuItem>\r\n          <Typography>Edit</Typography>\r\n        </MenuItem>\r\n        <MenuItem>\r\n          <Typography>Copy</Typography>\r\n        </MenuItem>\r\n        <MenuItem>\r\n          <Typography>Delete</Typography>\r\n        </MenuItem>\r\n        <MenuItem>\r\n          <Typography>Print</Typography>\r\n        </MenuItem>\r\n      </Menu>\r\n    </div>\r\n  );\r\n}\r\n","import { makeStyles } from \"@material-ui/styles\";\r\n\r\nexport default makeStyles(theme => ({\r\n  pageTitleContainer: {\r\n    display: \"flex\",\r\n    justifyContent: \"space-between\",\r\n    marginBottom: theme.spacing(4),\r\n    marginTop: theme.spacing(5),\r\n  },\r\n  typo: {\r\n    color: theme.palette.text.title,\r\n  },\r\n  button: {\r\n    boxShadow: theme.customShadows.widget,\r\n    textTransform: \"none\",\r\n    \"&:active\": {\r\n      boxShadow: theme.customShadows.widgetWide,\r\n    },\r\n  },\r\n}));\r\n","import React from \"react\";\r\n\r\n// styles\r\nimport useStyles from \"./styles\";\r\n\r\n// components\r\nimport { Typography } from \"../Wrappers\";\r\n\r\nexport default function PageTitle(props) {\r\n  var classes = useStyles();\r\n\r\n  return (\r\n    <div className={classes.pageTitleContainer}>\r\n      <Typography className={classes.typo} variant=\"h1\" size=\"sm\">\r\n        {props.title}\r\n      </Typography>\r\n      {props.button && props.button}\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport {\r\n  Table,\r\n  TableRow,\r\n  TableHead,\r\n  TableBody,\r\n  TableCell,\r\n  Chip\r\n} from \"@material-ui/core\";\r\nimport useStyles from \"../../styles\";\r\n\r\nconst states = {\r\n  sent: \"success\",\r\n  pending: \"warning\",\r\n  declined: \"secondary\",\r\n};\r\n\r\nexport default function TableComponent({ data }) {\r\n  const classes = useStyles();\r\n  var keys = Object.keys(data[0]).map(i => i.toUpperCase());\r\n  keys.shift(); // delete \"id\" key\r\n\r\n  return (\r\n    <Table className=\"mb-0\">\r\n      <TableHead>\r\n        <TableRow>\r\n          {keys.map(key => (\r\n            <TableCell key={key}>{key}</TableCell>\r\n          ))}\r\n        </TableRow>\r\n      </TableHead>\r\n      <TableBody>\r\n        {data.map(({ id, name, email, product, price, date, city, status }) => (\r\n          <TableRow key={id}>\r\n            <TableCell className=\"pl-3 fw-normal\">{name}</TableCell>\r\n            <TableCell>{email}</TableCell>\r\n            <TableCell>{product}</TableCell>\r\n            <TableCell>{price}</TableCell>\r\n            <TableCell>{date}</TableCell>\r\n            <TableCell>{city}</TableCell>\r\n            <TableCell>\r\n              <Chip label={status} classes={{root: classes[states[status.toLowerCase()]]}}/>\r\n            </TableCell>\r\n          </TableRow>\r\n        ))}\r\n      </TableBody>\r\n    </Table>\r\n  );\r\n}\r\n","import { makeStyles } from \"@material-ui/styles\";\r\n\r\nexport default makeStyles(theme => ({\r\n  title: {\r\n    display: \"flex\",\r\n    flexDirection: \"row\",\r\n    justifyContent: \"space-between\",\r\n    alignItems: \"center\",\r\n    width: \"100%\",\r\n    marginBottom: theme.spacing(1),\r\n  },\r\n  bottomStatsContainer: {\r\n    display: \"flex\",\r\n    justifyContent: \"space-between\",\r\n    margin: theme.spacing(1) * -2,\r\n    marginTop: theme.spacing(1),\r\n  },\r\n  statCell: {\r\n    padding: theme.spacing(2),\r\n  },\r\n  totalValueContainer: {\r\n    display: \"flex\",\r\n    alignItems: \"flex-end\",\r\n    justifyContent: \"space-between\",\r\n  },\r\n  totalValue: {\r\n    display: \"flex\",\r\n    alignItems: \"baseline\",\r\n  },\r\n  profitArrow: {\r\n    transform: \"rotate(-45deg)\",\r\n    fill: theme.palette.success.main,\r\n  },\r\n  profitArrowDanger: {\r\n    transform: \"rotate(45deg)\",\r\n    fill: theme.palette.secondary.main,\r\n  },\r\n  selectInput: {\r\n    padding: 10,\r\n    paddingRight: 25,\r\n    \"&:focus\": {\r\n      backgroundColor: \"white\",\r\n    },\r\n  },\r\n  bodyWidgetOverflow: {\r\n    overflow: 'auto'\r\n  }\r\n}));\r\n","import React, { useState } from \"react\";\r\nimport { Grid, Select, MenuItem, Input } from \"@material-ui/core\";\r\nimport { ArrowForward as ArrowForwardIcon } from \"@material-ui/icons\";\r\nimport { useTheme } from \"@material-ui/styles\";\r\nimport { BarChart, Bar } from \"recharts\";\r\nimport classnames from \"classnames\";\r\n\r\n// styles\r\nimport useStyles from \"./styles\";\r\n\r\n// components\r\nimport Widget from \"../../../../components/Widget\";\r\nimport { Typography } from \"../../../../components/Wrappers\";\r\n\r\nexport default function BigStat(props) {\r\n  var { product, total, color, registrations, bounce } = props;\r\n  var classes = useStyles();\r\n  var theme = useTheme();\r\n\r\n  // local\r\n  var [value, setValue] = useState(\"daily\");\r\n\r\n  return (\r\n    <Widget\r\n      header={\r\n        <div className={classes.title}>\r\n          <Typography variant=\"h5\">{product}</Typography>\r\n\r\n          <Select\r\n            value={value}\r\n            onChange={e => setValue(e.target.value)}\r\n            input={\r\n              <Input\r\n                disableUnderline\r\n                classes={{ input: classes.selectInput }}\r\n              />\r\n            }\r\n            className={classes.select}\r\n          >\r\n            <MenuItem value=\"daily\">Daily</MenuItem>\r\n            <MenuItem value=\"weekly\">Weekly</MenuItem>\r\n            <MenuItem value=\"monthly\">Monthly</MenuItem>\r\n          </Select>\r\n        </div>\r\n      }\r\n      upperTitle\r\n      bodyClass={classes.bodyWidgetOverflow}\r\n    >\r\n      <div className={classes.totalValueContainer}>\r\n        <div className={classes.totalValue}>\r\n          <Typography size=\"xxl\" color=\"text\" colorBrightness=\"secondary\">\r\n            {total[value]}\r\n          </Typography>\r\n          <Typography color={total.percent.profit ? \"success\" : \"secondary\"}>\r\n            &nbsp;{total.percent.profit ? \"+\" : \"-\"}\r\n            {total.percent.value}%\r\n          </Typography>\r\n        </div>\r\n        <BarChart width={150} height={70} data={getRandomData()}>\r\n          <Bar\r\n            dataKey=\"value\"\r\n            fill={theme.palette[color].main}\r\n            radius={10}\r\n            barSize={10}\r\n          />\r\n        </BarChart>\r\n      </div>\r\n      <div className={classes.bottomStatsContainer}>\r\n        <div className={classnames(classes.statCell, classes.borderRight)}>\r\n          <Grid container alignItems=\"center\">\r\n            <Typography variant=\"h6\">{registrations[value].value}</Typography>\r\n            <ArrowForwardIcon\r\n              className={classnames(classes.profitArrow, {\r\n                [!registrations[value].profit]: classes.profitArrowDanger,\r\n              })}\r\n            />\r\n          </Grid>\r\n          <Typography size=\"sm\" color=\"text\" colorBrightness=\"secondary\">\r\n            Registrations\r\n          </Typography>\r\n        </div>\r\n        <div className={classes.statCell}>\r\n          <Grid container alignItems=\"center\">\r\n            <Typography variant=\"h6\">{bounce[value].value}%</Typography>\r\n            <ArrowForwardIcon\r\n              className={classnames(classes.profitArrow, {\r\n                [!registrations[value].profit]: classes.profitArrowDanger,\r\n              })}\r\n            />\r\n          </Grid>\r\n          <Typography size=\"sm\" color=\"text\" colorBrightness=\"secondary\">\r\n            Bounce Rate\r\n          </Typography>\r\n        </div>\r\n        <div className={classnames(classes.statCell, classes.borderRight)}>\r\n          <Grid container alignItems=\"center\">\r\n            <Typography variant=\"h6\">\r\n              {registrations[value].value * 10}\r\n            </Typography>\r\n            <ArrowForwardIcon\r\n              className={classnames(classes.profitArrow, {\r\n                [classes.profitArrowDanger]: !registrations[value].profit,\r\n              })}\r\n            />\r\n          </Grid>\r\n          <Typography size=\"sm\" color=\"text\" colorBrightness=\"secondary\">\r\n            Views\r\n          </Typography>\r\n        </div>\r\n      </div>\r\n    </Widget>\r\n  );\r\n}\r\n\r\n// #######################################################################\r\n\r\nfunction getRandomData() {\r\n  return Array(7)\r\n    .fill()\r\n    .map(() => ({ value: Math.floor(Math.random() * 10) + 1 }));\r\n}\r\n","import React, { useState, useEffect } from \"react\";\r\nimport {\r\n  Grid,\r\n  LinearProgress,\r\n  Select,\r\n  OutlinedInput,\r\n  MenuItem,\r\n  Button\r\n} from \"@material-ui/core\";\r\nimport { useTheme } from \"@material-ui/styles\";\r\nimport {\r\n  ResponsiveContainer,\r\n  ComposedChart,\r\n  AreaChart,\r\n  LineChart,\r\n  Line,\r\n  Area,\r\n  PieChart,\r\n  Pie,\r\n  Cell,\r\n  YAxis,\r\n  XAxis,\r\n} from \"recharts\";\r\n\r\n// styles\r\nimport useStyles from \"./styles\";\r\n\r\n// components\r\nimport mock from \"./mock\";\r\nimport Widget from \"../../components/Widget\";\r\nimport PageTitle from \"../../components/PageTitle\";\r\nimport { Typography } from \"../../components/Wrappers\";\r\nimport Dot from \"../../components/Sidebar/components/Dot\";\r\nimport Table from \"./components/Table/Table\";\r\nimport BigStat from \"./components/BigStat/BigStat\";\r\n\r\nconst mainChartData = getMainChartData();\r\nconst PieChartData = [\r\n  { name: \"Group A\", value: 400, color: \"primary\" },\r\n  { name: \"Group B\", value: 300, color: \"secondary\" },\r\n  { name: \"Group C\", value: 300, color: \"warning\" },\r\n  { name: \"Group D\", value: 200, color: \"success\" },\r\n];\r\n\r\nexport default function Dashboard(props) {\r\n  var classes = useStyles();\r\n  var theme = useTheme();\r\n\r\n  // local\r\n  var [mainChartState, setMainChartState] = useState(\"monthly\");\r\n\r\n  return (\r\n    <>\r\n      <PageTitle title=\"Dashboard\" button={<Button\r\n      variant=\"contained\"\r\n      size=\"medium\"\r\n      color=\"secondary\"\r\n    >\r\n        Latest Reports\r\n    </Button>} />\r\n      <Grid container spacing={4}>\r\n        <Grid item lg={3} md={4} sm={6} xs={12}>\r\n          <Widget\r\n            title=\"Visits Today\"\r\n            upperTitle\r\n            bodyClass={classes.fullHeightBody}\r\n            className={classes.card}\r\n          >\r\n            <div className={classes.visitsNumberContainer}>\r\n              <Grid container item alignItems={\"center\"}>\r\n                <Grid item xs={6}>\r\n              <Typography size=\"xl\" weight=\"medium\" noWrap>\r\n                12, 678\r\n              </Typography>\r\n                </Grid>\r\n                <Grid item xs={6}>\r\n              <LineChart\r\n                width={100}\r\n                height={30}\r\n                data={[\r\n                  { value: 10 },\r\n                  { value: 15 },\r\n                  { value: 10 },\r\n                  { value: 17 },\r\n                  { value: 18 },\r\n                ]}\r\n              >\r\n                <Line\r\n                  type=\"natural\"\r\n                  dataKey=\"value\"\r\n                  stroke={theme.palette.success.main}\r\n                  strokeWidth={2}\r\n                  dot={false}\r\n                />\r\n              </LineChart>\r\n                </Grid>\r\n              </Grid>\r\n            </div>\r\n            <Grid\r\n              container\r\n              direction=\"row\"\r\n              justify=\"space-between\"\r\n              alignItems=\"center\"\r\n            >\r\n              <Grid item xs={4}>\r\n                <Typography color=\"text\" colorBrightness=\"secondary\" noWrap>\r\n                  Registrations\r\n                </Typography>\r\n                <Typography size=\"md\">860</Typography>\r\n              </Grid>\r\n              <Grid item xs={4}>\r\n                <Typography color=\"text\" colorBrightness=\"secondary\" noWrap>\r\n                  Sign Out\r\n                </Typography>\r\n                <Typography size=\"md\">32</Typography>\r\n              </Grid>\r\n              <Grid item xs={4}>\r\n                <Typography color=\"text\" colorBrightness=\"secondary\" noWrap>\r\n                  Rate\r\n                </Typography>\r\n                <Typography size=\"md\">3.25%</Typography>\r\n              </Grid>\r\n            </Grid>\r\n          </Widget>\r\n        </Grid>\r\n        <Grid item lg={3} md={8} sm={6} xs={12}>\r\n          <Widget\r\n            title=\"App Performance\"\r\n            upperTitle\r\n            className={classes.card}\r\n            bodyClass={classes.fullHeightBody}\r\n          >\r\n            <div className={classes.performanceLegendWrapper}>\r\n              <div className={classes.legendElement}>\r\n                <Dot color=\"warning\" />\r\n                <Typography\r\n                  color=\"text\"\r\n                  colorBrightness=\"secondary\"\r\n                  className={classes.legendElementText}\r\n                >\r\n                  Integration\r\n                </Typography>\r\n              </div>\r\n              <div className={classes.legendElement}>\r\n                <Dot color=\"primary\" />\r\n                <Typography\r\n                  color=\"text\"\r\n                  colorBrightness=\"secondary\"\r\n                  className={classes.legendElementText}\r\n                >\r\n                  SDK\r\n                </Typography>\r\n              </div>\r\n            </div>\r\n            <div className={classes.progressSection}>\r\n              <Typography\r\n                size=\"md\"\r\n                color=\"text\"\r\n                colorBrightness=\"secondary\"\r\n                className={classes.progressSectionTitle}\r\n              >\r\n                Integration\r\n              </Typography>\r\n              <LinearProgress\r\n                variant=\"determinate\"\r\n                value={77}\r\n                classes={{ barColorPrimary: classes.progressBarPrimary }}\r\n                className={classes.progress}\r\n              />\r\n            </div>\r\n            <div>\r\n              <Typography\r\n                size=\"md\"\r\n                color=\"text\"\r\n                colorBrightness=\"secondary\"\r\n                className={classes.progressSectionTitle}\r\n              >\r\n                SDK\r\n              </Typography>\r\n              <LinearProgress\r\n                variant=\"determinate\"\r\n                value={73}\r\n                classes={{ barColorPrimary: classes.progressBarWarning }}\r\n                className={classes.progress}\r\n              />\r\n            </div>\r\n          </Widget>\r\n        </Grid>\r\n        <Grid item lg={3} md={8} sm={6} xs={12}>\r\n          <Widget\r\n            title=\"Server Overview\"\r\n            upperTitle\r\n            className={classes.card}\r\n            bodyClass={classes.fullHeightBody}\r\n          >\r\n            <div className={classes.serverOverviewElement}>\r\n              <Typography\r\n                color=\"text\"\r\n                colorBrightness=\"secondary\"\r\n                className={classes.serverOverviewElementText}\r\n                noWrap\r\n              >\r\n                60% / 37°С / 3.3 Ghz\r\n              </Typography>\r\n              <div className={classes.serverOverviewElementChartWrapper}>\r\n                <ResponsiveContainer height={50} width=\"99%\">\r\n                  <AreaChart data={getRandomData(10)}>\r\n                    <Area\r\n                      type=\"natural\"\r\n                      dataKey=\"value\"\r\n                      stroke={theme.palette.secondary.main}\r\n                      fill={theme.palette.secondary.light}\r\n                      strokeWidth={2}\r\n                      fillOpacity=\"0.25\"\r\n                    />\r\n                  </AreaChart>\r\n                </ResponsiveContainer>\r\n              </div>\r\n            </div>\r\n            <div className={classes.serverOverviewElement}>\r\n              <Typography\r\n                color=\"text\"\r\n                colorBrightness=\"secondary\"\r\n                className={classes.serverOverviewElementText}\r\n                noWrap\r\n              >\r\n                54% / 31°С / 3.3 Ghz\r\n              </Typography>\r\n              <div className={classes.serverOverviewElementChartWrapper}>\r\n                <ResponsiveContainer height={50} width=\"99%\">\r\n                  <AreaChart data={getRandomData(10)}>\r\n                    <Area\r\n                      type=\"natural\"\r\n                      dataKey=\"value\"\r\n                      stroke={theme.palette.primary.main}\r\n                      fill={theme.palette.primary.light}\r\n                      strokeWidth={2}\r\n                      fillOpacity=\"0.25\"\r\n                    />\r\n                  </AreaChart>\r\n                </ResponsiveContainer>\r\n              </div>\r\n            </div>\r\n            <div className={classes.serverOverviewElement}>\r\n              <Typography\r\n                color=\"text\"\r\n                colorBrightness=\"secondary\"\r\n                className={classes.serverOverviewElementText}\r\n                noWrap\r\n              >\r\n                57% / 21°С / 3.3 Ghz\r\n              </Typography>\r\n              <div className={classes.serverOverviewElementChartWrapper}>\r\n                <ResponsiveContainer height={50} width=\"99%\">\r\n                  <AreaChart data={getRandomData(10)}>\r\n                    <Area\r\n                      type=\"natural\"\r\n                      dataKey=\"value\"\r\n                      stroke={theme.palette.warning.main}\r\n                      fill={theme.palette.warning.light}\r\n                      strokeWidth={2}\r\n                      fillOpacity=\"0.25\"\r\n                    />\r\n                  </AreaChart>\r\n                </ResponsiveContainer>\r\n              </div>\r\n            </div>\r\n          </Widget>\r\n        </Grid>\r\n        <Grid item lg={3} md={4} sm={6} xs={12}>\r\n          <Widget title=\"Revenue Breakdown\" upperTitle className={classes.card}>\r\n            <Grid container spacing={2}>\r\n              <Grid item xs={6}>\r\n                <ResponsiveContainer width=\"100%\" height={144}>\r\n                  <PieChart>\r\n                    <Pie\r\n                      data={PieChartData}\r\n                      innerRadius={30}\r\n                      outerRadius={40}\r\n                      dataKey=\"value\"\r\n                    >\r\n                      {PieChartData.map((entry, index) => (\r\n                        <Cell\r\n                          key={`cell-${index}`}\r\n                          fill={theme.palette[entry.color].main}\r\n                        />\r\n                      ))}\r\n                    </Pie>\r\n                  </PieChart>\r\n                </ResponsiveContainer>\r\n              </Grid>\r\n              <Grid item xs={6}>\r\n                <div className={classes.pieChartLegendWrapper}>\r\n                  {PieChartData.map(({ name, value, color }, index) => (\r\n                    <div key={color} className={classes.legendItemContainer}>\r\n                      <Dot color={color} />\r\n                      <Typography style={{ whiteSpace: \"nowrap\", fontSize: 12 }} >\r\n                        &nbsp;{name}&nbsp;\r\n                      </Typography>\r\n                      <Typography color=\"text\" colorBrightness=\"secondary\">\r\n                        &nbsp;{value}\r\n                      </Typography>\r\n                    </div>\r\n                  ))}\r\n                </div>\r\n              </Grid>\r\n            </Grid>\r\n          </Widget>\r\n        </Grid>\r\n        <Grid item xs={12}>\r\n          <Widget\r\n            bodyClass={classes.mainChartBody}\r\n            header={\r\n              <div className={classes.mainChartHeader}>\r\n                <Typography\r\n                  variant=\"h5\"\r\n                  color=\"text\"\r\n                  colorBrightness=\"secondary\"\r\n                >\r\n                  Daily Line Chart\r\n                </Typography>\r\n                <div className={classes.mainChartHeaderLabels}>\r\n                  <div className={classes.mainChartHeaderLabel}>\r\n                    <Dot color=\"warning\" />\r\n                    <Typography className={classes.mainChartLegentElement}>\r\n                      Tablet\r\n                    </Typography>\r\n                  </div>\r\n                  <div className={classes.mainChartHeaderLabel}>\r\n                    <Dot color=\"primary\" />\r\n                    <Typography className={classes.mainChartLegentElement}>\r\n                      Mobile\r\n                    </Typography>\r\n                  </div>\r\n                  <div className={classes.mainChartHeaderLabel}>\r\n                    <Dot color=\"secondary\" />\r\n                    <Typography className={classes.mainChartLegentElement}>\r\n                      Desktop\r\n                    </Typography>\r\n                  </div>\r\n                </div>\r\n                <Select\r\n                  value={mainChartState}\r\n                  onChange={e => setMainChartState(e.target.value)}\r\n                  input={\r\n                    <OutlinedInput\r\n                      labelWidth={0}\r\n                      classes={{\r\n                        notchedOutline: classes.mainChartSelectRoot,\r\n                        input: classes.mainChartSelect,\r\n                      }}\r\n                    />\r\n                  }\r\n                  autoWidth\r\n                >\r\n                  <MenuItem value=\"daily\">Daily</MenuItem>\r\n                  <MenuItem value=\"weekly\">Weekly</MenuItem>\r\n                  <MenuItem value=\"monthly\">Monthly</MenuItem>\r\n                </Select>\r\n              </div>\r\n            }\r\n          >\r\n            <ResponsiveContainer width=\"100%\" minWidth={500} height={350}>\r\n              <ComposedChart\r\n                margin={{ top: 0, right: -15, left: -15, bottom: 0 }}\r\n                data={mainChartData}\r\n              >\r\n                <YAxis\r\n                  ticks={[0, 2500, 5000, 7500]}\r\n                  tick={{ fill: theme.palette.text.hint + \"80\", fontSize: 14 }}\r\n                  stroke={theme.palette.text.hint + \"80\"}\r\n                  tickLine={false}\r\n                />\r\n                <XAxis\r\n                  tickFormatter={i => i + 1}\r\n                  tick={{ fill: theme.palette.text.hint + \"80\", fontSize: 14 }}\r\n                  stroke={theme.palette.text.hint + \"80\"}\r\n                  tickLine={false}\r\n                />\r\n                <Area\r\n                  type=\"natural\"\r\n                  dataKey=\"desktop\"\r\n                  fill={theme.palette.background.light}\r\n                  strokeWidth={0}\r\n                  activeDot={false}\r\n                />\r\n                <Line\r\n                  type=\"natural\"\r\n                  dataKey=\"mobile\"\r\n                  stroke={theme.palette.primary.main}\r\n                  strokeWidth={2}\r\n                  dot={false}\r\n                  activeDot={false}\r\n                />\r\n                <Line\r\n                  type=\"linear\"\r\n                  dataKey=\"tablet\"\r\n                  stroke={theme.palette.warning.main}\r\n                  strokeWidth={2}\r\n                  dot={{\r\n                    stroke: theme.palette.warning.dark,\r\n                    strokeWidth: 2,\r\n                    fill: theme.palette.warning.main,\r\n                  }}\r\n                />\r\n              </ComposedChart>\r\n            </ResponsiveContainer>\r\n          </Widget>\r\n        </Grid>\r\n        {mock.bigStat.map(stat => (\r\n          <Grid item md={4} sm={6} xs={12} key={stat.product}>\r\n            <BigStat {...stat} />\r\n          </Grid>\r\n        ))}\r\n        <Grid item xs={12}>\r\n          <Widget\r\n            title=\"Support Requests\"\r\n            upperTitle\r\n            noBodyPadding\r\n            bodyClass={classes.tableWidget}\r\n          >\r\n            <Table data={mock.table} />\r\n          </Widget>\r\n        </Grid>\r\n      </Grid>\r\n    </>\r\n  );\r\n}\r\n\r\n// #######################################################################\r\nfunction getRandomData(length, min, max, multiplier = 10, maxDiff = 10) {\r\n  var array = new Array(length).fill();\r\n  let lastValue;\r\n\r\n  return array.map((item, index) => {\r\n    let randomValue = Math.floor(Math.random() * multiplier + 1);\r\n\r\n    while (\r\n      randomValue <= min ||\r\n      randomValue >= max ||\r\n      (lastValue && randomValue - lastValue > maxDiff)\r\n    ) {\r\n      randomValue = Math.floor(Math.random() * multiplier + 1);\r\n    }\r\n\r\n    lastValue = randomValue;\r\n\r\n    return { value: randomValue };\r\n  });\r\n}\r\n\r\nfunction getMainChartData() {\r\n  var resultArray = [];\r\n  var tablet = getRandomData(31, 3500, 6500, 7500, 1000);\r\n  var desktop = getRandomData(31, 1500, 7500, 7500, 1500);\r\n  var mobile = getRandomData(31, 1500, 7500, 7500, 1500);\r\n\r\n  for (let i = 0; i < tablet.length; i++) {\r\n    resultArray.push({\r\n      tablet: tablet[i].value,\r\n      desktop: desktop[i].value,\r\n      mobile: mobile[i].value,\r\n    });\r\n  }\r\n\r\n  return resultArray;\r\n}\r\n","import React from \"react\";\r\nimport { Grid } from \"@material-ui/core\";\r\nimport { makeStyles } from \"@material-ui/styles\";\r\nimport MUIDataTable from \"mui-datatables\";\r\n\r\n// components\r\nimport PageTitle from \"../../components/PageTitle\";\r\nimport Widget from \"../../components/Widget\";\r\nimport Table from \"../dashboard/components/Table/Table\";\r\n\r\n// data\r\nimport mock from \"../dashboard/mock\";\r\n\r\nconst datatableData = [\r\n  [\"Joe James\", \"Example Inc.\", \"Yonkers\", \"NY\"],\r\n  [\"John Walsh\", \"Example Inc.\", \"Hartford\", \"CT\"],\r\n  [\"Bob Herm\", \"Example Inc.\", \"Tampa\", \"FL\"],\r\n  [\"James Houston\", \"Example Inc.\", \"Dallas\", \"TX\"],\r\n  [\"Prabhakar Linwood\", \"Example Inc.\", \"Hartford\", \"CT\"],\r\n  [\"Kaui Ignace\", \"Example Inc.\", \"Yonkers\", \"NY\"],\r\n  [\"Esperanza Susanne\", \"Example Inc.\", \"Hartford\", \"CT\"],\r\n  [\"Christian Birgitte\", \"Example Inc.\", \"Tampa\", \"FL\"],\r\n  [\"Meral Elias\", \"Example Inc.\", \"Hartford\", \"CT\"],\r\n  [\"Deep Pau\", \"Example Inc.\", \"Yonkers\", \"NY\"],\r\n  [\"Sebastiana Hani\", \"Example Inc.\", \"Dallas\", \"TX\"],\r\n  [\"Marciano Oihana\", \"Example Inc.\", \"Yonkers\", \"NY\"],\r\n  [\"Brigid Ankur\", \"Example Inc.\", \"Dallas\", \"TX\"],\r\n  [\"Anna Siranush\", \"Example Inc.\", \"Yonkers\", \"NY\"],\r\n  [\"Avram Sylva\", \"Example Inc.\", \"Hartford\", \"CT\"],\r\n  [\"Serafima Babatunde\", \"Example Inc.\", \"Tampa\", \"FL\"],\r\n  [\"Gaston Festus\", \"Example Inc.\", \"Tampa\", \"FL\"],\r\n];\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  tableOverflow: {\r\n    overflow: 'auto'\r\n  }\r\n}))\r\n\r\nexport default function Tables() {\r\n  const classes = useStyles();\r\n  return (\r\n    <>\r\n      <PageTitle title=\"Tables\" />\r\n      <Grid container spacing={4}>\r\n        <Grid item xs={12}>\r\n          <MUIDataTable\r\n            title=\"Employee List\"\r\n            data={datatableData}\r\n            columns={[\"Name\", \"Company\", \"City\", \"State\"]}\r\n            options={{\r\n              filterType: \"checkbox\",\r\n            }}\r\n          />\r\n        </Grid>\r\n        <Grid item xs={12}>\r\n          <Widget title=\"Material-UI Table\" upperTitle noBodyPadding bodyClass={classes.tableOverflow}>\r\n            <Table data={mock.table} />\r\n          </Widget>\r\n        </Grid>\r\n      </Grid>\r\n    </>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { withStyles } from \"@material-ui/styles\";\r\nimport {\r\n    IconButton,\r\n    Tooltip\r\n  } from \"@material-ui/core\";\r\nimport {\r\n    Delete as DeleteIcon,\r\n    Edit as EditIcon\r\n  } from \"@material-ui/icons\";\r\nconst defaultToolbarSelectStyles = {\r\n  iconButton: {\r\n  },\r\n  iconContainer: {\r\n    marginRight: \"24px\",\r\n  },\r\n};\r\n\r\nclass CustomToolbarSelect extends React.Component {\r\n  handleClickChangeName = () => {\r\n    this.props.onChangeName();\r\n  };\r\n\r\n  handleClickRowsDelete = () => {\r\n    this.props.onRowsDelete();\r\n  };\r\n\r\n  render() {\r\n    const { classes } = this.props;\r\n\r\n    return (\r\n      <div className={classes.iconContainer}>\r\n        <Tooltip title={\"Изменить название\"}>\r\n          <IconButton className={classes.iconButton} onClick={this.handleClickChangeName} style={{outline:\"none\"}}>\r\n            <EditIcon className={classes.icon} />\r\n          </IconButton>\r\n        </Tooltip>\r\n        <Tooltip title={\"Удалить\"}>\r\n          <IconButton className={classes.iconButton} onClick={this.handleClickRowsDelete} style={{outline:\"none\"}}>\r\n            <DeleteIcon className={classes.icon} />\r\n          </IconButton>\r\n        </Tooltip>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withStyles(defaultToolbarSelectStyles, { name: \"CustomToolbarSelect\" })(CustomToolbarSelect);","import React from \"react\";\r\nimport { withStyles } from \"@material-ui/styles\";\r\nimport {\r\n    IconButton,\r\n    Tooltip\r\n  } from \"@material-ui/core\";\r\nimport {\r\n    Delete as DeleteIcon,\r\n    Edit as EditIcon,\r\n    Add as AddIcon\r\n  } from \"@material-ui/icons\";\r\nconst defaultToolbarSelectStyles = {\r\n  iconButton: {\r\n  },\r\n  iconContainer: {\r\n    marginRight: \"24px\",\r\n  },\r\n};\r\n\r\nclass CustomToolbarSelectWithAdd extends React.Component {\r\n  handleClickChangeName = () => {\r\n    this.props.onChangeName();\r\n  };\r\n\r\n  handleClickRowsDelete = () => {\r\n    this.props.onRowsDelete();\r\n  };\r\n\r\n  handleClickRowsAdd = () => {\r\n    this.props.onRowsAdd();\r\n  };\r\n\r\n  render() {\r\n    const { classes } = this.props;\r\n\r\n    return (\r\n      <div className={classes.iconContainer}>\r\n        <Tooltip title={\"Добавить месторождение\"}>\r\n          <IconButton className={classes.iconButton} onClick={this.handleClickRowsAdd} style={{outline:\"none\"}}>\r\n            <AddIcon className={classes.icon} />\r\n          </IconButton>\r\n        </Tooltip>\r\n        <Tooltip title={\"Изменить название\"}>\r\n          <IconButton className={classes.iconButton} onClick={this.handleClickChangeName} style={{outline:\"none\"}}>\r\n            <EditIcon className={classes.icon} />\r\n          </IconButton>\r\n        </Tooltip>\r\n        <Tooltip title={\"Удалить\"}>\r\n          <IconButton className={classes.iconButton} onClick={this.handleClickRowsDelete} style={{outline:\"none\"}}>\r\n            <DeleteIcon className={classes.icon} />\r\n          </IconButton>\r\n        </Tooltip>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withStyles(defaultToolbarSelectStyles, { name: \"CustomToolbarSelectWithAdd\" })(CustomToolbarSelectWithAdd);","import React, {useState, useEffect, Suspense} from \"react\";\r\n\r\nimport { makeStyles } from \"@material-ui/styles\";\r\nimport {\r\n    Grid,\r\n    Button,\r\n    Typography,\r\n    CircularProgress\r\n  } from \"@material-ui/core\";\r\nimport MUIDataTable from \"mui-datatables\";\r\n\r\nimport CustomToolbarSelect from \"../../components/Toolbar/CustomToolbarSelect\";\r\nimport CustomToolbarSelectWithAdd from \"../../components/Toolbar/CustomToolbarSelectWithAdd\";\r\nimport PageTitle from \"../../components/PageTitle\";\r\nimport { useHistory } from \"react-router\";\r\n\r\nconst AddCustomerDialog = React.lazy(() => import('../../components/Dialogs/AddCustomerDialog'));\r\nconst AddFieldDialog = React.lazy(() => import('../../components/Dialogs/AddFieldDialog'));\r\nconst EditCustomerDialog = React.lazy(() => import('../../components/Dialogs/EditCustomerDialog'));\r\nconst EditFieldDialog = React.lazy(() => import('../../components/Dialogs/EditFieldDialog'));\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    tableOverflow: {\r\n      overflow: 'auto'\r\n    }\r\n}))\r\n\r\nfunction Customers() {\r\n    const [fullData, setFullData] = useState([]);\r\n    const [showModalCustomer, setShowModalCustomer] = useState(false);\r\n    const [showModalEditCustomer, setShowModalEditCustomer] = useState(false);\r\n    const [showModalEditField, setShowModalEditField] = useState(false);\r\n    const [showModalField, setShowModalField] = useState(false);\r\n    const [customer_id_addfield, setCustomer_id_addfield] = useState(0);\r\n    const [customer_name_addfield, setCustomer_name_addfield] = useState(\"\");\r\n    const [field_id, setField_id] = useState(0);\r\n    const [field_name, setField_name] = useState(\"\");\r\n    const [customer_index, setCustomer_index] = useState(\"\");\r\n    const [selectedRowCustomer, setSelectedRowCustomer] = useState([]);\r\n    const [selectedRowField, setSelectedRowField] = useState([[]]);\r\n    const [constant, setConstant] = useState(false);\r\n    const role = localStorage.getItem('role');\r\n    const history = useHistory();\r\n\r\n    const getCustomers = () => {\r\n      fetch(process.env.REACT_APP_API+'full_data_customers/?format=json', { headers : { \r\n        'Content-Type': 'application/json',\r\n        'Accept': 'application/json',\r\n        'Authorization': \"Token \" + localStorage.getItem('id_token'),\r\n       }\r\n    }) \r\n      .then(response=>response.json())\r\n      .then(data=>{\r\n          setFullData(data);\r\n      })\r\n    }\r\n\r\n    const deleteCustomer = (customer_id) => {\r\n      fetch(process.env.REACT_APP_API+'customers/'+ customer_id +'?format=json', { method: 'DELETE', headers: {'Authorization': \"Token \" + localStorage.getItem('id_token')} })\r\n    }\r\n\r\n    const deleteField = (field_id) => {\r\n      fetch(process.env.REACT_APP_API+'fields/id/'+ field_id +'?format=json', { method: 'DELETE', headers: {'Authorization': \"Token \" + localStorage.getItem('id_token')} })\r\n    }\r\n\r\n    const changeNameField = () => {\r\n      setField_id(fullData[customer_index].field[selectedRowField[customer_index][0]].id);\r\n      setField_name(fullData[customer_index].field[selectedRowField[customer_index][0]].name);\r\n      handleModalEditField();\r\n    }\r\n  \r\n    const changeNameCustomer = () => {\r\n      setCustomer_id_addfield(fullData[selectedRowCustomer[0]].id);\r\n      setCustomer_name_addfield(fullData[selectedRowCustomer[0]].name);\r\n      handleModalEditCustomer();\r\n    }\r\n  \r\n    const rowsDeleteCustomer = () => {\r\n      if (window.confirm(\"Вы точно хотите удалить \" + fullData[selectedRowCustomer[0]].name + \" из списка обществ?\")){\r\n        deleteCustomer(fullData[selectedRowCustomer[0]].id);\r\n        fullData.splice(selectedRowCustomer[0], 1);\r\n      }\r\n      else\r\n        getCustomers();\r\n      setSelectedRowCustomer([]);\r\n    }\r\n\r\n    const fieldAdd = () => {\r\n      setCustomer_id_addfield(fullData[selectedRowCustomer[0]].id);\r\n      handleModalField();\r\n    }\r\n\r\n    const rowsDeleteField = () => {\r\n      if (window.confirm(\"Вы точно хотите удалить \" + fullData[customer_index].field[selectedRowField[customer_index][0]].name + \" из списка месторождений?\")){\r\n        deleteField(fullData[customer_index].field[selectedRowField[customer_index][0]].id);\r\n        fullData[customer_index].field.splice(selectedRowField[customer_index][0], 1);\r\n      }\r\n      else\r\n        getCustomers();\r\n      setSelectedRowField([]);\r\n    }\r\n\r\n    useEffect(() => {\r\n      getCustomers();\r\n    }, [constant])\r\n\r\n    const handleModalCustomer = () => {\r\n      setShowModalCustomer(!showModalCustomer);\r\n    }\r\n    const handleModalField = () => {\r\n      setShowModalField(!showModalField);\r\n    }\r\n    const handleModalEditCustomer = () => {\r\n      setShowModalEditCustomer(!showModalEditCustomer);\r\n    }\r\n    const handleModalEditField = () => {\r\n      setShowModalEditField(!showModalEditField);\r\n    }\r\n\r\n    return (\r\n        <>\r\n        <Suspense fallback={<p style={{zIndex: \"9999\"}}></p>}>\r\n          <EditCustomerDialog active={showModalEditCustomer} setActive={handleModalEditCustomer} customer_id={customer_id_addfield} customer_name={customer_name_addfield}/>\r\n          <EditFieldDialog active={showModalEditField} setActive={handleModalEditField} field_id={field_id} field_name={field_name}/>\r\n          <AddFieldDialog active={showModalField} setActive={handleModalField} customer_id={customer_id_addfield}/>\r\n          <AddCustomerDialog active={showModalCustomer} setActive={handleModalCustomer}/>\r\n        </Suspense>\r\n        <PageTitle title=\"Общества группы\" button={<Button\r\n                variant=\"contained\"\r\n                size=\"medium\"\r\n                color=\"secondary\"\r\n                style={{outline: \"none\", backgroundColor:\"#34547A\", visibility: (role === \"user\" || role === \"superuser\" ? 'visible' : 'hidden')}}\r\n                onClick={handleModalCustomer}\r\n                >\r\n                Добавить общество\r\n            </Button>} />\r\n        <Grid container spacing={4}>\r\n        <Grid item xs={12}>\r\n          <MUIDataTable\r\n            title={<Typography variant=\"h6\">\r\n            Список обществ группы\r\n            {fullData.length === 0 && <CircularProgress size={24} style={{ marginLeft: 15, position: 'relative', top: 4 }} />}\r\n          </Typography>}\r\n            data={fullData.map(item => [item.name])}\r\n            columns={[\"Название\"]}\r\n            options={{\r\n              responsive: 'vertical',\r\n              sort: false,\r\n              viewColumns: false,\r\n              filter: false,\r\n              print: false,\r\n              download: false,\r\n              pagination: false,\r\n              rowsPerPage: 1000000,\r\n              textLabels: {\r\n                body: {\r\n                  noMatch: \"Записей не найдено.\",\r\n                  toolTip: \"Сортировать\"\r\n                },\r\n                toolbar: {\r\n                  search: \"Поиск\"\r\n                },\r\n                selectedRows: {\r\n                  text: \"строка выбрана\"\r\n                },\r\n              },\r\n              expandableRows: true,\r\n              expandableRowsHeader: false,\r\n              rowsSelected: selectedRowCustomer,\r\n              isRowExpandable: (dataIndex, expandedRows) => {\r\n                // Prevent expand/collapse of any row if there are 1 row expanded already (but allow those already expanded to be collapsed)\r\n                if (expandedRows.data.length > 1 && expandedRows.data.filter(d => d.dataIndex === dataIndex).length === 0) return false\r\n                else return true;\r\n              },\r\n              onRowExpansionChange: (currentRowsExpanded, allRowsExpanded, rowsExpanded) => {\r\n                setCustomer_index(currentRowsExpanded[0].index);\r\n              },\r\n              onRowSelectionChange: (rowsSelectedData, allRows, rowsSelected) => {\r\n                setSelectedRowCustomer(rowsSelected);\r\n              },\r\n              customToolbarSelect: (selectedRows, displayData, setSelectedRows) => (\r\n                <CustomToolbarSelectWithAdd selectedRows={selectedRows} displayData={displayData} setSelectedRows={setSelectedRows} onChangeName={changeNameCustomer} onRowsDelete={rowsDeleteCustomer} onRowsAdd={fieldAdd}/>\r\n              ),\r\n              selectableRows: (role === \"user\" || role === \"superuser\" ? 'single' : 'none'),\r\n              renderExpandableRow: (rowData, rowMeta) => {\r\n                return (\r\n                  <React.Fragment>\r\n                    <tr>\r\n                      <td colSpan={6}>\r\n                        <MUIDataTable\r\n                          title=\"Месторождения\"\r\n                          data={fullData[rowMeta.dataIndex].field.map(item => [item.name])}\r\n                          columns={[\"Название\"]}\r\n                          options={{\r\n                            viewColumns: false,\r\n                            filter: false,\r\n                            print: false,\r\n                            download: false,\r\n                            sort: false,\r\n                            textLabels: {\r\n                              body: {\r\n                                noMatch: \"Записей не найдено.\",\r\n                                toolTip: \"Сортировать\"\r\n                              },\r\n                              pagination: {\r\n                                next: \"Следующая страница\",\r\n                                previous: \"Предыдущая страница\",\r\n                                rowsPerPage: \"Строк на странице:\",\r\n                                displayRows: \"из\",\r\n                              },\r\n                              toolbar: {\r\n                                search: \"Поиск\"\r\n                              },\r\n                              selectedRows: {\r\n                                text: \"строка выбрана\"\r\n                              },\r\n                            },\r\n                            rowsSelected: selectedRowField[rowMeta.dataIndex],\r\n                            onRowSelectionChange: (rowsSelectedData, allRows, rowsSelected) => {\r\n                              selectedRowField[rowMeta.dataIndex] = rowsSelected;\r\n                            },\r\n                            customToolbarSelect: (selectedRows, displayData, setSelectedRows) => (\r\n                              <CustomToolbarSelect selectedRows={selectedRows} displayData={displayData} setSelectedRows={setSelectedRows} onChangeName={changeNameField} onRowsDelete={rowsDeleteField}/>\r\n                            ),\r\n                            setRowProps: value => ({ style: { cursor: 'pointer' } }),\r\n                            onRowClick: (rowData, rowMeta) => {\r\n                              history.push({\r\n                                pathname:  `/app/strata/${fullData[customer_index].field[rowMeta.dataIndex].id}`,\r\n                             });\r\n                            },\r\n                            selectableRows: (role === \"user\" || role === \"superuser\" ? 'single' : 'none')\r\n                          }}\r\n                        />\r\n                      </td>\r\n                    </tr>\r\n                  </React.Fragment>\r\n                );\r\n              },\r\n            }}\r\n          />\r\n        </Grid>\r\n        </Grid>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Customers;","import React from 'react'\r\n\r\nimport {\r\n    Table, \r\n    TableContainer, \r\n    TableBody, \r\n    TableRow, \r\n    TableCell,\r\n    Paper\r\n  } from \"@material-ui/core\";\r\n\r\nconst NotFound = () => {\r\n    return (\r\n        <TableContainer component={Paper}>\r\n            <Table>\r\n                <TableBody>\r\n                    <TableRow>\r\n                        <TableCell align=\"center\">ЭЛЕМЕНТОВ НЕ НАЙДЕНО</TableCell>\r\n                    </TableRow>\r\n                </TableBody>\r\n            </Table>\r\n        </TableContainer>\r\n    )\r\n}\r\n\r\nexport default NotFound\r\n","import React, {useState, useEffect} from 'react';\r\n\r\nimport {\r\n    Grid,\r\n    Button,\r\n    Typography,\r\n    CircularProgress\r\n  } from \"@material-ui/core\";\r\n\r\nimport { useHistory } from \"react-router\";\r\nimport MUIDataTable from \"mui-datatables\";\r\nimport PageTitle from \"../../components/PageTitle\";\r\nimport NotFound from '../../components/NotFound/NotFound';\r\n\r\nfunction Reports() {\r\n    const [reportsData, setReportsData] = useState([]);\r\n    const constant = false;\r\n    const history = useHistory();\r\n    const role = localStorage.getItem('role');\r\n\r\n    useEffect(() => {\r\n        getReports();\r\n    },[constant])\r\n\r\n    const getReports = () => {\r\n        fetch(process.env.REACT_APP_API+'quality_control/?format=json', { headers : { \r\n          'Content-Type': 'application/json',\r\n          'Accept': 'application/json',\r\n          'Authorization': \"Token \" + localStorage.getItem('id_token')\r\n         }\r\n      }) \r\n        .then(response=>response.json())\r\n        .then(data=>{\r\n            setReportsData(data);\r\n        })\r\n        .catch(err=> console.log(err))\r\n      }\r\n\r\n    const deleteReport = (report_id) => {\r\n        fetch(process.env.REACT_APP_API+'quality_control/id/'+ report_id +'?format=json', { method: 'DELETE', headers: {'Authorization': \"Token \" + localStorage.getItem('id_token')} })\r\n    }  \r\n    return (\r\n        <>\r\n        <PageTitle title=\"Отчёты\" button={<Button\r\n            variant=\"contained\"\r\n            size=\"medium\"\r\n            color=\"secondary\"\r\n            style={{outline: \"none\", backgroundColor:\"#34547A\", visibility: (role === \"user\" || role === \"superuser\" ? 'visible' : 'hidden')}}\r\n            onClick={() => {history.push({pathname: \"/app/checklist\"})}}\r\n            >\r\n                Добавить новый отчёт\r\n            </Button>}/>\r\n        <Grid container spacing={4}>\r\n        <Grid item xs={12}>\r\n          {reportsData.length === 0 ? <NotFound/> : \r\n          <MUIDataTable\r\n            title={<Typography variant=\"h6\">\r\n            Список отчётов в базе\r\n            {reportsData.length === 0 && <CircularProgress size={24} style={{ marginLeft: 15, position: 'relative', top: 4 }} />}\r\n          </Typography>}\r\n            data={reportsData.map(item => [item.quality_control_id, item.customer, item.field, item.well, item.pie_well + \" №\" + item.num_wellbore, item.data_type === \"Реального времени\" ? \"Оперативный\" : \"Финальный\", item.section_interval_start + \" - \" + item.section_interval_end, item.value])}\r\n            columns={[\"Номер\", \"Общество\", \"Месторождение\", \"Скважина\", \"Ствол\", \"Тип отчёта\", \"Интервал секции (м)\", \"Оценка (%)\"]}\r\n            options={{\r\n              filterType: \"textField\",\r\n              print: false,\r\n              download: false,\r\n              pagination: false,\r\n              rowsPerPage: 1000000,\r\n              textLabels: {\r\n                body: {\r\n                  noMatch: \"Записей не найдено.\",\r\n                  toolTip: \"Сортировать\"\r\n                },\r\n                filter: {\r\n                  all: \"Все\",\r\n                  title: \"Фильтры\",\r\n                  reset: \"СБРОСИТЬ\",\r\n                },\r\n                toolbar: {\r\n                  search: \"Поиск\",\r\n                  viewColumns: \"Показать столбцы\",\r\n                    filterTable: \"Фильтр таблицы\"\r\n                },\r\n                viewColumns: {\r\n                    title: \"Показать столбцы\"\r\n                  },\r\n                selectedRows: {\r\n                  text: \"строка выбрана\"\r\n                },\r\n              },\r\n              selectableRows: (role === \"user\" || role === \"superuser\" ? 'single' : 'none'),\r\n              setRowProps: value => ({ style: { cursor: 'pointer' } }),\r\n              onRowClick: (rowData, rowMeta) => {\r\n                history.push({\r\n                  pathname:  `/app/reports/${reportsData[rowMeta.dataIndex].quality_control_id}`,\r\n               });\r\n              },\r\n              onRowsDelete: (rowMeta) => {\r\n                if (window.confirm('Вы точно хотите удалить отчет №'+ reportsData[rowMeta.data[0].dataIndex].quality_control_id +' из списка отчётов?'))\r\n                    deleteReport(reportsData[rowMeta.data[0].dataIndex].quality_control_id);\r\n                else\r\n                    getReports();\r\n              },\r\n            }}\r\n          />\r\n          }\r\n        </Grid>\r\n        </Grid>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Reports;","import React from 'react';\r\n\r\nimport {Toast} from 'react-bootstrap';\r\n\r\nfunction ValidityToast({active, setActive}) {\r\n    return (\r\n        <>\r\n            <Toast style={{display: \"block\", minWidth: \"500px\", minHeight: \"100px\", zIndex:\"9999\", position: 'absolute', top: \"20px\", right: \"calc(50vw - 250px)\"}} onClose={setActive} show={active} delay={5000} autohide>\r\n                <Toast.Header style={{fontSize: \"18px\"}}>\r\n                    <strong className=\"mr-auto\" style={{color: \"red\"}}>Предупреждение</strong>\r\n                    <small>сейчас</small>\r\n                </Toast.Header>\r\n                <Toast.Body style={{fontSize: \"16px\"}}>Весь верхний блок в листе оценки ГИС должен быть заполнен!</Toast.Body>\r\n            </Toast>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default ValidityToast;","import React from 'react';\r\n\r\nimport {Toast} from 'react-bootstrap';\r\n\r\nfunction SuccessToast({active, setActive}) {\r\n    return (\r\n        <>\r\n            <Toast style={{display: \"block\", minWidth: \"500px\", minHeight: \"100px\", zIndex:\"9999\", position: 'absolute', top: \"20px\", right: \"calc(50vw - 250px)\"}} onClose={setActive} show={active} delay={5000} autohide>\r\n                <Toast.Header style={{fontSize: \"18px\"}}>\r\n                    <strong className=\"mr-auto\" style={{color: \"green\"}}>Сохранение</strong>\r\n                    <small>сейчас</small>\r\n                </Toast.Header>\r\n                <Toast.Body style={{fontSize: \"16px\"}}>Сохранение прошло успешно!</Toast.Body>\r\n            </Toast>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default SuccessToast;","import React from 'react';\r\n\r\nimport {Toast} from 'react-bootstrap';\r\n\r\nfunction NoChangesToast({active, setActive}) {\r\n    return (\r\n        <>\r\n            <Toast style={{display: \"block\", minWidth: \"500px\", minHeight: \"100px\", zIndex:\"9999\", position: 'absolute', top: \"20px\", right: \"calc(50vw - 250px)\"}} onClose={setActive} show={active} delay={5000} autohide>\r\n                <Toast.Header style={{fontSize: \"18px\"}}>\r\n                    <strong className=\"mr-auto\" style={{color: \"red\"}}>Предупреждение</strong>\r\n                    <small>сейчас</small>\r\n                </Toast.Header>\r\n                <Toast.Body style={{fontSize: \"16px\"}}>Изменений в листе контроля качества ГИС не было.</Toast.Body>\r\n            </Toast>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default NoChangesToast;","export function make_indexes(arr) {\r\n    for(var i = 0; i < arr.length; i++){\r\n        arr[i] = {...arr[i], \"index\": i};\r\n    }\r\n    return arr;\r\n}","import React, {useEffect, useState, Suspense} from \"react\";\r\nimport {Form, Button, Badge, Row, Col} from 'react-bootstrap';\r\nimport {\r\n    Grid,\r\n    //Button,\r\n    Table, TableHead, TableRow, TableCell, TableBody, \r\n    ListSubheader,\r\n    IconButton,\r\n    Typography,\r\n    Select, MenuItem, FormControl,\r\n    CircularProgress, InputLabel,\r\n    Card, CardContent,\r\n} from \"@material-ui/core\";\r\nimport { useHistory } from \"react-router\";\r\nimport {\r\n    AddCircleOutline as PlusIcon,\r\n    NotInterested as NotInterestedIcon,\r\n    RemoveCircleOutline as RemoveCircleOutlineIcon\r\n  } from \"@material-ui/icons\";\r\n\r\nimport { calc_finish_value } from \"../calcScripts\";\r\n\r\nimport PageTitle from \"../../components/PageTitle\";\r\nimport ValidityToast from \"../../components/Toasts/ValidityToast\";\r\nimport SuccessToast from \"../../components/Toasts/SuccessToast\";\r\nimport NoChangesToast from \"../../components/Toasts/NoChangesToast\";\r\nimport { prepare_for_put_secondtable, prepare_for_post_secondtable, prepare_for_put_inform_method, prepare_for_post_inform_method } from \"../checklist/Scripts\";\r\nimport { styleSelect, styleInput, styleBlueInput, styleCell } from \"../checklist/styles\"; \r\nimport { make_indexes } from \"./Scripts\";\r\nimport { check_validity } from \"../checklist/Scripts\";\r\n\r\nconst FullnessDialog = React.lazy(() => import('../../components/Dialogs/FullnessDialog'));\r\nconst LasDialog = React.lazy(() => import('../../components/Dialogs/LasDialog'));\r\nconst WitsmlDialog = React.lazy(() => import('../../components/Dialogs/WitsmlDialog'));\r\nconst DensityDialog = React.lazy(() => import('../../components/Dialogs/DensityDialog'));\r\nconst FillDataDialog = React.lazy(() => import('../../components/Dialogs/FillDataDialog'));\r\n\r\nvar tableRowIndex = 0;\r\n\r\nconst ITEM_HEIGHT = 48;\r\nconst ITEM_PADDING_TOP = 8;\r\n\r\nfunction Report(props) {\r\n    const [reportData, setReportData]= useState({});\r\n    const history = useHistory();\r\n    const role = localStorage.getItem('role');\r\n    const [hover, setHover] = useState({\r\n        index: 0,\r\n        hover: false\r\n    });\r\n    const [showModalFullness, setShowModalFullness] = useState(false);\r\n    const [showModalLas, setShowModalLas] = useState(false);\r\n    const [showModalWitsml, setShowModalWitsml] = useState(false);\r\n    const [showModalDensity, setShowModalDensity] = useState(false);\r\n    const [showValidityToast, setShowValidityToast] = useState(false);\r\n    const [showNoChangesToast, setShowNoChangesToast] = useState(false);\r\n    const [showSuccessToast, setShowSuccessToast] = useState(false);\r\n    const [showModalData, setShowModalData] = useState(false);\r\n\r\n    const [rows, setRows] = useState([]);\r\n    const [secondrows, setSecondrows] = useState([]);\r\n    const [witsmlData, setWitsmlData] = useState({\r\n        fullness_data: \"\",\r\n        curvenames: \"\",\r\n        mnemodescription: \"\",\r\n        witsml_count: null,\r\n        status: true\r\n    });\r\n    const [lasData, setLasData] = useState({\r\n        cap: \"\",\r\n        parametres: \"\",\r\n        mnemodescription: \"\",\r\n        tabledata: \"\",\r\n        las_file_count: null,\r\n        status: true\r\n    });\r\n    const [densityData, setDensityData] = useState({\r\n        density: null,\r\n    });\r\n    const [fullnessData, setFullnessData] = useState({\r\n        titul_list: \"\",\r\n        well_construction: \"\",\r\n        wellbore_sizes: \"\",\r\n        chrono_data: \"\",\r\n        sol_data: \"\",\r\n        dash_comp: \"\",\r\n        summary_data: \"\",\r\n        inklino_data: \"\",\r\n        main_record: \"\",\r\n        parametr: \"\",\r\n        control_record: \"\",\r\n        lqc: \"\",\r\n        calibration: \"\",\r\n        full_inf_count: null,\r\n    });\r\n    const [customer, setCustomer] = useState(\"\");\r\n    const [field, setField] = useState(\"\");\r\n    const [field_id, setField_id] = useState(null);\r\n    const [num_pad, setNum_pad] = useState(\"\");\r\n    const [cluster_id, setCluster_id] = useState(null);\r\n    const [num_well, setNum_well] = useState(\"\");\r\n    const [well_id, setWell_id] = useState(null);\r\n    const [num_wellbore, setNum_wellbore] = useState(\"\");\r\n    const [wellbore_id, setWellbore_id] = useState(null);\r\n    const [well_type, setWell_type] = useState(\"\");\r\n    const [service, setService] = useState(\"\");\r\n    const [service_id, setService_id] = useState(null);\r\n    const [pie_well, setPie_well] = useState(\"\");\r\n    const [data_type, setData_type] = useState(\"\");\r\n    const [section_interval_start, setSection_interval_start] = useState(null);\r\n    const [section_interval_end, setSection_interval_end] = useState(null);\r\n    const [diametr, setDiametr] = useState(null);\r\n    const [value, setValue] = useState(null);\r\n    const [rowIndex, setRowIndex] = useState(null);\r\n    const [test, setTest] = useState(\"\");\r\n\r\n    const [servicesData, setServicesData] = useState([]);\r\n    const [methodsData, setMethodsData] = useState([]);\r\n    const [devicesData, setDevicesData] = useState([]);\r\n    const [customersData, setCustomersData] = useState([]);\r\n    const [fieldsData, setFieldsData] = useState([]);\r\n    const [clustersData, setClustersData] = useState([]);\r\n    const [wellsData, setWellsData] = useState([]);\r\n    const [wellboresData, setWellboresData] = useState([]);\r\n    \r\n    const [arrNumWells, setArrNumWells] = useState([]);\r\n\r\n    const [checkWellboreValues, setCheckWellboreValues] = useState(false);\r\n    const [checkWellValues, setCheckWellValues] = useState(false);\r\n    const [checkValues, setCheckValues] = useState(false);\r\n    const [checkValuesForPost, setCheckValuesForPost] = useState(false);\r\n    const [checkLasChange, setCheckLasChange] = useState(false);\r\n    const [checkWitsmlChange, setCheckWitsmlChange] = useState(false);\r\n    const [checkFullnessChange, setCheckFullnessChange] = useState(false);\r\n    const [checkDensityChange, setCheckDensityChange] = useState(false);\r\n\r\n    const getServices = () => {\r\n        fetch(process.env.REACT_APP_API+'services/?format=json', { headers : { \r\n            'Content-Type': 'application/json',\r\n            'Accept': 'application/json',\r\n            'Authorization': \"Token \" + localStorage.getItem('id_token')\r\n           }\r\n        }) \r\n        .then(response=>response.json())\r\n        .then(data=>{\r\n            setServicesData(data);\r\n        })\r\n        //setMethodsData([]);\r\n    }\r\n\r\n    const getCustomers = () => {\r\n        fetch(process.env.REACT_APP_API+'customers/?format=json', { headers : { \r\n            'Content-Type': 'application/json',\r\n            'Accept': 'application/json',\r\n            'Authorization': \"Token \" + localStorage.getItem('id_token')\r\n           }\r\n        }) \r\n        .then(response=>response.json())\r\n        .then(data=>{\r\n            setCustomersData(data);\r\n        })\r\n        //setFieldsData([]);\r\n    }\r\n\r\n    const getReport = (props) => {\r\n        fetch(process.env.REACT_APP_API+'full_get/'+ props.match.params.id +'?format=json', { headers : { \r\n            'Content-Type': 'application/json',\r\n            'Accept': 'application/json',\r\n            'Authorization': \"Token \" + localStorage.getItem('id_token')\r\n           }\r\n        }) \r\n        .then(response=>response.json())\r\n        .then(data=>{\r\n            setReportData(data);\r\n            setCustomer(data.customer_name);\r\n            setField(data.field_name);\r\n            setField_id(data.field_id);\r\n            setNum_pad(data.num_pad);\r\n            setCluster_id(data.cluster_id);\r\n            setNum_well(data.well_type + \" \" + data.num_well);\r\n            setWell_id(data.well_id);\r\n            setNum_wellbore(data.pie_well + \" \" + data.num_wellbore);\r\n            setWellbore_id(data.wellbore_id);\r\n            setPie_well(data.pie_well);\r\n            setWell_type(data.well_type);\r\n            setService(data.service_name);\r\n            setData_type(data.data_type);\r\n            setService_id(data.service_id);\r\n            setSection_interval_end(data.section_interval_end);\r\n            setSection_interval_start(data.section_interval_start);\r\n            setDiametr(data.diametr);\r\n            setValue(data.value);\r\n            setLasData(data.las_file);\r\n            setWitsmlData(data.witsml);\r\n            setFullnessData(data.full_inform);\r\n            setDensityData(data.density);\r\n            setRows(make_indexes(data.inform_for_method));\r\n            setSecondrows(make_indexes(data.second_table));\r\n        })\r\n    }\r\n\r\n    const getFields = (customer_id) => {\r\n        fetch(process.env.REACT_APP_API+'fields/'+ customer_id +'?format=json', { headers : { \r\n            'Content-Type': 'application/json',\r\n            'Accept': 'application/json',\r\n            'Authorization': \"Token \" + localStorage.getItem('id_token')\r\n           }\r\n        }) \r\n        .then(response=>response.json())\r\n        .then(data=>{\r\n            setFieldsData(data);\r\n        })\r\n    }\r\n\r\n    const getClusters = (field_id) => {\r\n        fetch(process.env.REACT_APP_API+'clusters/'+ field_id +'?format=json', { headers : { \r\n            'Content-Type': 'application/json',\r\n            'Accept': 'application/json',\r\n            'Authorization': \"Token \" + localStorage.getItem('id_token')\r\n           }\r\n        }) \r\n        .then(response=>response.json())\r\n        .then(data=>{\r\n            setClustersData(data);\r\n        })\r\n    }\r\n\r\n    const getWells = (cluster_id) => {\r\n        fetch(process.env.REACT_APP_API+'wells/'+ cluster_id +'?format=json', { headers : { \r\n            'Content-Type': 'application/json',\r\n            'Accept': 'application/json',\r\n            'Authorization': \"Token \" + localStorage.getItem('id_token')\r\n           }\r\n        }) \r\n        .then(response=>response.json())\r\n        .then(data=>{\r\n            setWellsData(data);\r\n            var arr = []\r\n            for (const num of data.map(item => item.num_well).filter((value, index, self) => {return self.indexOf(value) === index})) {\r\n                arr.push({ \"num_well\": num, \"wells\": data.filter(item => item.num_well === num)})\r\n            }\r\n            setArrNumWells(arr)\r\n        })\r\n    }\r\n\r\n    const getWellbores = (well_id) => {\r\n        fetch(process.env.REACT_APP_API+'wellbores/'+ well_id +'?format=json', { headers : { \r\n            'Content-Type': 'application/json',\r\n            'Accept': 'application/json',\r\n            'Authorization': \"Token \" + localStorage.getItem('id_token')\r\n           }\r\n        }) \r\n        .then(response=>response.json())\r\n        .then(data=>{\r\n            setWellboresData(data);\r\n        })\r\n    }\r\n\r\n    const getMethods = (service_id) => {\r\n        fetch(process.env.REACT_APP_API+'methods/'+ service_id +'?format=json', { headers : { \r\n            'Content-Type': 'application/json',\r\n            'Accept': 'application/json',\r\n            'Authorization': \"Token \" + localStorage.getItem('id_token')\r\n           }\r\n        }) \r\n        .then(response=>response.json())\r\n        .then(data=>{\r\n            setMethodsData(data);\r\n        })\r\n    }\r\n\r\n    const getDevices = (service_id) => {\r\n        fetch(process.env.REACT_APP_API+'service_devices/'+ service_id +'?format=json', { headers : { \r\n            'Content-Type': 'application/json',\r\n            'Accept': 'application/json',\r\n            'Authorization': \"Token \" + localStorage.getItem('id_token')\r\n           }\r\n        }) \r\n        .then(response=>response.json())\r\n        .then(data=>{\r\n            setDevicesData(data);\r\n        })\r\n    }\r\n\r\n    const putReportValue = (quality_control_id) => {\r\n        fetch(process.env.REACT_APP_API+'quality_control/id/'+ quality_control_id +'?format=json',{\r\n            method: 'PUT',\r\n            headers:{\r\n                'Accept':'application/json',\r\n                'Content-Type':'application/json',\r\n                'Authorization': \"Token \" + localStorage.getItem('id_token')\r\n            },\r\n            body: JSON.stringify({\r\n                \"id\": quality_control_id,\r\n                \"value\": value,\r\n                \"data_type\": data_type\r\n            }) \r\n        })\r\n    }\r\n\r\n    const putLasData = (quality_control_id) => {\r\n        fetch(process.env.REACT_APP_API+'las_file/id/'+ quality_control_id +'?format=json',{\r\n            method: 'PUT',\r\n            headers:{\r\n                'Accept':'application/json',\r\n                'Content-Type':'application/json',\r\n                'Authorization': \"Token \" + localStorage.getItem('id_token')\r\n            },\r\n            body: JSON.stringify({\r\n                \"quality_control_id\": quality_control_id,\r\n                \"cap\": lasData.cap,\r\n                \"parametres\": lasData.parametres,\r\n                \"mnemodescription\": lasData.mnemodescription,\r\n                \"tabledata\": lasData.tabledata,\r\n                \"las_file_count\": lasData.las_file_count,\r\n                \"status\": lasData.status \r\n            }) \r\n        })\r\n        .then((response) => {\r\n            if(!response.ok) throw new Error(response.status);\r\n            else setShowSuccessToast(true);\r\n          })\r\n        setCheckLasChange(false);\r\n    }\r\n\r\n    const putWitsmlData = (quality_control_id) => {\r\n        fetch(process.env.REACT_APP_API+'witsml/id/'+ quality_control_id +'?format=json',{\r\n            method: 'PUT',\r\n            headers:{\r\n                'Accept':'application/json',\r\n                'Content-Type':'application/json',\r\n                'Authorization': \"Token \" + localStorage.getItem('id_token')\r\n            },\r\n            body: JSON.stringify({\r\n                \"quality_control_id\": quality_control_id,\r\n                \"curvenames\": witsmlData.curvenames,\r\n                \"mnemodescription\": witsmlData.mnemodescription,\r\n                \"fullness_data\": witsmlData.fullness_data,\r\n                \"witsml_count\": witsmlData.witsml_count,\r\n                \"status\": witsmlData.status\r\n            }) \r\n        })\r\n        .then((response) => {\r\n            if(!response.ok) throw new Error(response.status);\r\n            else setShowSuccessToast(true);\r\n          })\r\n        setCheckWitsmlChange(false);\r\n    }\r\n\r\n    const putDensityData = (quality_control_id) => {\r\n        fetch(process.env.REACT_APP_API+'quality_control/id/'+ quality_control_id +'?format=json',{\r\n            method: 'PUT',\r\n            headers:{\r\n                'Accept':'application/json',\r\n                'Content-Type':'application/json',\r\n                'Authorization': \"Token \" + localStorage.getItem('id_token')\r\n            },\r\n            body: JSON.stringify({\r\n                \"id\": quality_control_id,\r\n                \"density\": Number(densityData.density),\r\n                \"section_interval_start\": section_interval_start,\r\n                \"data_type\": data_type\r\n            }) \r\n        })\r\n        .then((response) => {\r\n            if(!response.ok) throw new Error(response.status);\r\n            else setShowSuccessToast(true);\r\n          })\r\n        setCheckDensityChange(false);\r\n    }\r\n\r\n    const putFullnessData = (quality_control_id) => {\r\n        fetch(process.env.REACT_APP_API+'full_inform/id/'+ quality_control_id +'?format=json',{\r\n            method: 'PUT',\r\n            headers:{\r\n                'Accept':'application/json',\r\n                'Content-Type':'application/json',\r\n                'Authorization': \"Token \" + localStorage.getItem('id_token')\r\n            },\r\n            body: JSON.stringify({\r\n                \"quality_control_id\": quality_control_id,\r\n                \"titul_list\": fullnessData.titul_list,\r\n                \"well_construction\": fullnessData.well_construction,\r\n                \"wellbore_sizes\": fullnessData.wellbore_sizes,\r\n                \"chrono_data\": fullnessData.chrono_data,\r\n                \"sol_data\":  fullnessData.sol_data,\r\n                \"dash_comp\": fullnessData.dash_comp,\r\n                \"summary_data\": fullnessData.summary_data,\r\n                \"inklino_data\": fullnessData.inklino_data,\r\n                \"main_record\": fullnessData.main_record,\r\n                \"parametr\": fullnessData.parametr,\r\n                \"control_record\": fullnessData.control_record,\r\n                \"lqc\": fullnessData.lqc,\r\n                \"calibration\": fullnessData.calibration,\r\n                \"full_inf_count\": fullnessData.full_inf_count\r\n            }) \r\n        })\r\n        .then((response) => {\r\n            if(!response.ok) throw new Error(response.status);\r\n            else setShowSuccessToast(true);\r\n          })\r\n        setCheckFullnessChange(false);\r\n    }\r\n\r\n    const putWellboreValues = (wellbore_id) => {\r\n        fetch(process.env.REACT_APP_API+'wellbores/id/'+ wellbore_id +'?format=json',{\r\n            method: 'PUT',\r\n            headers:{\r\n                'Accept':'application/json',\r\n                'Content-Type':'application/json',\r\n                'Authorization': \"Token \" + localStorage.getItem('id_token')\r\n            },\r\n            body: JSON.stringify({\r\n                \"id\": wellbore_id,\r\n                \"num_wellbore\": num_wellbore,\r\n                \"pie_well\": pie_well,\r\n                \"diametr\":  diametr,\r\n                \"well_id\": well_id\r\n            }) \r\n        })\r\n        .then((response) => {\r\n            if(!response.ok) throw new Error(response.status);\r\n            else setShowSuccessToast(true);\r\n          })\r\n        setCheckWellboreValues(false);\r\n    }\r\n\r\n    const putWellValues = (well_id) => {\r\n        fetch(process.env.REACT_APP_API+'wells/id/'+ well_id +'?format=json',{\r\n            method: 'PUT',\r\n            headers:{\r\n                'Accept':'application/json',\r\n                'Content-Type':'application/json',\r\n                'Authorization': \"Token \" + localStorage.getItem('id_token')\r\n            },\r\n            body: JSON.stringify({\r\n                \"id\": well_id,\r\n                \"num_well\": num_well,\r\n                \"num_pad\": num_pad,\r\n                \"well_type\": well_type,\r\n                \"field_id\": field_id\r\n            }) \r\n        })\r\n        .then((response) => {\r\n            if(!response.ok) throw new Error(response.status);\r\n            else setShowSuccessToast(true);\r\n          })\r\n        setCheckWellValues(false);\r\n    }\r\n\r\n    const putInformSecondValues = (quality_control_id) => {\r\n        fetch(process.env.REACT_APP_API+'inform_for_method/put/'+ quality_control_id +'?format=json',{\r\n            method: 'PUT',\r\n            headers:{\r\n                'Accept':'application/json',\r\n                'Content-Type':'application/json',\r\n                'Authorization': \"Token \" + localStorage.getItem('id_token')\r\n            },\r\n            body: JSON.stringify({\r\n                \"service_id\": service_id,\r\n                \"inform_for_method\": prepare_for_put_inform_method(rows, methodsData, devicesData),\r\n                \"second_table\": prepare_for_put_secondtable(secondrows, methodsData)\r\n            }) \r\n        })\r\n        .then((response) => {\r\n            if(!response.ok) throw new Error(response.status);\r\n            else setShowSuccessToast(true);\r\n          })\r\n          console.log(JSON.stringify({\r\n            \"service_id\": service_id,\r\n            \"inform_for_method\": prepare_for_put_inform_method(rows, methodsData, devicesData),\r\n            \"second_table\": prepare_for_put_secondtable(secondrows, methodsData)\r\n        }))\r\n        setCheckValues(false);\r\n    }\r\n\r\n    const postReport = () => {\r\n        if(check_validity(customer, field, num_pad, num_well, num_wellbore, data_type, section_interval_start, section_interval_end, rows)) {\r\n        var split_wellbore = num_wellbore.split(\" \");\r\n        fetch(process.env.REACT_APP_API+'full_post/?format=json',{\r\n            method: 'POST',\r\n            headers:{\r\n                'Accept':'application/json',\r\n                'Content-Type':'application/json',\r\n                'Authorization': \"Token \" + localStorage.getItem('id_token')\r\n            },\r\n            body: JSON.stringify({\r\n                \"value\": value,\r\n                \"density\": densityData,\r\n                \"id_wellbore\": wellboresData.find(i => i.num_wellbore === split_wellbore[1] && i.pie_well === split_wellbore[0]).id,\r\n                \"section_interval_start\": section_interval_start,\r\n                \"section_interval_end\": section_interval_end,\r\n                \"service_id\": servicesData.find(s => s.name === service).id,\r\n                \"data_type\": data_type, \r\n                \"full_inform\": fullnessData,\r\n                \"las_file\": lasData,\r\n                \"witsml\": witsmlData,\r\n                \"inform_for_method\": prepare_for_post_inform_method(rows, methodsData, devicesData),\r\n                \"second_table\": prepare_for_post_secondtable(secondrows, methodsData)\r\n            }) \r\n        })\r\n        .then((response) => {\r\n            if(!response.ok) throw new Error(response.status);\r\n            else history.push({ pathname:  `/app/reports` });\r\n          })\r\n        console.log(JSON.stringify({\r\n            \"value\": value,\r\n            \"density\": densityData,\r\n            \"id_wellbore\": wellboresData.find(i => i.num_wellbore === split_wellbore[1] && i.pie_well === split_wellbore[0]).id,\r\n            \"section_interval_start\": section_interval_start,\r\n            \"section_interval_end\": section_interval_end,\r\n            \"service_id\": servicesData.find(s => s.name === service).id,\r\n            \"data_type\": data_type, \r\n            \"full_inform\": fullnessData,\r\n            \"las_file\": lasData,\r\n            \"witsml\": witsmlData,\r\n            \"inform_for_method\": prepare_for_post_inform_method(rows, methodsData, devicesData),\r\n            \"second_table\": prepare_for_post_secondtable(secondrows, methodsData)\r\n        }))\r\n        setCheckValuesForPost(false);\r\n        } else setShowValidityToast(true);\r\n    }\r\n\r\n    const putReport = (props) => {\r\n        if(check_validity(customer, field, num_pad, num_well, num_wellbore, data_type, section_interval_start, section_interval_end, rows)){\r\n            if(checkLasChange || checkWitsmlChange || checkDensityChange || checkFullnessChange || checkWellboreValues || checkWellValues || checkValues || checkValuesForPost !== false) {\r\n            checkLasChange && putLasData(props.match.params.id);\r\n            checkWitsmlChange && putWitsmlData(props.match.params.id);\r\n            checkDensityChange && putDensityData(props.match.params.id);\r\n            checkFullnessChange && putFullnessData(props.match.params.id);\r\n            checkWellboreValues && putWellboreValues(wellbore_id);\r\n            checkWellValues && putWellValues(well_id);\r\n            checkValues && putInformSecondValues(props.match.params.id);\r\n            checkValuesForPost && postReport();\r\n            putReportValue(props.match.params.id);\r\n            } else setShowNoChangesToast(true);\r\n        } else setShowValidityToast(true);\r\n    }\r\n\r\n    const deleteInformMethod = (id) => {\r\n        fetch(process.env.REACT_APP_API+'inform_for_method/id/'+ id +'?format=json', { method: 'DELETE', headers:{'Authorization': \"Token \" + localStorage.getItem('id_token')} })\r\n    }\r\n\r\n    const getExcel = (props) => {\r\n        fetch(process.env.REACT_APP_API+'save_file/'+ props.match.params.id +'?format=json', { headers : { \r\n            'Content-Type': 'application/json',\r\n            'Accept': 'application/json',\r\n            'Authorization': \"Token \" + localStorage.getItem('id_token')\r\n           }\r\n        }) \r\n        .then(response=>response.json())\r\n        .then(data=>{\r\n            window.open(data.file, '_blank')\r\n        })\r\n    }\r\n\r\n    const getPdf = (props) => {\r\n        fetch(process.env.REACT_APP_API+'save_file_pdf/'+ props.match.params.id +'?format=json', { headers : { \r\n            'Content-Type': 'application/json',\r\n            'Accept': 'application/json',\r\n            'Authorization': \"Token \" + localStorage.getItem('id_token')\r\n           }\r\n        }) \r\n        .then(response=>response.json())\r\n        .then(data=>{\r\n            window.open(data.file, '_blank')\r\n        })\r\n    }\r\n\r\n    function updateBaseValues(e){\r\n        var inputName = e.target.name;\r\n        var inputValue = e.target.value;\r\n        if(inputName === 'customer'){\r\n                setCustomer(inputValue);\r\n                getFields(customersData.find(i => i.name === inputValue).id)\r\n           }\r\n        else if(inputName === 'field'){\r\n               setField(inputValue);\r\n               getClusters(fieldsData.find(i => i.name === inputValue).id);\r\n           }\r\n        else if(inputName === 'num_pad'){\r\n                setNum_pad(inputValue);\r\n                getWells(clustersData.find(i => i.name === inputValue).id);\r\n           }\r\n        else if(inputName === 'num_well'){\r\n                var split_well = inputValue.split(\" \");\r\n                setNum_well(inputValue);\r\n                getWellbores(wellsData.find(i => i.num_well === split_well[1] && i.well_type === split_well[0]).id);\r\n           }\r\n        else if(inputName === 'num_wellbore'){\r\n                var split_wellbore = inputValue.split(\" \");\r\n                setNum_wellbore(inputValue);\r\n                setPie_well(wellboresData.find(i => i.num_wellbore === split_wellbore[1] && i.pie_well === split_wellbore[0]).pie_well);\r\n                setDiametr(wellboresData.find(i => i.num_wellbore === split_wellbore[1] && i.pie_well === split_wellbore[0]).diametr)\r\n           }\r\n        else if(inputName === 'well_type'){\r\n                setWell_type(inputValue);\r\n           }\r\n        else if(inputName === 'service'){\r\n                setService(inputValue);\r\n                setService_id(servicesData.find(s => s.name === inputValue).id)\r\n                getMethods(servicesData.find(i => i.name === inputValue).id);\r\n                getDevices(servicesData.find(i => i.name === inputValue).id);\r\n           }\r\n        else if(inputName === 'pie_well'){\r\n                setPie_well(inputValue);\r\n           }\r\n        else if(inputName === 'data_type'){\r\n                setData_type(inputValue);\r\n                setCheckValuesForPost(true);\r\n           }\r\n        else if(inputName === 'section_interval_start'){\r\n                inputValue === \"\" ? setSection_interval_start(null) : setSection_interval_start(inputValue);\r\n                setCheckDensityChange(true);\r\n           }\r\n        else if(inputName === 'section_interval_end'){\r\n                inputValue === \"\" ? setSection_interval_end(null) : setSection_interval_end(inputValue);\r\n                setCheckValuesForPost(true);\r\n           }\r\n        else if(inputName === 'diametr'){\r\n                inputValue === \"\" ? setDiametr(null) : setDiametr(inputValue);\r\n           }\r\n    }\r\n\r\n    const updateWitsmlValues = (data) => {\r\n        setWitsmlData(data);\r\n        if (data.status === false && lasData.status === false)\r\n            setLasData({...lasData, \"status\": true })\r\n        setCheckWitsmlChange(true);\r\n    }\r\n    const updateLasValues = (data) => {\r\n        setLasData(data);\r\n        if (data.status === false && witsmlData.status === false)\r\n            setWitsmlData({...witsmlData, \"status\": true })\r\n        setCheckLasChange(true);\r\n    }\r\n    const updateFullnessValues = (data) => {\r\n        setFullnessData(data);\r\n        setCheckFullnessChange(true);\r\n    }\r\n    const updateDensityValues = (data) => {\r\n        setDensityData(data);\r\n        setCheckDensityChange(true);\r\n    }\r\n\r\n     const deleteData = (index) => {\r\n        if(rows.length > 0){\r\n            var updatedRows = [...rows]\r\n            var updatedRowsSecond = [...secondrows]\r\n            var indexToRemove = updatedRows.findIndex(x => x.index === index);\r\n            if(index > -1){\r\n                if(updatedRows[indexToRemove].id !== null) deleteInformMethod(updatedRows[indexToRemove].id)\r\n               updatedRows.splice(indexToRemove, 1);\r\n               updatedRowsSecond.splice(indexToRemove, 1);\r\n               setRows(make_indexes(updatedRows));\r\n               setSecondrows(make_indexes(updatedRowsSecond));\r\n            }\r\n            setCheckValues(true);\r\n         }\r\n    }\r\n\r\n    const handleModalFullness = () => {\r\n        setShowModalFullness(!showModalFullness);\r\n    }\r\n    const handleModalLas = () => {\r\n        setShowModalLas(!showModalLas);\r\n    }\r\n    const handleModalWitsml = () => {\r\n        setShowModalWitsml(!showModalWitsml);\r\n    }\r\n    const handleModalDensity = () => {\r\n        setShowModalDensity(!showModalDensity);\r\n    }\r\n    const handleValidityToast = () => {\r\n        setShowValidityToast(!showValidityToast);\r\n    }\r\n    const handleNoChangesToast = () => {\r\n        setShowNoChangesToast(!showNoChangesToast);\r\n    }\r\n    const handleSuccessToast = () => {\r\n        setShowSuccessToast(!showSuccessToast);\r\n    }\r\n    const handleModalData = () => {\r\n        setShowModalData(!showModalData);\r\n    }\r\n\r\n    const updateData = (row, secondrow) => {\r\n        if (rows.length === 0) {\r\n            setRows([{...row, index: 0}])\r\n            setSecondrows([{...secondrow, index: 0}])\r\n        }\r\n        if (rows.length !== 0 && row.index === null){\r\n            tableRowIndex = parseFloat(tableRowIndex) + 1\r\n            var updatedRows = [...rows]\r\n            var updatedRowsSecond = [...secondrows]\r\n            updatedRows[tableRowIndex] = {...row, index: tableRowIndex}\r\n            updatedRowsSecond[tableRowIndex] = {...secondrow, index: tableRowIndex}\r\n            setRows(updatedRows);\r\n            setSecondrows(updatedRowsSecond);\r\n        }\r\n        if (rows.length !== 0 && row.index !== null){\r\n            var updatedRows = [...rows]\r\n            var updatedRowsSecond = [...secondrows]\r\n            updatedRows[row.index] = row\r\n            updatedRowsSecond[secondrow.index] = secondrow\r\n            setRows(updatedRows);\r\n            setSecondrows(updatedRowsSecond);\r\n        }\r\n        if (rows.length !== 0) {\r\n            setValue(calc_finish_value(rows, lasData, witsmlData, fullnessData.full_inf_count).toFixed(1))\r\n        }\r\n        setCheckValues(true);\r\n    }\r\n\r\n    useEffect(() => {\r\n        getServices();\r\n        getCustomers();\r\n        getReport(props);\r\n    }, [test])\r\n\r\n    useEffect(() => {\r\n        rows.length !== 0 && (tableRowIndex = rows.length - 1) \r\n    }, [rows])\r\n\r\n    useEffect(() => {\r\n        if (reportData.customer_id !== undefined){\r\n        getFields(reportData.customer_id);\r\n        getClusters(reportData.field_id);\r\n        getWells(reportData.cluster_id);\r\n        getWellbores(reportData.well_id);\r\n        reportData.service_id !== undefined && getMethods(reportData.service_id);\r\n        reportData.service_id !== undefined && getDevices(reportData.service_id);\r\n        }\r\n    }, [reportData])\r\n\r\n    useEffect(() => {\r\n        if (rows.length !== 0) {\r\n            setValue(calc_finish_value(rows, lasData, witsmlData, fullnessData.full_inf_count).toFixed(1))\r\n        } \r\n    }, [rows, lasData, fullnessData, witsmlData, data_type])\r\n\r\n    const mainData = {\r\n        customer: customer, \r\n        field: field,\r\n        field_id: reportData.field_id, \r\n        num_pad: num_pad, \r\n        num_well: num_well, \r\n        num_wellbore: num_wellbore, \r\n        pie_well: pie_well, \r\n        well_type: well_type,\r\n        service: service,\r\n        data_type: data_type,\r\n        section_interval_start: section_interval_start,\r\n        section_interval_end: section_interval_end,\r\n        diametr: diametr\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <Suspense fallback={<p style={{zIndex: \"9999\"}}></p>}>\r\n                <FullnessDialog active={showModalFullness} setActive={handleModalFullness} fullness={fullnessData} role={role} onUpdate={updateFullnessValues}/>\r\n                <LasDialog active={showModalLas} setActive={handleModalLas} las={lasData} role={role} onUpdate={updateLasValues}/>\r\n                <WitsmlDialog active={showModalWitsml} setActive={handleModalWitsml} witsml={witsmlData} role={role} onUpdate={updateWitsmlValues}/>\r\n                <DensityDialog active={showModalDensity} setActive={handleModalDensity} density_data={densityData} role={role} onUpdate={updateDensityValues}/>\r\n                <FillDataDialog active={showModalData} setActive={handleModalData} methodsData = {methodsData} role={role} devicesData = {devicesData} mainData = {mainData} row={rowIndex !== 999999 ? rows[rowIndex] : {}} secondrow={rowIndex !== 999999 ? secondrows[rowIndex] : {}} service_id={service_id} lqc={fullnessData.lqc} status={{\"las\": lasData.status, \"witsml\": witsmlData.status}} onUpdate={updateData} onDelete={deleteData}/>\r\n            </Suspense>\r\n            <ValidityToast active={showValidityToast} setActive={handleValidityToast}/>\r\n            <NoChangesToast active={showNoChangesToast} setActive={handleNoChangesToast}/>\r\n            <SuccessToast active={showSuccessToast} setActive={handleSuccessToast}/>\r\n            <PageTitle title={customer === \"\" ? <>Загрузка отчёта<CircularProgress size={24} style={{ marginLeft: 15, position: 'relative', top: 4 }} /></> \r\n            : (data_type === \"\" && \"\" || data_type === \"Реального времени\" && \"Оперативный \" || data_type === \"Из памяти прибора\" && \"Финальный \")\r\n            + \"отчёт №\" + reportData.quality_control_id + \" по месторождению \"+ reportData.field_name + \" скважины №\" + reportData.num_well}/>\r\n            <Grid container spacing={4}>\r\n            <Grid item xs={12}>\r\n            <Card\r\n                sx={{ minWidth: 275 }}\r\n                elevation={4}\r\n                style={{\r\n                  borderRadius: \"15px\",\r\n                  backgroundColor: \"#34547A\",\r\n                  color: \"#fff\",\r\n                }}\r\n              >\r\n            <CardContent style={{ padding: \"0.5rem 1.5rem 0 1.5rem\", color:\"white\"}}>\r\n                <Form.Group as={Row} style={{paddingBottom:\"0.5rem\"}}>\r\n                        <Col xs=\"2\">\r\n                            <FormControl fullWidth variant=\"standard\">\r\n                                <InputLabel id=\"customer\" style={styleInput}>Общество</InputLabel>\r\n                                    <Select labelId=\"customer\" name=\"customer\" label=\"Общество\" size=\"small\" style={styleSelect} value={customer} onChange={e => updateBaseValues(e)}>\r\n                                        <MenuItem hidden disabled></MenuItem>\r\n                                        {customersData.map(item => (<MenuItem key={item.name} value={item.name} style={{fontSize:\"20px\"}}>{item.name}</MenuItem>))}\r\n                                    </Select>\r\n                            </FormControl>\r\n                        </Col>\r\n                        <Col xs=\"2\">\r\n                            <FormControl fullWidth variant=\"standard\">\r\n                                <InputLabel id=\"field\" style={styleInput}>Месторождение</InputLabel>\r\n                                    <Select labelId=\"field\" name=\"field\" label=\"Месторождение\" size=\"small\" style={styleSelect} value={field} onChange={e => updateBaseValues(e)}>\r\n                                        <MenuItem hidden disabled></MenuItem>\r\n                                        {fieldsData.map(item => (<MenuItem key={item.name} value={item.name} style={{fontSize:\"20px\"}}>{item.name}</MenuItem>))}\r\n                                    </Select>\r\n                            </FormControl>\r\n                        </Col>\r\n                        <Col xs=\"1\">\r\n                            <FormControl fullWidth variant=\"standard\">\r\n                                <InputLabel id=\"num_pad\" style={styleInput}>Куст</InputLabel>\r\n                                    <Select labelId=\"num_pad\" name=\"num_pad\" label=\"Куст\" size=\"small\" style={styleSelect} value={num_pad} onChange={e => updateBaseValues(e)}>\r\n                                        <MenuItem hidden disabled></MenuItem>\r\n                                        {clustersData.map(item => {return <MenuItem key={item.name} value={item.name} style={{fontSize:\"20px\"}}>{item.name}</MenuItem>})}\r\n                                    </Select>\r\n                            </FormControl>\r\n                        </Col>\r\n                        <Col xs=\"2\">\r\n                            <FormControl fullWidth variant=\"standard\">\r\n                                <InputLabel htmlFor=\"num_well\" style={styleInput}>Скважина</InputLabel>\r\n                                    <Select labelId=\"num_well\" name=\"num_well\" label=\"Скважина\" size=\"small\" style={styleSelect} value={num_well} onChange={e => updateBaseValues(e)}>\r\n                                        <MenuItem hidden disabled></MenuItem>\r\n                                        {arrNumWells.map(item => {return [<ListSubheader>{\"Скважина \" + item.num_well}</ListSubheader>, item.wells.map(i => {return <MenuItem key={i.well_type + i.num_well} value={i.well_type + \" \" + i.num_well} style={{fontSize:\"20px\"}}>{i.well_type + \" \" + i.num_well}</MenuItem>})]})}\r\n                                    </Select>\r\n                            </FormControl>\r\n                        </Col>\r\n                        <Col xs=\"2\">\r\n                            <FormControl fullWidth variant=\"standard\">\r\n                                <InputLabel id=\"num_wellbore\" style={styleInput}>Ствол</InputLabel>\r\n                                    <Select labelId=\"num_wellbore\" name=\"num_wellbore\" label=\"Ствол\" size=\"small\" style={styleSelect} value={num_wellbore} onChange={e => updateBaseValues(e)}>\r\n                                        <MenuItem hidden disabled></MenuItem>\r\n                                        {wellboresData.map(item => {return <MenuItem key={item.num_wellbore + item.pie_well} value={item.pie_well + \" \" + item.num_wellbore} style={{fontSize:\"20px\"}}>{item.pie_well + \" \" + item.num_wellbore}</MenuItem>})\r\n                                        }\r\n                                    </Select>\r\n                            </FormControl>\r\n                        </Col>\r\n                        <Form.Label column xs=\"2\" style={{textAlign:\"right\", fontSize: \"22px\", fontWeight:\"700\", paddingTop:\"1.25rem\"}}>\r\n                        <NotInterestedIcon style={{fontSize:\"30px\"}}/> диаметр долота, {diametr} мм\r\n                        </Form.Label>\r\n                        <Col xs=\"1\" >\r\n                            <Button variant=\"yellow\" disabled={role === (\"viewer\" || \"superviewer\")} style={{minHeight:\"100%\", minWidth:\"100%\", marginTop:\"1rem\"}} onClick={() => putReport(props)}>Сохранить</Button>\r\n                        </Col>\r\n                    </Form.Group>\r\n                    <Form.Group as={Row} style={{paddingBottom:\"0.5rem\"}}>\r\n                        <Col xs=\"2\">\r\n                            <FormControl fullWidth variant=\"outlined\" size=\"small\">\r\n                                <InputLabel id=\"service\" style={styleInput}>Сервисная компания</InputLabel>\r\n                                    <Select labelId=\"service\" name=\"service\" style={styleSelect} size=\"small\" label=\"Сервисная компания\" value={service} onChange={e => updateBaseValues(e)}>\r\n                                        <MenuItem hidden disabled></MenuItem>\r\n                                        {servicesData.map(item => (<MenuItem key={item.name} value={item.name} style={{fontSize:\"20px\"}}>{item.name}</MenuItem>))}\r\n                                    </Select>\r\n                            </FormControl>\r\n                        </Col>\r\n                        <Col xs=\"2\">\r\n                            <FormControl fullWidth variant=\"outlined\" size=\"small\">\r\n                                <InputLabel id=\"data_type\" style={styleInput}>Вид данных</InputLabel>\r\n                                    <Select labelId=\"data_type\" name=\"data_type\" style={styleSelect} size=\"small\" label=\"Вид данных\" value={data_type} onChange={e => updateBaseValues(e)}>\r\n                                        <MenuItem key=\"1\" value=\"Реального времени\" style={{fontSize:\"20px\"}}>Реального времени</MenuItem>\r\n                                        <MenuItem key=\"2\" value=\"Из памяти прибора\" style={{fontSize:\"20px\"}}>Из памяти прибора</MenuItem>\r\n                                    </Select>\r\n                            </FormControl>\r\n                        </Col>\r\n                        <Form.Label column xs=\"2\" style={{textAlign:\"right\", verticalAlign:\"top\", fontSize: \"22px\", fontWeight:\"700\"}}>\r\n                        Интервал секции, м\r\n                        </Form.Label>\r\n                        <Col xs=\"1\">\r\n                            <Form.Control id=\"section_interval_start\" name=\"section_interval_start\" style={styleBlueInput} value={section_interval_start} type=\"number\" step=\"0.01\" onChange={e => updateBaseValues(e)}/>\r\n                        </Col>\r\n                        <Col xs=\"1\">\r\n                            <Form.Control id=\"section_interval_end\" name=\"section_interval_end\" style={styleBlueInput} value={section_interval_end} type=\"number\" step=\"0.01\" onChange={e => updateBaseValues(e)}/>\r\n                        </Col>\r\n                        <Col xs=\"3\"></Col>\r\n                        <Col xs=\"1\">\r\n                            <Button variant=\"yellow\" style={{height:\"100%\", width:\"48%\", float:\"left\"}} onClick={() => getExcel(props)} >Excel</Button>\r\n                            <Button disabled variant=\"yellow\" style={{height:\"100%\", width:\"48%\", float:\"right\"}} onClick={() => getPdf(props)}>PDF</Button>\r\n                        </Col>\r\n                    </Form.Group>\r\n            </CardContent>\r\n        </Card>\r\n            </Grid>\r\n            <Grid item xs={12}>\r\n            <Card\r\n                sx={{ minWidth: 275 }}\r\n                elevation={4}\r\n                style={{\r\n                  borderRadius: \"15px\",\r\n                  backgroundColor: \"#34547A\",\r\n                  color: \"#fff\",\r\n                }}\r\n              >\r\n            <CardContent style={{ paddingBottom: \"0\", color:\"white\"}}>\r\n                <Row>\r\n                    <Col xs={3} style={{borderRight:\"2px solid #6985AF\"}}>\r\n                    <Button variant=\"deepblueadd\" size=\"large\" onClick={handleModalFullness} style={{width: \"100%\", height: \"100%\", fontSize: \"18px\"}}>Полнота предоставления данных на планшете с каротажными диаграммами&nbsp;&nbsp;\r\n                    <Badge variant=\"light\">{fullnessData.full_inf_count !== null ? fullnessData.full_inf_count + \"%\" : \"%\"}</Badge></Button>\r\n                    </Col>\r\n                    <Col xs={3} style={{borderRight:\"2px solid #6985AF\"}}>\r\n                    <Button variant=\"deepblueadd\" size=\"large\" onClick={handleModalLas} style={{width: \"100%\", height: \"100%\", fontSize: \"18px\", display:\"inline-block\"}}>Оформление Las-файла&nbsp;&nbsp;\r\n                    <Badge variant=\"light\">{lasData.status === true ? (lasData.las_file_count !== null ? lasData.las_file_count + \"%\" : \"%\") : \"отсутствует\"}</Badge></Button>\r\n                    </Col>\r\n                    <Col xs={3} style={{borderRight:\"2px solid #6985AF\"}}>\r\n                    <Button variant=\"deepblueadd\" size=\"large\" onClick={handleModalWitsml} style={{width: \"100%\", height: \"100%\", fontSize: \"18px\"}}>Корректность загрузки данных реального времени (WITSML)&nbsp;&nbsp;\r\n                    <Badge variant=\"light\">{witsmlData.status === true ? (witsmlData.witsml_count !== null ? witsmlData.witsml_count + \"%\" : \"%\") : \"отсутствует\"}</Badge></Button>\r\n                    </Col>\r\n                    <Col xs={3}>\r\n                    <Button variant=\"deepblueadd\" size=\"large\" onClick={handleModalDensity} style={{width: \"100%\", height: \"100%\", fontSize: \"18px\"}}>Плотность данных:&nbsp;&nbsp;\r\n                    <Badge variant=\"light\">{densityData.density !== null ? densityData.density + \" точ. на метр\" : \"точ. на метр\"}</Badge></Button>\r\n                    </Col>\r\n                </Row>\r\n                <Row>\r\n                <Table>\r\n                        <TableHead style={{backgroundColor:\"#34547A\"}}>\r\n                            <TableRow>\r\n                                <TableCell align=\"center\" style={{width:\"50px\", color:\"white\", borderBottom:\"2px solid #6985AF\"}}>\r\n                                <IconButton\r\n                                    aria-haspopup=\"false\"\r\n                                    color=\"innherit\"\r\n                                    onClick={() => {setRowIndex(999999); handleModalData();}}\r\n                                    style={{outline: \"none\", visibility: (role === \"user\" || role === \"superuser\" ? 'visible' : 'hidden')}}\r\n                                    >\r\n                                    <PlusIcon style={{color:\"white\"}}/>\r\n                                </IconButton>\r\n                                </TableCell>\r\n                                <TableCell align=\"center\" style={{width:\"250px\", color:\"white\", borderBottom:\"2px solid #6985AF\", fontSize:\"18px\"}}>Метод</TableCell>\r\n                                <TableCell align=\"center\" style={{width: \"150px\", color:\"white\", borderBottom:\"2px solid #6985AF\", fontSize:\"18px\"}}>Тип прибора</TableCell>\r\n                                <TableCell align=\"center\" style={{color:\"white\", borderBottom:\"2px solid #6985AF\", fontSize:\"18px\"}}>Номер прибора</TableCell>\r\n                                <TableCell align=\"center\" style={{color:\"white\", borderBottom:\"2px solid #6985AF\", fontSize:\"18px\"}}>Дата калибровки прибора</TableCell>\r\n                                <TableCell align=\"center\" style={{color:\"white\", borderBottom:\"2px solid #6985AF\", fontSize:\"18px\"}}>Дата начала ГИС при бурении</TableCell>\r\n                                <TableCell align=\"center\" style={{color:\"white\", borderBottom:\"2px solid #6985AF\", fontSize:\"18px\"}}>Дата окончания ГИС при бурении</TableCell>\r\n                                <TableCell align=\"center\" style={{width: \"200px\", color:\"white\", borderBottom:\"2px solid #6985AF\", fontSize:\"18px\"}}>Интервал записи (факт), м</TableCell>\r\n                                <TableCell align=\"center\" style={{color:\"white\", borderBottom:\"2px solid #6985AF\", fontSize:\"18px\"}}>Коэффициент сходимости данных</TableCell>\r\n                                <TableCell align=\"center\" style={{color:\"white\", borderBottom:\"2px solid #6985AF\", fontSize:\"18px\"}}>Причина расхождения данных</TableCell>\r\n                                <TableCell align=\"center\" style={{color:\"white\", borderBottom:\"2px solid #6985AF\", fontSize:\"18px\"}}>Коэффициент отсутствия данных</TableCell>\r\n                                <TableCell align=\"center\" style={{width: \"200px\", color:\"white\", borderBottom:\"2px solid #6985AF\", fontSize:\"18px\"}}>Петрофизическая задача</TableCell>\r\n                            </TableRow>\r\n                        </TableHead>\r\n                        <TableBody style={{paddingTop:\"100px\"}}>\r\n                            {rows.map((row, index) => {\r\n                                    if (row) return(\r\n                                    <TableRow key={index} style={{cursor: \"pointer\", height:\"50px\", margin:\"0\", padding:\"0\", backgroundColor: (hover.index === index && hover.hover ? '#f0f0f0' : '#fff')}} onMouseEnter={() => setHover({index: index, hover: true})} onMouseLeave={() => setHover({index: index, hover: false})}>\r\n                                        <TableCell align=\"center\" style={styleCell}>\r\n                                        <IconButton\r\n                                                aria-haspopup=\"false\"\r\n                                                color=\"innherit\"\r\n                                                onClick={() => {window.confirm(\"Вы точно хотите удалить данный метод?\") && deleteData(index)}}\r\n                                                style={{outline: \"none\", padding:\"0\", margin:\"0\", visibility: (role === \"user\" || role === \"superuser\" ? 'visible' : 'hidden')}}\r\n                                                >\r\n                                                <RemoveCircleOutlineIcon style={{color:\"black\"}}/>\r\n                                            </IconButton>\r\n                                        </TableCell>\r\n                                        <TableCell align=\"center\" onClick={() => {setRowIndex(index); handleModalData()}} style={styleCell}>{row.method === \"\" ? <>&mdash;</> : row.method}</TableCell>\r\n                                        <TableCell align=\"center\" onClick={() => {setRowIndex(index); handleModalData()}} style={styleCell}>{row.tool_type === \"\" ? <>&mdash;</> : row.tool_type}</TableCell>\r\n                                        <TableCell align=\"center\" onClick={() => {setRowIndex(index); handleModalData()}} style={styleCell}>{row.tool_num === \"\" ? <>&mdash;</> : row.tool_num}</TableCell>\r\n                                        <TableCell align=\"center\" onClick={() => {setRowIndex(index); handleModalData()}} style={styleCell}>{row.calibr_date === null ? <>&mdash;</> : row.calibr_date}</TableCell>\r\n                                        <TableCell align=\"center\" onClick={() => {setRowIndex(index); handleModalData()}} style={styleCell}>{row.start_date === null ? <>&mdash;</> : row.start_date}</TableCell>\r\n                                        <TableCell align=\"center\" onClick={() => {setRowIndex(index); handleModalData()}} style={styleCell}>{row.end_date === null ? <>&mdash;</> : row.end_date}</TableCell>\r\n                                        <TableCell align=\"center\" onClick={() => {setRowIndex(index); handleModalData()}} style={styleCell}>{row.interval_shod_start === null || row.interval_shod_end === null ? <>&mdash;</> : row.interval_shod_start+\" - \"+row.interval_shod_end}</TableCell>\r\n                                        <TableCell align=\"center\" onClick={() => {setRowIndex(index); handleModalData()}} style={styleCell}>{row.koef_shod === null ? <>&mdash;</> : row.koef_shod}</TableCell>\r\n                                        <TableCell align=\"center\" onClick={() => {setRowIndex(index); handleModalData()}} style={styleCell}>{row.reason_rashod === \"\" ? <>&mdash;</> : row.reason_rashod}</TableCell>\r\n                                        <TableCell align=\"center\" onClick={() => {setRowIndex(index); handleModalData()}} style={styleCell}>{row.koef_fail === null ? <>&mdash;</> : row.koef_fail}</TableCell>\r\n                                        <TableCell align=\"center\" onClick={() => {setRowIndex(index); handleModalData()}} style={styleCell}>{row.petrophysic_task === null ? <>&mdash;</> : row.petrophysic_task}</TableCell>\r\n                                    </TableRow>\r\n                                )\r\n                            })}\r\n                        </TableBody>\r\n                </Table>\r\n                </Row>\r\n            </CardContent>\r\n            </Card>\r\n            </Grid>\r\n            <Grid item xs></Grid>\r\n            <Grid item xs=\"auto\" style={{textAlign: \"right\"}}>\r\n            <Card\r\n                sx={5}\r\n                elevation={4}\r\n                style={{\r\n                  borderRadius: \"15px\",\r\n                  backgroundColor: \"#34547A\",\r\n                  color: \"#fff\",\r\n                  visibility: (value === null ? \"hidden\" : \"visible\")\r\n                }}\r\n              >\r\n            <CardContent style={{paddingBottom: \"1rem\", color:\"white\"}}>\r\n                <Typography variant=\"button\" component=\"h2\" style={{fontSize: \"25px\"}}>\r\n                    {\"Общая оценка качества составила: \" + value + \"%\"}\r\n                </Typography>\r\n                </CardContent>\r\n                </Card>\r\n            </Grid>\r\n            <Grid item xs={12}>\r\n                <Button variant=\"secondary\" onClick={() => {history.goBack()}} style={{outline: \"none\"}}>Вернуться назад</Button>    \r\n            </Grid>\r\n            </Grid>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Report;","import React, {useEffect, useState, Suspense} from 'react';\r\n\r\nimport {\r\n    Grid,\r\n    Button,\r\n    CircularProgress,\r\n    Typography\r\n  } from \"@material-ui/core\";\r\nimport MUIDataTable from \"mui-datatables\";\r\n\r\nimport { useHistory } from \"react-router\";\r\n\r\nimport CustomToolbarSelect from '../../components/Toolbar/CustomToolbarSelect';\r\n\r\nimport PageTitle from \"../../components/PageTitle\";\r\n\r\nconst AddServiceDialog = React.lazy(() => import('../../components/Dialogs/AddServiceDialog'));\r\nconst EditServiceDialog = React.lazy(() => import('../../components/Dialogs/EditServiceDialog'));\r\n\r\nfunction Services() {\r\n  const [service_id, setService_id] = useState(0);\r\n  const [service_name, setService_name] = useState(\"\");\r\n  const [servicesData, setServicesData] = useState([]);\r\n  const [showModalService, setShowModalService] = useState(false);\r\n  const [showModalEditService, setShowModalEditService] = useState(false);\r\n  const [selectedRows, setSelectedRows] = useState([]);\r\n  const history = useHistory();\r\n  const role = localStorage.getItem('role');\r\n\r\n  const getServices = () => {\r\n    fetch(process.env.REACT_APP_API+'services/?format=json', { headers : { \r\n        'Content-Type': 'application/json',\r\n        'Accept': 'application/json',\r\n        'Authorization': \"Token \" + localStorage.getItem('id_token')\r\n       }\r\n    }) \r\n    .then(response=>response.json())\r\n    .then(data=>{\r\n        setServicesData(data);\r\n    })\r\n  }\r\n\r\n  const deleteService = (service_id) => {\r\n    fetch(process.env.REACT_APP_API+'services/'+ service_id +'?format=json', { method: 'DELETE', headers: {'Authorization': \"Token \" + localStorage.getItem('id_token')} })\r\n  }\r\n\r\n  const changeName = () => {\r\n    setService_id(servicesData[selectedRows[0]].id);\r\n    setService_name(servicesData[selectedRows[0]].name);\r\n    handleModalEditService();\r\n  }\r\n\r\n  const rowsDelete = () => {\r\n    if (window.confirm('Вы точно хотите удалить '+ servicesData[selectedRows[0]].name +' из списка сервисных компаний?')){\r\n      deleteService(servicesData[selectedRows[0]].id);\r\n      servicesData.splice(selectedRows[0], 1);\r\n    }\r\n    else\r\n      getServices();\r\n    setSelectedRows([]);\r\n  }\r\n\r\n  useEffect(() => {\r\n    getServices();\r\n  }, [showModalService])\r\n\r\n  const handleModalService = () => {\r\n    setShowModalService(!showModalService);\r\n  }\r\n  const handleModalEditService = () => {\r\n    setShowModalEditService(!showModalEditService);\r\n  }\r\n\r\n    return (\r\n        <>\r\n        <Suspense fallback={<p style={{zIndex: \"9999\"}}></p>}>\r\n          <AddServiceDialog active={showModalService} setActive={handleModalService}/>\r\n          <EditServiceDialog active={showModalEditService} setActive={handleModalEditService} service_id={service_id} service_name={service_name}/>\r\n        </Suspense>\r\n        <PageTitle title=\"Сервисные компании\" button={<Button\r\n            variant=\"contained\"\r\n            size=\"medium\"\r\n            color=\"secondary\"\r\n            style={{outline: \"none\", backgroundColor:\"#34547A\", visibility: (role === \"user\" || role === \"superuser\" ? 'visible' : 'hidden')}}\r\n            onClick={handleModalService}\r\n            >\r\n                Добавить сервисную компанию\r\n            </Button>} />\r\n            <Grid container spacing={4}>\r\n        <Grid item xs={12}>\r\n          <MUIDataTable\r\n            title={<Typography variant=\"h6\">\r\n            Список сервисных компаний\r\n            {servicesData.length === 0 && <CircularProgress size={24} style={{ marginLeft: 15, position: 'relative', top: 4 }} />}\r\n          </Typography>}\r\n            data={servicesData.map(item => [item.name])}\r\n            columns={[\"Название\"]}\r\n            options={{\r\n              viewColumns: false,\r\n              filter: false,\r\n              print: false,\r\n              download: false,\r\n              sort: false,\r\n              textLabels: {\r\n                body: {\r\n                  noMatch: \"Записей не найдено.\",\r\n                  toolTip: \"Сортировать\"\r\n                },\r\n                toolbar: {\r\n                  search: \"Поиск\"\r\n                },\r\n                pagination: {\r\n                  next: \"Следующая страница\",\r\n                  previous: \"Предыдущая страница\",\r\n                  rowsPerPage: \"Строк на странице:\",\r\n                  displayRows: \"из\",\r\n                },\r\n                selectedRows: {\r\n                  text: \"строка выбрана\"\r\n                },\r\n              },\r\n              selectableRows: (role === \"user\" || role === \"superuser\" ? 'single' : 'none'),\r\n              rowsSelected: selectedRows,\r\n              onRowSelectionChange: (rowsSelectedData, allRows, rowsSelected) => {\r\n                setSelectedRows(rowsSelected);\r\n              },\r\n              customToolbarSelect: (selectedRows, displayData, setSelectedRows) => (\r\n                <CustomToolbarSelect selectedRows={selectedRows} displayData={displayData} setSelectedRows={setSelectedRows} onChangeName={changeName} onRowsDelete={rowsDelete}/>\r\n              ),\r\n              setRowProps: value => ({ style: { cursor: 'pointer' } }),\r\n              onRowClick: (rowData, rowMeta) => {\r\n                history.push({\r\n                  pathname:  `/app/services/${servicesData[rowMeta.dataIndex].id}`,\r\n               });\r\n              }\r\n            }}\r\n          />\r\n        </Grid>\r\n        </Grid>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Services;","export const unique = (arr) => {\r\n    let result = [];\r\n    for (let str of arr) {\r\n        if (!result.includes(str)) {\r\n        result.push(str);\r\n        }\r\n    }\r\n    return result;\r\n  }\r\n\r\nexport const optimize_for_table = (arr, name_methods) => {\r\n    var arr_copy = [...arr];\r\n    var result = [];\r\n    while (arr_copy.length !== 0) {\r\n        for (var j = 0; j < name_methods.length; j++){\r\n            var index = arr_copy.findIndex(item => item.method_class === name_methods[j]);\r\n            if (index !== -1) {\r\n                result.push(arr_copy[index]);\r\n                arr_copy.splice(index, 1);\r\n            } else {\r\n                result.push(\"\");\r\n            }\r\n        }\r\n    }\r\n    return result;\r\n}","import React, {useState, useEffect, Suspense} from 'react';\r\n\r\nimport {DropdownButton, Dropdown} from 'react-bootstrap';\r\nimport {\r\n    Grid,\r\n    Table, TableHead, TableRow, TableCell, TableBody, TableContainer,\r\n    Button,\r\n    Paper\r\n} from \"@material-ui/core\";\r\n\r\nimport { useHistory } from \"react-router\";\r\nimport { MdDeleteSweep } from 'react-icons/md';\r\n\r\nimport PageTitle from \"../../components/PageTitle\";\r\nimport { unique, optimize_for_table } from './Scripts';\r\nimport DropdownMenu from 'react-bootstrap/esm/DropdownMenu';\r\n\r\nconst AddToolDialog = React.lazy(() => import('../../components/Dialogs/AddToolDialog'));\r\n\r\nfunction Service(props) {\r\n    const [servicesData, setServicesData]= useState([]);\r\n    const constant = false;\r\n    const history = useHistory();\r\n    const [names_methods, setNames_methods] = useState([]);\r\n    const [optimizedData, setOptimizedData] = useState([]);\r\n    const [showModalAddTool, setShowModalAddTool] = useState(false);\r\n    const role = localStorage.getItem('role');\r\n\r\n    useEffect(() => {\r\n        getService(props);\r\n      }, [constant])\r\n\r\n    const getService = (props) => {\r\n        fetch(process.env.REACT_APP_API+'full_data_services/'+ props.match.params.id +'?format=json', { headers : { \r\n            'Content-Type': 'application/json',\r\n            'Accept': 'application/json',\r\n            'Authorization': \"Token \" + localStorage.getItem('id_token')\r\n           }\r\n        }) \r\n        .then(response=>response.json())\r\n        .then(data=>{\r\n            setServicesData(data);\r\n            setNames_methods(unique(data.method.map(item => item.method_class)));\r\n            setOptimizedData(optimize_for_table(data.method, unique(data.method.map(item => item.method_class))))\r\n        })\r\n    }\r\n\r\n    const deleteTool = (tool_id) => {\r\n        if (role === (\"superuser\" || \"user\"))\r\n            if(window.confirm(\"Вы действительно хотите удалить данный инструмент?\"))\r\n                fetch(process.env.REACT_APP_API+'service_methods/id/'+ tool_id, { method: 'DELETE', headers: {'Authorization': \"Token \" + localStorage.getItem('id_token')} })\r\n      }\r\n\r\n    const runCallbackTableRow = (cb) => {\r\n        return cb();\r\n      };\r\n    const runCallbackTableCell = (cb) => {\r\n        return cb();\r\n    };\r\n\r\n    const handleModalAddTool = () => {\r\n        setShowModalAddTool(!showModalAddTool);\r\n    }\r\n\r\n    return (\r\n        <>\r\n        <Suspense fallback={<p style={{zIndex: \"9999\"}}></p>}>\r\n            <AddToolDialog active={showModalAddTool} setActive={handleModalAddTool} service_id={props.match.params.id}/>\r\n        </Suspense>\r\n        <PageTitle title={servicesData.name} button={<Button\r\n            variant=\"contained\"\r\n            size=\"medium\"\r\n            color=\"secondary\"\r\n            style={{outline: \"none\", backgroundColor:\"#34547A\", visibility: (role === \"user\" || role === \"superuser\" ? 'visible' : 'hidden')}}\r\n            onClick={() => handleModalAddTool()}\r\n            >\r\n                Добавить инструмент\r\n            </Button>} />\r\n        <Grid container spacing={4}>\r\n            <Grid item xs={12}>\r\n            <TableContainer component={Paper}>\r\n                <Table>\r\n                    <TableHead>\r\n                        <TableRow>\r\n                            {\r\n                            names_methods.length !==0 ? names_methods.map(item => { return <TableCell align=\"center\">{item}</TableCell>}) : <TableCell align=\"center\">МЕТОДОВ В СЕРВИСНОЙ КОМПАНИИ НЕ НАЙДЕНО</TableCell>\r\n                            }\r\n                        </TableRow>\r\n                    </TableHead>\r\n                    <TableBody>\r\n                        {runCallbackTableRow(() => {\r\n                            const row = [];\r\n                            const copy_optimized = [...optimizedData]\r\n                            for (var i = 0; i < Math.ceil(optimizedData.length / names_methods.length); i++) {\r\n                                row.push(<TableRow>\r\n                                    {runCallbackTableCell(() => {\r\n                                        const cells = [];\r\n                                        for (var j = 0; j < names_methods.length; j++){\r\n                                            cells.push(<TableCell align=\"center\" style={{minWidth:\"100%\"}}>\r\n                                                {copy_optimized[j].name !== undefined && <DropdownButton variant=\"secondary\" style={{minWidth:\"100%\"}} drop=\"right\" title={copy_optimized[j].name}>\r\n                                                    {copy_optimized[j].device !== undefined && copy_optimized[j].device.map(item => {\r\n                                                        return <Dropdown.Item style={{width:\"100%\", textAlign:\"center\", fontSize:\"20px\"}} onClick={() => {deleteTool(item.id_service_method); history.go(0);}}>{(role === (\"superuser\" || \"user\")) && <MdDeleteSweep/>}&ensp;{item.tool_type}</Dropdown.Item>\r\n                                                    })}\r\n                                                </DropdownButton>}\r\n                                            </TableCell>);\r\n                                        }\r\n                                        copy_optimized.splice(0, names_methods.length); \r\n                                        return cells;\r\n                                    })}\r\n                                </TableRow>);\r\n                            }\r\n                            return row;\r\n                        })}\r\n                    </TableBody>\r\n                </Table>\r\n            </TableContainer>\r\n            </Grid>\r\n            <Grid item xs={12}>    \r\n                <Button color=\"secondary\" variant=\"contained\" onClick={() => {history.goBack()}} style={{outline: \"none\", backgroundColor:\"#34547A\"}}>Вернуться назад</Button>    \r\n            </Grid>\r\n        </Grid>\r\n        \r\n        </>\r\n    )\r\n}\r\n\r\nexport default Service;","import React from 'react';\r\n\r\nconst Blocked = () => {\r\n    return (\r\n        <div style={{width:\"100%\", height:\"50%\",display:\"flex\", justifyContent: \"center\", alignItems:\"center\"}}>\r\n            <h1>У Вас нет прав доступа к этой странице! Авторизуйтесь под другим логином и паролем.</h1>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Blocked;\r\n","import React, {useEffect, useState, Suspense} from \"react\";\r\nimport {Form, Button, Badge, Row, Col} from 'react-bootstrap';\r\nimport {\r\n    Grid,\r\n    Table, TableHead, TableRow, TableCell, TableBody,\r\n    Card, CardContent,\r\n    IconButton,\r\n    ListSubheader,\r\n    Typography,\r\n    Select, MenuItem, FormControl,\r\n    InputLabel\r\n} from \"@material-ui/core\";\r\nimport { calc_finish_value } from \"../calcScripts\";\r\n\r\nimport {\r\n    AddCircleOutline as PlusIcon,\r\n    NotInterested as NotInterestedIcon,\r\n    RemoveCircleOutline as RemoveCircleOutlineIcon,\r\n  } from \"@material-ui/icons\";\r\n\r\nimport { useHistory } from \"react-router\";\r\n\r\nimport { styleCell, styleInput, styleSelect, styleTextfield, styleBlueInput } from \"./styles\";\r\n\r\nimport PageTitle from \"../../components/PageTitle\";\r\nimport ValidityToast from \"../../components/Toasts/ValidityToast\";\r\nimport SuccessToast from \"../../components/Toasts/SuccessToast\";\r\n\r\nimport Blocked from \"../../components/Blocked/Blocked\";\r\n\r\nimport { prepare_for_post_inform_method, prepare_for_post_secondtable, check_validity } from \"./Scripts\";\r\nimport { make_indexes } from \"../reports/Scripts\";\r\n\r\nimport \"../../pages/styles.css\"\r\n\r\nconst FullnessDialog = React.lazy(() => import('../../components/Dialogs/FullnessDialog'));\r\nconst LasDialog = React.lazy(() => import('../../components/Dialogs/LasDialog'));\r\nconst WitsmlDialog = React.lazy(() => import('../../components/Dialogs/WitsmlDialog'));\r\nconst DensityDialog = React.lazy(() => import('../../components/Dialogs/DensityDialog'));\r\nconst FillDataDialog = React.lazy(() => import('../../components/Dialogs/FillDataDialog'));\r\n\r\nvar tableRowIndex = 0;\r\n\r\nfunction Checklist() {\r\n    const role = localStorage.getItem('role');\r\n    const history = useHistory();\r\n    const [hover, setHover] = useState({\r\n        index: 0,\r\n        hover: false\r\n    });\r\n    const [showModalData, setShowModalData] = useState(false);\r\n    const [showModalFullness, setShowModalFullness] = useState(false);\r\n    const [showModalLas, setShowModalLas] = useState(false);\r\n    const [showModalWitsml, setShowModalWitsml] = useState(false);\r\n    const [showModalDensity, setShowModalDensity] = useState(false);\r\n    const [showValidityToast, setShowValidityToast] = useState(false);\r\n    const [showSuccessToast, setShowSuccessToast] = useState(false);\r\n\r\n    const [rows, setRows] = useState([]);\r\n    const [secondrows, setSecondrows] = useState([]);\r\n    const [witsmlData, setWitsmlData] = useState({\r\n        fullness_data: \"\",\r\n        curvenames: \"\",\r\n        mnemodescription: \"\",\r\n        witsml_count: null,\r\n        status: true\r\n    });\r\n    const [lasData, setLasData] = useState({\r\n        cap: \"\",\r\n        parametres: \"\",\r\n        mnemodescription: \"\",\r\n        tabledata: \"\",\r\n        las_file_count: null,\r\n        status: true\r\n    });\r\n    const [densityData, setDensityData] = useState({\r\n        density: null,\r\n    });\r\n    const [fullnessData, setFullnessData] = useState({\r\n        titul_list: \"\",\r\n        well_construction: \"\",\r\n        wellbore_sizes: \"\",\r\n        chrono_data: \"\",\r\n        sol_data: \"\",\r\n        dash_comp: \"\",\r\n        summary_data: \"\",\r\n        inklino_data: \"\",\r\n        main_record: \"\",\r\n        parametr: \"\",\r\n        control_record: \"\",\r\n        lqc: \"\",\r\n        calibration: \"\",\r\n        full_inf_count: null,\r\n    });\r\n    const [quality_id, setQuality_id] = useState(null);\r\n    const [customer, setCustomer] = useState(\"\");\r\n    const [field, setField] = useState(\"\");\r\n    const [num_pad, setNum_pad] = useState(\"\");\r\n    const [num_well, setNum_well] = useState(\"\");\r\n    const [num_wellbore, setNum_wellbore] = useState(\"\");\r\n    const [well_type, setWell_type] = useState(\"\");\r\n    const [service, setService] = useState(\"\");\r\n    const [service_id, setService_id] = useState(null);\r\n    const [pie_well, setPie_well] = useState(\"\");\r\n    const [data_type, setData_type] = useState(\"\");\r\n    const [section_interval_start, setSection_interval_start] = useState(null);\r\n    const [section_interval_end, setSection_interval_end] = useState(null);\r\n    const [diametr, setDiametr] = useState(null);\r\n    const [value, setValue] = useState(null);\r\n    const [test, setTest] = useState(\"\");\r\n    const [rowIndex, setRowIndex] = useState(null);\r\n\r\n    const [servicesData, setServicesData] = useState([]);\r\n    const [methodsData, setMethodsData] = useState([]);\r\n    const [devicesData, setDevicesData] = useState([]);\r\n    const [customersData, setCustomersData] = useState([]);\r\n    const [fieldsData, setFieldsData] = useState([]);\r\n    const [clustersData, setClustersData] = useState([]);\r\n    const [wellsData, setWellsData] = useState([]);\r\n    const [wellboresData, setWellboresData] = useState([]);\r\n\r\n    const [arrNumWells, setArrNumWells] = useState([]);\r\n\r\n    const getServices = () => {\r\n        fetch(process.env.REACT_APP_API+'services/?format=json', { headers : { \r\n            'Content-Type': 'application/json',\r\n            'Accept': 'application/json',\r\n            'Authorization': \"Token \" + localStorage.getItem('id_token')\r\n           }\r\n        }) \r\n        .then(response=>response.json())\r\n        .then(data=>{\r\n            setServicesData(data);\r\n        })\r\n    }\r\n\r\n    const getCustomers = () => {\r\n        fetch(process.env.REACT_APP_API+'customers/?format=json', { headers : { \r\n            'Content-Type': 'application/json',\r\n            'Accept': 'application/json',\r\n            'Authorization': \"Token \" + localStorage.getItem('id_token')\r\n           }\r\n        }) \r\n        .then(response=>response.json())\r\n        .then(data=>{\r\n            setCustomersData(data);\r\n        })\r\n    }\r\n\r\n    const getFields = (customer_id) => {\r\n        fetch(process.env.REACT_APP_API+'fields/'+ customer_id +'?format=json', { headers : { \r\n            'Content-Type': 'application/json',\r\n            'Accept': 'application/json',\r\n            'Authorization': \"Token \" + localStorage.getItem('id_token')\r\n           }\r\n        }) \r\n        .then(response=>response.json())\r\n        .then(data=>{\r\n            setFieldsData(data);\r\n        })\r\n    }\r\n\r\n    const getClusters = (field_id) => {\r\n        fetch(process.env.REACT_APP_API+'clusters/'+ field_id +'?format=json', { headers : { \r\n            'Content-Type': 'application/json',\r\n            'Accept': 'application/json',\r\n            'Authorization': \"Token \" + localStorage.getItem('id_token')\r\n           }\r\n        }) \r\n        .then(response=>response.json())\r\n        .then(data=>{\r\n            setClustersData(data);\r\n        })\r\n    }\r\n\r\n    const getWells = (cluster_id) => {\r\n        fetch(process.env.REACT_APP_API+'wells/'+ cluster_id +'?format=json', { headers : { \r\n            'Content-Type': 'application/json',\r\n            'Accept': 'application/json',\r\n            'Authorization': \"Token \" + localStorage.getItem('id_token')\r\n           }\r\n        }) \r\n        .then(response=>response.json())\r\n        .then(data=>{\r\n            setWellsData(data);\r\n            var arr = []\r\n            for (const num of data.map(item => item.num_well).filter((value, index, self) => {return self.indexOf(value) === index})) {\r\n                arr.push({ \"num_well\": num, \"wells\": data.filter(item => item.num_well === num)})\r\n            }\r\n            setArrNumWells(arr)\r\n        })\r\n    }\r\n\r\n    const getWellbores = (well_id) => {\r\n        fetch(process.env.REACT_APP_API+'wellbores/'+ well_id +'?format=json', { headers : { \r\n            'Content-Type': 'application/json',\r\n            'Accept': 'application/json',\r\n            'Authorization': \"Token \" + localStorage.getItem('id_token')\r\n           }\r\n        }) \r\n        .then(response=>response.json())\r\n        .then(data=>{\r\n            setWellboresData(data);\r\n        })\r\n    }\r\n    \r\n    const getMethods = (service_id) => {\r\n        service_id !== null &&\r\n          methodsData.length === 0 &&\r\n          fetch(\r\n            process.env.REACT_APP_API + \"methods/\" + service_id + \"?format=json\",\r\n            {\r\n              headers: {\r\n                \"Content-Type\": \"application/json\",\r\n                'Authorization': \"Token \" + localStorage.getItem('id_token'),\r\n                'Accept': \"application/json\",\r\n              },\r\n            },\r\n          )\r\n            .then((response) => response.json())\r\n            .then((data) => {\r\n              setMethodsData(data);\r\n            });\r\n      }\r\n\r\n    const getDevices = (service_id) => {\r\n        fetch(\r\n          process.env.REACT_APP_API +\r\n            \"service_devices/\" +\r\n            service_id +\r\n            \"?format=json\",\r\n          {\r\n            headers: {\r\n              \"Content-Type\": \"application/json\",\r\n              Accept: \"application/json\",\r\n              'Authorization': \"Token \" + localStorage.getItem('id_token')\r\n            },\r\n          },\r\n        )\r\n          .then((response) => response.json())\r\n          .then((data) => {\r\n            setDevicesData(data);\r\n          });\r\n      };\r\n\r\n    const postReport = () => {\r\n        if(check_validity(customer, field, num_pad, num_well, num_wellbore, data_type, section_interval_start, section_interval_end)) {\r\n        var split_wellbore = num_wellbore.split(\" \");\r\n        fetch(process.env.REACT_APP_API+'full_post/',{\r\n            method: 'POST',\r\n            headers:{\r\n                'Accept':'application/json',\r\n                'Content-Type':'application/json',\r\n                'Authorization': \"Token \" + localStorage.getItem('id_token')\r\n            },\r\n            body: JSON.stringify({\r\n                \"value\": value,\r\n                \"density\": densityData,\r\n                \"id_wellbore\": wellboresData.find(i => i.num_wellbore === split_wellbore[1] && i.pie_well === split_wellbore[0]).id,\r\n                \"section_interval_start\": section_interval_start,\r\n                \"section_interval_end\": section_interval_end,\r\n                \"service_id\": servicesData.find(s => s.name === service).id,\r\n                \"data_type\": data_type, \r\n                \"full_inform\": fullnessData,\r\n                \"las_file\": lasData,\r\n                \"witsml\": witsmlData,\r\n                \"inform_for_method\": prepare_for_post_inform_method(rows, methodsData, devicesData),\r\n                \"second_table\": prepare_for_post_secondtable(secondrows, methodsData)\r\n            }) \r\n        })\r\n        .then(response => response.json())\r\n        .then(data=>{\r\n            history.push({\r\n                pathname:  `/app/reports/${data.quality_control_pk}`,\r\n             })\r\n        })\r\n        localStorage.setItem('post_quality_json', JSON.stringify({\r\n            \"value\": value,\r\n            \"density\": densityData,\r\n            \"id_wellbore\": wellboresData.find(i => i.num_wellbore === split_wellbore[1] && i.pie_well === split_wellbore[0]).id,\r\n            \"section_interval_start\": section_interval_start,\r\n            \"section_interval_end\": section_interval_end,\r\n            \"service_id\": servicesData.find(s => s.name === service).id,\r\n            \"data_type\": data_type, \r\n            \"full_inform\": fullnessData,\r\n            \"las_file\": lasData,\r\n            \"witsml\": witsmlData,\r\n            \"inform_for_method\": prepare_for_post_inform_method(rows, methodsData, devicesData),\r\n            \"second_table\": prepare_for_post_secondtable(secondrows, methodsData)\r\n    }));\r\n        console.log(JSON.stringify({\r\n                \"value\": value,\r\n                \"density\": densityData,\r\n                \"id_wellbore\": wellboresData.find(i => i.num_wellbore === split_wellbore[1] && i.pie_well === split_wellbore[0]).id,\r\n                \"section_interval_start\": section_interval_start,\r\n                \"section_interval_end\": section_interval_end,\r\n                \"service_id\": servicesData.find(s => s.name === service).id,\r\n                \"data_type\": data_type, \r\n                \"full_inform\": fullnessData,\r\n                \"las_file\": lasData,\r\n                \"witsml\": witsmlData,\r\n                \"inform_for_method\": prepare_for_post_inform_method(rows, methodsData, devicesData),\r\n                \"second_table\": prepare_for_post_secondtable(secondrows, methodsData)\r\n        }))\r\n        } else setShowValidityToast(!showValidityToast);\r\n    }\r\n\r\n    function updateBaseValues(e){\r\n        var inputName = e.target.name;\r\n        var inputValue = e.target.value;\r\n        if(inputName === 'customer'){\r\n                setCustomer(inputValue)\r\n                setField(\"\")\r\n                setNum_pad(\"\")\r\n                setNum_well(\"\")\r\n                setNum_wellbore(\"\")\r\n                getFields(customersData.find(i => i.name === inputValue).id)\r\n           }\r\n        else if(inputName === 'field'){\r\n               setField(inputValue)\r\n               setNum_pad(\"\")\r\n               setNum_well(\"\")\r\n               setNum_wellbore(\"\")\r\n               getClusters(fieldsData.find(i => i.name === inputValue).id)\r\n           }\r\n        else if(inputName === 'num_pad'){\r\n                setNum_pad(inputValue)\r\n                setNum_well(\"\")\r\n                setNum_wellbore(\"\")\r\n                getWells(clustersData.find(i => i.name === inputValue).id)\r\n           }\r\n        else if(inputName === 'num_well'){\r\n                var split_well = inputValue.split(\" \")\r\n                setNum_well(inputValue)\r\n                setNum_wellbore(\"\")\r\n                getWellbores(wellsData.find(i => i.num_well === split_well[1] && i.well_type === split_well[0]).id)\r\n           }\r\n        else if(inputName === 'num_wellbore'){\r\n                var split_wellbore = inputValue.split(\" \")\r\n                setNum_wellbore(inputValue)\r\n                setDiametr(wellboresData.find(i => i.num_wellbore === split_wellbore[1] && i.pie_well === split_wellbore[0]).diametr)\r\n           }\r\n        else if(inputName === 'well_type'){\r\n                setWell_type(inputValue)\r\n           }\r\n        else if(inputName === 'service'){\r\n                setService(inputValue);\r\n                setService_id(servicesData.find(i => i.name === inputValue).id);\r\n                getMethods(servicesData.find(i => i.name === inputValue).id);\r\n                getDevices(servicesData.find(i => i.name === inputValue).id);\r\n            }\r\n        else if(inputName === 'pie_well'){\r\n                setPie_well(inputValue);\r\n           }\r\n        else if(inputName === 'data_type'){\r\n                setData_type(inputValue);\r\n           }\r\n        else if(inputName === 'section_interval_start'){\r\n                inputValue === \"\" ? setSection_interval_start(null) : setSection_interval_start(inputValue);\r\n           }\r\n        else if(inputName === 'section_interval_end'){\r\n                inputValue === \"\" ? setSection_interval_end(null) : setSection_interval_end(inputValue);\r\n           }\r\n        else if(inputName === 'diametr'){\r\n                inputValue === \"\" ? setDiametr(null) : setDiametr(inputValue);\r\n           }\r\n    }\r\n\r\n    const updateWitsmlValues = (data) => {\r\n        setWitsmlData(data);\r\n        if (data.status === false && lasData.status === false)\r\n            setLasData({...lasData, \"status\": true })\r\n    }\r\n    const updateLasValues = (data) => {\r\n        setLasData(data);\r\n        if (data.status === false && witsmlData.status === false)\r\n            setWitsmlData({...witsmlData, \"status\": true })\r\n\r\n    }\r\n    const updateFullnessValues = (data) => {\r\n        setFullnessData(data);\r\n    }\r\n    const updateDensityValues = (data) => {\r\n        setDensityData(data);\r\n    }\r\n    const updateData = (row, secondrow) => {\r\n        var updatedRows = [...rows]\r\n        var updatedRowsSecond = [...secondrows]\r\n        if (rows.length === 0) {\r\n            setRows([{...row, index: 0}])\r\n            setSecondrows([{...secondrow, index: 0}])\r\n        }\r\n        if (rows.length !== 0 && row.index === null){\r\n            tableRowIndex = parseFloat(tableRowIndex) + 1\r\n            updatedRows[tableRowIndex] = {...row, index: tableRowIndex}\r\n            updatedRowsSecond[tableRowIndex] = {...secondrow, index: tableRowIndex}\r\n            setRows(updatedRows);\r\n            setSecondrows(updatedRowsSecond);\r\n        }\r\n        if (rows.length !== 0 && row.index !== null){\r\n            updatedRows[row.index] = row\r\n            updatedRowsSecond[secondrow.index] = secondrow\r\n            setRows(updatedRows);\r\n            setSecondrows(updatedRowsSecond);\r\n        }\r\n        if (rows.length !== 0) {\r\n            setValue(calc_finish_value(rows, lasData, witsmlData, fullnessData.full_inf_count).toFixed(1))\r\n        }\r\n    }\r\n\r\n    const deleteData = (index) => {\r\n        if(rows.length > 0){\r\n            var updatedRows = [...rows]\r\n            var updatedRowsSecond = [...secondrows]\r\n            var indexToRemove = updatedRows.findIndex(x => x.index === index);\r\n            if(index > -1){\r\n               updatedRows.splice(indexToRemove, 1);\r\n               updatedRowsSecond.splice(indexToRemove, 1);\r\n               setRows(make_indexes(updatedRows));\r\n               setSecondrows(make_indexes(updatedRowsSecond));\r\n            }\r\n         }\r\n    }\r\n\r\n    const handleModalData = () => {\r\n        setShowModalData(!showModalData);\r\n    }\r\n    const handleModalFullness = () => {\r\n        setShowModalFullness(!showModalFullness);\r\n    }\r\n    const handleModalLas = () => {\r\n        setShowModalLas(!showModalLas);\r\n    }\r\n    const handleModalWitsml = () => {\r\n        setShowModalWitsml(!showModalWitsml);\r\n    }\r\n    const handleModalDensity = () => {\r\n        setShowModalDensity(!showModalDensity);\r\n    }\r\n    const handleValidityToast = () => {\r\n        setShowValidityToast(!showValidityToast);\r\n    }\r\n    const handleSuccessToast = () => {\r\n        setShowSuccessToast(!showSuccessToast);\r\n    }\r\n\r\n    useEffect(() => {\r\n        getServices();\r\n        getCustomers();\r\n    }, [test])\r\n\r\n    useEffect(() => {\r\n        console.log(rows)\r\n    })\r\n\r\n    useEffect(() => {\r\n        rows.length !== 0 && (tableRowIndex = rows.length - 1) \r\n    }, [rows])\r\n\r\n    useEffect(() => {\r\n        if (rows.length !== 0) {\r\n            setValue(calc_finish_value(rows, lasData, witsmlData, fullnessData.full_inf_count).toFixed(1))\r\n        }\r\n    }, [rows, fullnessData, lasData, witsmlData, data_type])\r\n\r\n    const mainData = {\r\n        customer: customer, \r\n        field: field,\r\n        field_id: field !== \"\" ? fieldsData.find(item => item.name === field).id : null, \r\n        num_pad: num_pad, \r\n        num_well: num_well, \r\n        num_wellbore: num_wellbore, \r\n        pie_well: pie_well, \r\n        well_type: well_type,\r\n        service: service,\r\n        data_type: data_type,\r\n        section_interval_start: section_interval_start,\r\n        section_interval_end: section_interval_end,\r\n        diametr: diametr\r\n    }\r\n\r\n    if (role === \"user\" || role === \"superuser\") \r\n        return (\r\n            <>\r\n                <Suspense fallback={<p style={{zIndex: \"9999\"}}></p>}>\r\n                    <FullnessDialog active={showModalFullness} setActive={handleModalFullness} fullness={fullnessData} onUpdate={updateFullnessValues}/>\r\n                </Suspense>\r\n                <Suspense fallback={<p style={{zIndex: \"9999\"}}></p>}>    \r\n                    <FillDataDialog active={showModalData} setActive={handleModalData} methodsData = {methodsData} devicesData = {devicesData} mainData = {mainData} row={rowIndex !== 999999 ? rows[rowIndex] : {}} secondrow={rowIndex !== 999999 ? secondrows[rowIndex] : {}} service_id={service_id} lqc={fullnessData.lqc} status={{\"las\": lasData.status, \"witsml\": witsmlData.status}} onUpdate={updateData} onDelete={deleteData}/>\r\n                    <LasDialog active={showModalLas} setActive={handleModalLas} las={lasData} onUpdate={updateLasValues}/>\r\n                    <WitsmlDialog active={showModalWitsml} setActive={handleModalWitsml} witsml={witsmlData} onUpdate={updateWitsmlValues}/>\r\n                    <DensityDialog active={showModalDensity} setActive={handleModalDensity} density_data={densityData} onUpdate={updateDensityValues}/>\r\n                </Suspense>\r\n                <ValidityToast active={showValidityToast} setActive={handleValidityToast}/>\r\n                <SuccessToast active={showSuccessToast} setActive={handleSuccessToast}/>\r\n                <PageTitle title={data_type === \"\" && \"Качество данных ГИС\" || data_type === \"Реального времени\" && \"Качество данных ГИС (Оперативный отчёт)\" \r\n                || data_type === \"Из памяти прибора\" && \"Качество данных ГИС (Финальный отчёт)\"} />\r\n                <Grid container spacing={4}>\r\n                <Grid item xs={12}>\r\n                <Card\r\n                    sx={{ minWidth: 275 }}\r\n                    elevation={4}\r\n                    style={{\r\n                    borderRadius: \"15px\",\r\n                    backgroundColor: \"#34547A\",\r\n                    color: \"#fff\",\r\n                    }}\r\n                >\r\n                <CardContent style={{ padding: \"0.5rem 1.5rem 0 1.5rem\", color:\"white\"}}>\r\n                    <Form.Group as={Row} style={{paddingBottom:\"0.5rem\"}}>\r\n                        <Col xs=\"2\">\r\n                            <FormControl fullWidth variant=\"standard\">\r\n                                <InputLabel id=\"customer\" style={styleInput}>Общество</InputLabel>\r\n                                    <Select labelId=\"customer\" name=\"customer\" label=\"Общество\" size=\"small\" style={styleSelect} value={customer} onChange={e => updateBaseValues(e)}>\r\n                                        <MenuItem hidden disabled></MenuItem>\r\n                                        {customersData.map(item => (<MenuItem key={item.name} value={item.name} style={{fontSize:\"20px\"}}>{item.name}</MenuItem>))}\r\n                                    </Select>\r\n                            </FormControl>\r\n                        </Col>\r\n                        <Col xs=\"2\">\r\n                            <FormControl fullWidth variant=\"standard\">\r\n                                <InputLabel id=\"field\" style={styleInput}>Месторождение</InputLabel>\r\n                                    <Select labelId=\"field\" name=\"field\" label=\"Месторождение\" size=\"small\" style={styleSelect} value={field} onChange={e => updateBaseValues(e)}>\r\n                                        <MenuItem hidden disabled></MenuItem>\r\n                                        {fieldsData.map(item => (<MenuItem key={item.name} value={item.name} style={{fontSize:\"20px\"}}>{item.name}</MenuItem>))}\r\n                                    </Select>\r\n                            </FormControl>\r\n                        </Col>\r\n                        <Col xs=\"1\">\r\n                            <FormControl fullWidth variant=\"standard\">\r\n                                <InputLabel id=\"num_pad\" style={styleInput}>Куст</InputLabel>\r\n                                    <Select labelId=\"num_pad\" name=\"num_pad\" label=\"Куст\" size=\"small\" style={styleSelect} value={num_pad} onChange={e => updateBaseValues(e)}>\r\n                                        <MenuItem hidden disabled></MenuItem>\r\n                                        {clustersData.map(item => {return <MenuItem key={item.name} value={item.name} style={{fontSize:\"20px\"}}>{item.name}</MenuItem>})}\r\n                                    </Select>\r\n                            </FormControl>\r\n                        </Col>\r\n                        <Col xs=\"2\">\r\n                            <FormControl fullWidth variant=\"standard\">\r\n                                <InputLabel htmlFor=\"num_well\" style={styleInput}>Скважина</InputLabel>\r\n                                    <Select labelId=\"num_well\" name=\"num_well\" label=\"Скважина\" size=\"small\" style={styleSelect} value={num_well} onChange={e => updateBaseValues(e)}>\r\n                                        <MenuItem hidden disabled></MenuItem>\r\n                                        {arrNumWells.map(item => {return [<ListSubheader>{\"Скважина \" + item.num_well}</ListSubheader>, item.wells.map(i => {return <MenuItem key={i.well_type + i.num_well} value={i.well_type + \" \" + i.num_well} style={{fontSize:\"20px\"}}>{i.well_type}</MenuItem>})]})}\r\n                                    </Select>\r\n                            </FormControl>\r\n                        </Col>\r\n                        <Col xs=\"2\">\r\n                            <FormControl fullWidth variant=\"standard\">\r\n                                <InputLabel id=\"num_wellbore\" style={styleInput}>Ствол</InputLabel>\r\n                                    <Select labelId=\"num_wellbore\" name=\"num_wellbore\" label=\"Ствол\" size=\"small\" style={styleSelect} value={num_wellbore} onChange={e => updateBaseValues(e)}>\r\n                                        <MenuItem hidden disabled></MenuItem>\r\n                                        {wellboresData.map(item => {return <MenuItem key={item.num_wellbore + item.pie_well} value={item.pie_well + \" \" + item.num_wellbore} style={{fontSize:\"20px\"}}>{item.num_wellbore !== \"1\" ? item.pie_well + \" \" + item.num_wellbore : item.pie_well}</MenuItem>})}\r\n                                    </Select>\r\n                            </FormControl>\r\n                        </Col>\r\n                        <Form.Label column xs=\"2\" style={{textAlign:\"right\", fontSize: \"22px\", fontWeight:\"700\", paddingTop:\"1.25rem\"}}>\r\n                        <NotInterestedIcon style={{fontSize:\"30px\"}}/> диаметр долота, {diametr} мм\r\n                        </Form.Label>\r\n                        <Col xs=\"1\" >\r\n                            <Button variant=\"yellow\" style={{minHeight:\"100%\", minWidth:\"100%\", marginTop:\"1rem\"}} onClick={() => postReport()}>Сохранить</Button>\r\n                        </Col>\r\n                    </Form.Group>\r\n                    <Form.Group as={Row} style={{paddingBottom:\"0.5rem\"}}>\r\n                        <Col xs=\"2\">\r\n                            <FormControl fullWidth variant=\"outlined\" size=\"small\">\r\n                                <InputLabel id=\"service\" style={styleInput}>Сервисная компания</InputLabel>\r\n                                    <Select labelId=\"service\" name=\"service\" style={styleSelect} size=\"small\" label=\"Сервисная компания\" value={service} onChange={e => updateBaseValues(e)}>\r\n                                        <MenuItem hidden disabled></MenuItem>\r\n                                        {servicesData.map(item => (<MenuItem key={item.name} value={item.name} style={{fontSize:\"20px\"}}>{item.name}</MenuItem>))}\r\n                                    </Select>\r\n                            </FormControl>\r\n                        </Col>\r\n                        <Col xs=\"2\">\r\n                            <FormControl fullWidth variant=\"outlined\" size=\"small\">\r\n                                <InputLabel id=\"data_type\" style={styleInput}>Вид данных</InputLabel>\r\n                                    <Select labelId=\"data_type\" name=\"data_type\" style={styleSelect} size=\"small\" label=\"Вид данных\" value={data_type} onChange={e => updateBaseValues(e)}>\r\n                                        <MenuItem key=\"1\" value=\"Реального времени\" style={{fontSize:\"20px\"}}>Реального времени</MenuItem>\r\n                                        <MenuItem key=\"2\" value=\"Из памяти прибора\" style={{fontSize:\"20px\"}}>Из памяти прибора</MenuItem>\r\n                                    </Select>\r\n                            </FormControl>\r\n                        </Col>\r\n                        <Form.Label column xs=\"2\" style={{textAlign:\"right\", verticalAlign:\"top\", fontSize: \"22px\", fontWeight:\"700\"}}>\r\n                        Интервал секции, м\r\n                        </Form.Label>\r\n                        <Col xs=\"1\">\r\n                            <Form.Control id=\"section_interval_start\" name=\"section_interval_start\" style={styleBlueInput} value={section_interval_start} type=\"number\" step=\"0.01\" onChange={e => updateBaseValues(e)}/>\r\n                        </Col>\r\n                        <Col xs=\"1\">\r\n                            <Form.Control id=\"section_interval_end\" name=\"section_interval_end\" style={styleBlueInput} value={section_interval_end} type=\"number\" step=\"0.01\" onChange={e => updateBaseValues(e)}/>\r\n                        </Col>\r\n                        <Col xs=\"3\"></Col>\r\n                        <Col xs=\"1\">\r\n                            <Button disabled variant=\"yellow\" style={{height:\"100%\", width:\"48%\", float:\"left\"}} >Excel</Button>\r\n                            <Button disabled variant=\"yellow\" style={{height:\"100%\", width:\"48%\", float:\"right\"}} >PDF</Button>\r\n                        </Col>\r\n                    </Form.Group>\r\n                </CardContent>\r\n            </Card>\r\n                </Grid>\r\n                <Grid item xs={12}>\r\n                <Card\r\n                    sx={{ minWidth: 275 }}\r\n                    elevation={4}\r\n                    style={{\r\n                    borderRadius: \"15px\",\r\n                    backgroundColor: \"#34547A\",\r\n                    color: \"#fff\",\r\n                    }}\r\n                >\r\n                <CardContent style={{ paddingBottom: \"0\", color:\"white\"}}>\r\n                    <Row>\r\n                        <Col xs={3} style={{borderRight:\"2px solid #6985AF\"}}>\r\n                        <Button variant=\"deepblueadd\" size=\"large\" onClick={handleModalFullness} style={{width: \"100%\", height: \"100%\", fontSize: \"18px\"}}>Полнота предоставления данных на планшете с каротажными диаграммами&nbsp;&nbsp;\r\n                        <Badge variant=\"light\">{fullnessData.full_inf_count !== null ? fullnessData.full_inf_count + \"%\" : \"%\"}</Badge></Button>\r\n                        </Col>\r\n                        <Col xs={3} style={{borderRight:\"2px solid #6985AF\"}}>\r\n                        <Button variant=\"deepblueadd\" size=\"large\" onClick={handleModalLas} style={{width: \"100%\", height: \"100%\", fontSize: \"18px\", display:\"inline-block\"}}>Оформление Las-файла&nbsp;&nbsp;\r\n                        <Badge variant=\"light\">{lasData.status === true ? (lasData.las_file_count !== null ? lasData.las_file_count + \"%\" : \"%\") : \"отсутствует\"}</Badge></Button>\r\n                        </Col>\r\n                        <Col xs={3} style={{borderRight:\"2px solid #6985AF\"}}>\r\n                        <Button variant=\"deepblueadd\" size=\"large\" onClick={handleModalWitsml} style={{width: \"100%\", height: \"100%\", fontSize: \"18px\"}}>Корректность загрузки данных реального времени (WITSML)&nbsp;&nbsp;\r\n                        <Badge variant=\"light\">{witsmlData.status === true ? (witsmlData.witsml_count !== null ? witsmlData.witsml_count + \"%\" : \"%\") : \"отсутствует\"}</Badge></Button>\r\n                        </Col>\r\n                        <Col xs={3}>\r\n                        <Button variant=\"deepblueadd\" size=\"large\" onClick={handleModalDensity} style={{width: \"100%\", height: \"100%\", fontSize: \"18px\"}}>Плотность данных:&nbsp;&nbsp;\r\n                        <Badge variant=\"light\">{densityData.density !== null ? densityData.density + \" точ. на метр\" : \"точ. на метр\"}</Badge></Button>\r\n                        </Col>\r\n                    </Row>\r\n                    <Row>\r\n                    <Table>\r\n                            <TableHead style={{backgroundColor:\"#34547A\"}}>\r\n                                <TableRow>\r\n                                    <TableCell align=\"center\" style={{width:\"50px\", color:\"white\", borderBottom:\"2px solid #6985AF\"}}>\r\n                                    <IconButton\r\n                                        aria-haspopup=\"false\"\r\n                                        color=\"innherit\"\r\n                                        onClick={() => {setRowIndex(999999); handleModalData();}}\r\n                                        style={{outline: \"none\", visibility: (data_type === \"\" ? \"hidden\" : \"visible\")}}\r\n                                        >\r\n                                        <PlusIcon style={{color:\"white\"}}/>\r\n                                    </IconButton>\r\n                                    </TableCell>\r\n                                    <TableCell align=\"center\" style={{width:\"250px\", color:\"white\", borderBottom:\"2px solid #6985AF\", fontSize:\"18px\"}}>Метод</TableCell>\r\n                                    <TableCell align=\"center\" style={{width: \"150px\", color:\"white\", borderBottom:\"2px solid #6985AF\", fontSize:\"18px\"}}>Тип прибора</TableCell>\r\n                                    <TableCell align=\"center\" style={{color:\"white\", borderBottom:\"2px solid #6985AF\", fontSize:\"18px\"}}>Номер прибора</TableCell>\r\n                                    <TableCell align=\"center\" style={{color:\"white\", borderBottom:\"2px solid #6985AF\", fontSize:\"18px\"}}>Дата калибровки прибора</TableCell>\r\n                                    <TableCell align=\"center\" style={{color:\"white\", borderBottom:\"2px solid #6985AF\", fontSize:\"18px\"}}>Дата начала ГИС при бурении</TableCell>\r\n                                    <TableCell align=\"center\" style={{color:\"white\", borderBottom:\"2px solid #6985AF\", fontSize:\"18px\"}}>Дата окончания ГИС при бурении</TableCell>\r\n                                    <TableCell align=\"center\" style={{width: \"200px\", color:\"white\", borderBottom:\"2px solid #6985AF\", fontSize:\"18px\"}}>Интервал записи (факт), м</TableCell>\r\n                                    <TableCell align=\"center\" style={{color:\"white\", borderBottom:\"2px solid #6985AF\", fontSize:\"18px\"}}>Коэффициент сходимости данных</TableCell>\r\n                                    <TableCell align=\"center\" style={{color:\"white\", borderBottom:\"2px solid #6985AF\", fontSize:\"18px\"}}>Причина расхождения данных</TableCell>\r\n                                    <TableCell align=\"center\" style={{color:\"white\", borderBottom:\"2px solid #6985AF\", fontSize:\"18px\"}}>Коэффициент отсутствия данных</TableCell>\r\n                                    <TableCell align=\"center\" style={{width: \"200px\", color:\"white\", borderBottom:\"2px solid #6985AF\", fontSize:\"18px\"}}>Петрофизическая задача</TableCell>\r\n                                </TableRow>\r\n                            </TableHead>\r\n                            <TableBody style={{paddingTop:\"100px\"}}>\r\n                                {rows.map((row, index) => {\r\n                                        if (row) return(\r\n                                        <TableRow key={index} style={{cursor: \"pointer\", height:\"50px\", margin:\"0\", padding:\"0\", backgroundColor: (hover.index === index && hover.hover ? '#f0f0f0' : '#fff')}} onMouseEnter={() => setHover({index: index, hover: true})} onMouseLeave={() => setHover({index: index, hover: false})}>\r\n                                            <TableCell align=\"center\" style={styleCell}>\r\n                                            <IconButton\r\n                                                    aria-haspopup=\"true\"\r\n                                                    color=\"innherit\"\r\n                                                    onClick={() => {window.confirm(\"Вы точно хотите удалить данный метод?\") && deleteData(index)}}\r\n                                                    style={{outline: \"none\", padding:\"0\", margin:\"0\"}}\r\n                                                    >\r\n                                                    <RemoveCircleOutlineIcon style={{color:\"black\"}}/>\r\n                                                </IconButton>\r\n                                            </TableCell>\r\n                                            <TableCell align=\"center\" onClick={() => {setRowIndex(index); handleModalData()}} style={styleCell}>{row.method === \"\" ? <>&mdash;</> : index + row.method}</TableCell>\r\n                                            <TableCell align=\"center\" onClick={() => {setRowIndex(index); handleModalData()}} style={styleCell}>{row.tool_type === \"\" ? <>&mdash;</> : row.tool_type}</TableCell>\r\n                                            <TableCell align=\"center\" onClick={() => {setRowIndex(index); handleModalData()}} style={styleCell}>{row.tool_num === \"\" ? <>&mdash;</> : row.tool_num}</TableCell>\r\n                                            <TableCell align=\"center\" onClick={() => {setRowIndex(index); handleModalData()}} style={styleCell}>{row.calibr_date === null ? <>&mdash;</> : row.calibr_date}</TableCell>\r\n                                            <TableCell align=\"center\" onClick={() => {setRowIndex(index); handleModalData()}} style={styleCell}>{row.start_date === null ? <>&mdash;</> : row.start_date}</TableCell>\r\n                                            <TableCell align=\"center\" onClick={() => {setRowIndex(index); handleModalData()}} style={styleCell}>{row.end_date === null ? <>&mdash;</> : row.end_date}</TableCell>\r\n                                            <TableCell align=\"center\" onClick={() => {setRowIndex(index); handleModalData()}} style={styleCell}>{row.interval_shod_start === null || row.interval_shod_end === null ? <>&mdash;</> : row.interval_shod_start+\" - \"+row.interval_shod_end}</TableCell>\r\n                                            <TableCell align=\"center\" onClick={() => {setRowIndex(index); handleModalData()}} style={styleCell}>{row.koef_shod === null ? <>&mdash;</> : row.koef_shod}</TableCell>\r\n                                            <TableCell align=\"center\" onClick={() => {setRowIndex(index); handleModalData()}} style={styleCell}>{row.reason_rashod === \"\" ? <>&mdash;</> : row.reason_rashod}</TableCell>\r\n                                            <TableCell align=\"center\" onClick={() => {setRowIndex(index); handleModalData()}} style={styleCell}>{row.koef_fail === null ? <>&mdash;</> : row.koef_fail}</TableCell>\r\n                                            <TableCell align=\"center\" onClick={() => {setRowIndex(index); handleModalData()}} style={styleCell}>{row.petrophysic_task === null ? <>&mdash;</> : row.petrophysic_task}</TableCell>\r\n                                        </TableRow>\r\n                                    )\r\n                                })}\r\n                            </TableBody>\r\n                    </Table>\r\n                    </Row>\r\n                </CardContent>\r\n                </Card>\r\n                </Grid>\r\n                <Grid item xs></Grid>\r\n                <Grid item xs=\"auto\" style={{textAlign: \"right\"}}>\r\n                <Card\r\n                    sx={5}\r\n                    elevation={4}\r\n                    style={{\r\n                    borderRadius: \"15px\",\r\n                    backgroundColor: \"#34547A\",\r\n                    color: \"#fff\",\r\n                    visibility: (value === null ? \"hidden\" : \"visible\")\r\n                    }}\r\n                >\r\n                <CardContent style={{paddingBottom: \"1rem\", color:\"white\"}}>\r\n                    <Typography variant=\"button\" component=\"h2\" style={{fontSize: \"25px\"}}>\r\n                        {\"Общая оценка качества составила: \" + value + \"%\"}\r\n                    </Typography>\r\n                    </CardContent>\r\n                    </Card>\r\n                </Grid>\r\n                </Grid>\r\n            </>\r\n        )\r\n    else return(<Blocked/>)\r\n}\r\n\r\nexport default Checklist;","import React from 'react';\r\n\r\nimport {\r\n    Grid\r\n} from \"@material-ui/core\";\r\n\r\nimport PageTitle from \"../../components/PageTitle\";\r\n\r\nfunction Help() {\r\n    \r\n    return (\r\n        <>\r\n        <PageTitle title=\"Помощь\" />\r\n        <Grid container spacing={4}>\r\n            <Grid item xs={12}>\r\n            <h2>По всем возникающим вопросам, ошибкам и предложениям пишите на почту <a href=\"mailto:k_ilin@igirgi.su\">k_ilin@igirgi.su</a></h2>\r\n            <h1></h1>\r\n            </Grid>\r\n        </Grid>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Help;","import React from 'react';\r\n\r\nimport {Toast} from 'react-bootstrap';\r\n\r\nfunction ValidAdmin({active, setActive}) {\r\n    return (\r\n        <>\r\n            <Toast style={{display: \"block\", minWidth: \"500px\", minHeight: \"100px\", zIndex:\"9999\", position: 'absolute', top: \"20px\", right: \"calc(50vw - 250px)\"}} onClose={setActive} show={active} delay={5000} autohide>\r\n                <Toast.Header style={{fontSize: \"18px\"}}>\r\n                    <strong className=\"mr-auto\" style={{color: \"red\"}}>Предупреждение</strong>\r\n                    <small>сейчас</small>\r\n                </Toast.Header>\r\n                <Toast.Body style={{fontSize: \"16px\"}}>Все поля должны быть заполнены!</Toast.Body>\r\n            </Toast>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default ValidAdmin;","import React, {useState, useEffect} from 'react';\r\n\r\nimport {\r\n    TextField, FormControl, Select, Checkbox,\r\n    Grid, Card, CardContent, OutlinedInput, MenuItem,\r\n    Dialog, DialogContent, DialogTitle, DialogActions, ListItemText\r\n} from \"@material-ui/core\";\r\n\r\nimport { Button, Form, Row, Col } from \"react-bootstrap\";\r\nimport BootstrapSwitchButton from 'bootstrap-switch-button-react';\r\nimport SuccessToast from '../Toasts/SuccessToast';\r\nimport { useHistory } from 'react-router';\r\n\r\nimport \"../../pages/styles.css\";\r\n\r\nimport {styleBlueInput} from \"../../pages/checklist/styles\";\r\nimport ValidAdmin from '../Toasts/ValidAdmin';\r\nimport {IMaskInput} from \"react-imask\";\r\nimport {MenuProps} from \"../../pages/checklist/data\";\r\n\r\nfunction AdminDialog({active, setActive, user, checkPost}) {\r\n    const constant = false;\r\n    const history = useHistory()\r\n    const [user_login, setUser_login] = useState(\"\");\r\n    const [name, setName] = useState(\"\");\r\n    const [surname, setSurname] = useState(\"\");\r\n    const [email, setEmail] = useState(\"\");\r\n    const [tel, setTel] = useState(\"\");\r\n    const [password, setPassword] = useState(\"\");\r\n    const [checkpassword, setCheckpassword] = useState(\"\");\r\n    const [role, setRole] = useState(\"\");\r\n    const [is_active, setIs_active] = useState(true);\r\n    const [changePass, setChangePass] = useState(false);\r\n    const [customers, setCustomers] = useState([]);\r\n    const [showValid, setShowValid] = useState(false);\r\n    const [showSuccessToast, setShowSuccessToast] = useState(false);\r\n\r\n    const [customersData, setCustomersData] = useState([]);\r\n\r\n    const handleToastValid = () => {\r\n        setShowValid(!showValid);\r\n    }\r\n    const handleSuccessToast = () => {\r\n        setShowSuccessToast(!showSuccessToast);\r\n    }\r\n\r\n    const check_validity = () => {\r\n        return user_login === \"\" || name === \"\" || surname === \"\" || email === \"\" || tel === \"\" || password === \"\" || checkpassword === \"\" || role === \"\";\r\n    }\r\n\r\n    function getCustomers() {\r\n        fetch(process.env.REACT_APP_API+'customers?format=json', { headers : { \r\n            'Content-Type': 'application/json',\r\n            'Accept': 'application/json',\r\n            'Authorization': \"Token \" + localStorage.getItem('id_token')\r\n           }\r\n        }) \r\n        .then(response=>response.json())\r\n        .then(data=>{\r\n            setCustomersData(data);\r\n        })\r\n    }\r\n\r\n    const postUser = () => {\r\n        if(!check_validity() && password === checkpassword) {\r\n        fetch(process.env.REACT_APP_API+'users/?format=json',{\r\n            method: 'POST',\r\n            headers:{\r\n                'Accept':'application/json',\r\n                'Content-Type':'application/json',\r\n                'Authorization': \"Token \" + localStorage.getItem('id_token')\r\n            },\r\n            body: JSON.stringify({\r\n                \"username\": user_login,\r\n                \"first_name\": name,\r\n                \"last_name\": surname,\r\n                \"email\": email,\r\n                \"phone_number\": tel,\r\n                \"password\": password,\r\n                \"is_active\": is_active,\r\n                \"is_staff\": false,\r\n                \"is_superuser\": role === \"superuser\" ? true : false,\r\n                \"role\": role,\r\n                \"customers\": customers\r\n            }) \r\n        })\r\n        .then((response) => {\r\n            if(!response.ok) throw new Error(response.status);\r\n            else setActive();\r\n          })\r\n        } else handleToastValid();\r\n    }\r\n\r\n    const changePassword = (id) => {\r\n        if(changePass && password === checkpassword) {\r\n        fetch(process.env.REACT_APP_API+'password/'+ id +'?format=json',{\r\n            method: 'PUT',\r\n            headers:{\r\n                'Accept':'application/json',\r\n                'Content-Type':'application/json',\r\n                'Authorization': \"Token \" + localStorage.getItem('id_token')\r\n            },\r\n            body: JSON.stringify({\r\n                \"password\": password\r\n            }) \r\n        })\r\n        .then((response) => {\r\n            if(!response.ok) throw new Error(response.status);\r\n            else {handleSuccessToast();\r\n                history.go(0);}\r\n          })\r\n    }\r\n    }\r\n\r\n    const changeAccess = (id) => {\r\n        fetch(process.env.REACT_APP_API+'customer_permissions/'+ id +'?format=json',{\r\n            method: 'PUT',\r\n            headers:{\r\n                'Accept':'application/json',\r\n                'Content-Type':'application/json',\r\n                'Authorization': \"Token \" + localStorage.getItem('id_token')\r\n            },\r\n            body: JSON.stringify({\r\n                \"role\": role,\r\n                \"customers\": customers\r\n            }) \r\n        })\r\n        .then((response) => {\r\n            if(!response.ok) throw new Error(response.status);\r\n            else {handleSuccessToast();\r\n                history.go(0);\r\n            }\r\n          })\r\n          console.log(JSON.stringify({\r\n            \"role\": role,\r\n            \"customers\": customers\r\n        }))\r\n    }\r\n\r\n    const changeInformation = (id) => {\r\n        fetch(process.env.REACT_APP_API+'informations/'+ id +'?format=json',{\r\n            method: 'PUT',\r\n            headers:{\r\n                'Accept':'application/json',\r\n                'Content-Type':'application/json',\r\n                'Authorization': \"Token \" + localStorage.getItem('id_token')\r\n            },\r\n            body: JSON.stringify({\r\n                \"id\": id,\r\n                \"username\": user_login,\r\n                \"first_name\": name,\r\n                \"last_name\": surname,\r\n                \"email\": email,\r\n                \"phone_number\": tel,\r\n                \"is_superuser\": role === \"superuser\" ? true : false,\r\n                \"is_active\": is_active\r\n            }) \r\n        })\r\n        .then((response) => {\r\n            if(!response.ok) throw new Error(response.status);\r\n            else {handleSuccessToast();\r\n                history.go(0)}\r\n          })\r\n    }\r\n\r\n    useEffect(() => {\r\n        getCustomers();\r\n    }, [constant])\r\n\r\n    useEffect(() => {\r\n        if (!checkPost) {\r\n            setUser_login(user.username);\r\n            setName(user.first_name);\r\n            setSurname(user.last_name);\r\n            setEmail(user.email);\r\n            setTel(user.phone_number);\r\n            setIs_active(user.is_active);\r\n            setRole(user.role);\r\n            user.hasOwnProperty('customers') ? setCustomers(user.customers.map(item => item.id)) : setCustomers([]);\r\n        } else setIs_active(true)\r\n    }, [user])\r\n\r\n    useEffect(() => {\r\n        console.log(is_active)\r\n    })\r\n\r\n    return (\r\n        <>\r\n            <ValidAdmin active={showValid} setActive={handleToastValid}/>\r\n            <SuccessToast active={showSuccessToast} setActive={handleSuccessToast}/>\r\n            <Dialog open={active} onClose={setActive} maxWidth=\"lg\" fullWidth>\r\n                <DialogTitle>{checkPost ? \"Добавление пользователя\" : \"Редактирование пользователя\"}</DialogTitle>\r\n                <Form name=\"addservice\">\r\n                    <DialogContent>\r\n                    <Grid container spacing={3}>\r\n                    <Grid item xs={6}>\r\n                        <Card\r\n                                sx={{ minWidth: 275 }}\r\n                                elevation={4}\r\n                                style={{\r\n                                borderRadius: \"15px\",\r\n                                backgroundColor: \"#3F6694\",\r\n                                color: \"#fff\",\r\n                                height:\"100%\"\r\n                                }}\r\n                            >\r\n                            <CardContent style={{ paddingBottom: \"0\", color:\"white\"}}>\r\n                                <Row style={{paddingBottom:\"1rem\"}}>\r\n                                    <Col style={{fontSize:\"20px\", fontWeight:\"700\"}}>Основная информация</Col>\r\n                                </Row>\r\n                                <Form.Group as={Row}>\r\n                                    <Form.Label column sm=\"6\" style={{fontSize: \"18px\"}}>\r\n                                    Логин пользователя\r\n                                    </Form.Label>\r\n                                    <Col sm=\"6\">\r\n                                    <Form.Control\r\n                                        id=\"login_user\"\r\n                                        name=\"login_user\"\r\n                                        value={user_login}\r\n                                        style={styleBlueInput}\r\n                                        onChange={(e) => setUser_login(e.target.value.toLowerCase())}\r\n                                    />\r\n                                    </Col>\r\n                                </Form.Group>\r\n                                <Form.Group as={Row}>\r\n                                    <Form.Label column sm=\"6\" style={{fontSize: \"18px\"}}>\r\n                                    Имя\r\n                                    </Form.Label>\r\n                                    <Col sm=\"6\">\r\n                                    <Form.Control\r\n                                        id=\"name\"\r\n                                        name=\"name\"\r\n                                        value={name}\r\n                                        style={styleBlueInput}\r\n                                        onChange={(e) => setName(e.target.value)}\r\n                                    />\r\n                                    </Col>\r\n                                </Form.Group>\r\n                                <Form.Group as={Row}>\r\n                                    <Form.Label column sm=\"6\" style={{fontSize: \"18px\"}}>\r\n                                    Фамилия\r\n                                    </Form.Label>\r\n                                    <Col sm=\"6\">\r\n                                    <Form.Control\r\n                                        id=\"surname\"\r\n                                        name=\"surname\"\r\n                                        value={surname}\r\n                                        style={styleBlueInput}\r\n                                        onChange={(e) => setSurname(e.target.value)}\r\n                                    />\r\n                                    </Col>\r\n                                </Form.Group>\r\n                                <Form.Group as={Row}>\r\n                                    <Form.Label column sm=\"6\" style={{fontSize: \"18px\"}}>\r\n                                    E-mail\r\n                                    </Form.Label>\r\n                                    <Col sm=\"6\">\r\n                                    <Form.Control\r\n                                        type=\"email\"\r\n                                        id=\"email\"\r\n                                        name=\"email\"\r\n                                        value={email}\r\n                                        style={styleBlueInput}\r\n                                        onChange={(e) => setEmail(e.target.value)}\r\n                                    />\r\n                                    </Col>\r\n                                </Form.Group>\r\n                                <Form.Group as={Row}>\r\n                                    <Form.Label column sm=\"6\" style={{fontSize: \"18px\"}}>\r\n                                    Телефон\r\n                                    </Form.Label>\r\n                                    <Col sm=\"6\">\r\n                                    <Form.Control\r\n                                        as={IMaskInput}\r\n                                        type=\"tel\"\r\n                                        id=\"tel\"\r\n                                        name=\"tel\"\r\n                                        mask={\"+7(000)000-00-00\"}\r\n                                        value={tel}\r\n                                        style={styleBlueInput}\r\n                                        onChange={(e) => setTel(e.target.value)}\r\n                                    />\r\n                                    </Col>\r\n                                </Form.Group>\r\n                                <Form.Group as={Row}>\r\n                                    <Form.Label column sm=\"6\" style={{fontSize: \"18px\"}}>\r\n                                    Заблокировать\r\n                                    </Form.Label>\r\n                                    <Col sm=\"6\" style={{textAlign:\"center\"}}>\r\n                                    <BootstrapSwitchButton \r\n                                    checked={is_active} \r\n                                    width={200}\r\n                                    onChange={(checked) => setIs_active(checked)} \r\n                                    onlabel=\"Разблокирован\" \r\n                                    offlabel=\"Заблокирован\" \r\n                                    onstyle=\"success\" \r\n                                    offstyle=\"danger\" />  \r\n                                    </Col>\r\n                                </Form.Group>\r\n                                <Form.Group as={Row}>\r\n                                    <Col sm=\"8\"></Col>\r\n                                    <Col sm=\"4\"><Button variant=\"yellow\" style={{height:\"100%\", width:\"100%\", display:(checkPost ? 'none' : 'block')}} onClick={() => changeInformation(user.id)}>Сохранить</Button></Col>\r\n                                </Form.Group>\r\n                            </CardContent>\r\n                        </Card>\r\n                        </Grid>\r\n                        <Grid item xs={6}>\r\n                        <Card\r\n                                sx={{ minWidth: 275 }}\r\n                                elevation={4}\r\n                                style={{\r\n                                borderRadius: \"15px\",\r\n                                backgroundColor: \"#3F6694\",\r\n                                color: \"#fff\",\r\n                                marginBottom:\"1.5rem\"\r\n                                }}\r\n                            >\r\n                            <CardContent style={{ paddingBottom: \"0\", color:\"white\"}}>\r\n                                <Row style={{paddingBottom:\"1rem\"}}>\r\n                                    <Col style={{fontSize:\"20px\", fontWeight:\"700\"}}>Поменять пароль</Col>\r\n                                </Row>\r\n                                <Form.Group as={Row}>\r\n                                    <Form.Label column sm=\"6\" style={{fontSize: \"18px\"}}>\r\n                                    Введите новый пароль\r\n                                    </Form.Label>\r\n                                    <Col sm=\"6\">\r\n                                    <Form.Control\r\n                                        type=\"password\"\r\n                                        id=\"password\"\r\n                                        name=\"password\"\r\n                                        value={password}\r\n                                        style={styleBlueInput}\r\n                                        onChange={(e) => {setPassword(e.target.value); setChangePass(true);}}\r\n                                    />\r\n                                    </Col>\r\n                                </Form.Group>\r\n                                <Form.Group as={Row}>\r\n                                    <Form.Label column sm=\"6\" style={{fontSize: \"18px\"}}>\r\n                                    Введите пароль ещё раз\r\n                                    </Form.Label>\r\n                                    <Col sm=\"6\">\r\n                                    <Form.Control\r\n                                        type=\"password\"\r\n                                        id=\"checkpassword\"\r\n                                        name=\"checkpassword\"\r\n                                        value={checkpassword}\r\n                                        style={styleBlueInput}\r\n                                        onChange={(e) => setCheckpassword(e.target.value)}\r\n                                    />\r\n                                    <Form.Text style={{fontSize:\"14px\", color:\"white\", display: (password === checkpassword ? 'none' : 'block')}}>\r\n                                        Пароли не совпадают!\r\n                                    </Form.Text>\r\n                                    </Col>\r\n                                </Form.Group>\r\n                                <Form.Group as={Row}>\r\n                                    <Col sm=\"8\"></Col>\r\n                                    <Col sm=\"4\"><Button variant=\"yellow\" style={{height:\"100%\", width:\"100%\", display:(checkPost ? 'none' : 'block')}} onClick={() => changePassword(user.id)}>Сохранить</Button></Col>\r\n                                </Form.Group>\r\n                            </CardContent>\r\n                        </Card>\r\n                        <Card\r\n                                sx={{ minWidth: 275 }}\r\n                                elevation={4}\r\n                                style={{\r\n                                borderRadius: \"15px\",\r\n                                backgroundColor: \"#3F6694\",\r\n                                color: \"#fff\"\r\n                                }}\r\n                            >\r\n                            <CardContent style={{ paddingBottom: \"0\", color:\"white\"}}>\r\n                                <Row style={{paddingBottom:\"1rem\"}}>\r\n                                    <Col style={{fontSize:\"20px\", fontWeight:\"700\"}}>Информация по доступу к ресурсу</Col>\r\n                                </Row>\r\n                                <Form.Group as={Row}>\r\n                                    <Form.Label column sm=\"6\" style={{fontSize: \"18px\"}}>\r\n                                    Роль пользователя\r\n                                    </Form.Label>\r\n                                    <Col sm=\"6\">\r\n                                    <Form.Control\r\n                                        as=\"select\"\r\n                                        id=\"role\"\r\n                                        name=\"role\"\r\n                                        value={role}\r\n                                        style={styleBlueInput}\r\n                                        onChange={(e) => setRole(e.target.value)}\r\n                                    >\r\n                                        <option key=\"0\" hidden></option>\r\n                                        <option key=\"1\" value=\"user\">Редактор ОГ</option>\r\n                                        <option key=\"2\" value=\"viewer\">Просмотр</option>\r\n                                        <option key=\"3\" value=\"superviewer\">Просмотр всех ОГ</option>\r\n                                        <option key=\"4\" value=\"superuser\">admins</option>\r\n                                    </Form.Control>\r\n                                    </Col>\r\n                                </Form.Group>\r\n                                <Form.Group as={Row}>\r\n                                    <Form.Label column sm=\"6\" style={{fontSize: \"18px\"}}>\r\n                                    Доступные ОГ\r\n                                    </Form.Label>\r\n                                    <Col sm=\"6\">\r\n                                    {/*<Form.Control\r\n                                        as=\"select\"\r\n                                        multiple\r\n                                        id=\"customers\"\r\n                                        name=\"customers\"\r\n                                        value={customers}\r\n                                        style={styleBlueInput}\r\n                                        onChange={e => setCustomers([].slice.call(e.target.selectedOptions).map(item => item.value))}\r\n                                    >\r\n                                        {customersData.map(item => {return <option key={item.name} value={item.id}>{item.name}</option>})}\r\n                                    </Form.Control>*/}\r\n                                    <FormControl\r\n                                        id=\"customers\"\r\n                                        name=\"customers\"\r\n                                    >\r\n                                        <Select\r\n                                        disabled={role === \"superuser\" || role === \"superviewer\"}\r\n                                        id=\"customers_select\"\r\n                                        name=\"customers_select\"\r\n                                        multiple\r\n                                        value={customers}\r\n                                        renderValue={selected => selected.map(select => customersData.find(item => item.id === select).name).join(', ')}\r\n                                        onChange={(e) => setCustomers(e.target.value)}\r\n                                        input={\r\n                                            <OutlinedInput\r\n                                            style={{ width: \"268px\", height: \"38px\", color:\"white\", fontSize:\"20px\", fontWeight:\"700\" }}\r\n                                            />\r\n                                        }\r\n                                        MenuProps={MenuProps}\r\n                                        >\r\n                                        {customersData.map(item => (\r\n                                            <MenuItem key={item.id} value={item.id}>\r\n                                            <Checkbox\r\n                                                checked={\r\n                                                customers.toString().indexOf(item.id) > -1\r\n                                                }\r\n                                            />\r\n                                            <ListItemText primary={item.name} />\r\n                                            </MenuItem>\r\n                                        ))}\r\n                                        </Select>\r\n                                    </FormControl>\r\n                                    </Col>\r\n                                </Form.Group>\r\n                                <Form.Group as={Row}>\r\n                                    <Col sm=\"8\"></Col>\r\n                                    <Col sm=\"4\"><Button variant=\"yellow\" style={{height:\"100%\", width:\"100%\", display:(checkPost ? 'none' : 'block')}} onClick={() => changeAccess(user.id)}>Сохранить</Button></Col>\r\n                                </Form.Group>\r\n                            </CardContent>\r\n                        </Card>\r\n                    </Grid>\r\n                    </Grid>\r\n                    </DialogContent>\r\n                <DialogActions>\r\n                    <Button onClick={() => {postUser(); setActive(); history.go(0);}} style={{outline: \"none\", visibility:(checkPost ? 'visible' : 'hidden')}}>Сохранить</Button>\r\n                </DialogActions>\r\n                </Form>\r\n            </Dialog>   \r\n        </>\r\n    )\r\n}\r\n\r\nexport default AdminDialog;","import React, {useEffect, useState} from \"react\";\r\nimport {\r\n    Grid,\r\n    Button,\r\n    Typography,\r\n    CircularProgress, \r\n    Chip\r\n} from \"@material-ui/core\";\r\n\r\nimport MUIDataTable from \"mui-datatables\";\r\n\r\nimport PageTitle from \"../../components/PageTitle\";\r\nimport Blocked from \"../../components/Blocked/Blocked\";\r\nimport AdminDialog from \"../../components/Dialogs/AdminDialog\";\r\n\r\nconst Admin = () => {\r\n    const [usersData, setUsersData] = useState([]);\r\n    const [user, setUser] = useState({});\r\n    const [showModalAdmin, setShowModalAdmin] = useState(false);\r\n    const [checkPost, setCheckPost] = useState(false);\r\n    const role = localStorage.getItem('role');\r\n    const constant = false;\r\n\r\n    const getUsers = () => {\r\n        fetch(process.env.REACT_APP_API+'users/?format=json', { headers : { \r\n            'Content-Type': 'application/json',\r\n            'Accept': 'application/json',\r\n            'Authorization': \"Token \" + localStorage.getItem('id_token')\r\n           }\r\n        }) \r\n        .then(response=>response.json())\r\n        .then(data=>{\r\n            setUsersData(data);\r\n        })\r\n    }\r\n\r\n    const deleteUser = (user_id) => {\r\n        fetch(process.env.REACT_APP_API+'informations/'+ user_id +'?format=json', { method: 'DELETE', headers: {'Authorization': \"Token \" + localStorage.getItem('id_token')} })\r\n    }\r\n\r\n    const handleModalAdmin = () => {\r\n        setShowModalAdmin(!showModalAdmin);\r\n    }\r\n\r\n    useEffect(() => {\r\n        getUsers();\r\n    }, [constant])\r\n\r\n    if (role === \"superuser\")\r\n        return (\r\n            <>\r\n                <AdminDialog active={showModalAdmin} setActive={handleModalAdmin} user={user} checkPost={checkPost}/>\r\n                <PageTitle title=\"Редактирование пользователей\" button={<Button\r\n                variant=\"contained\"\r\n                size=\"medium\"\r\n                color=\"secondary\"\r\n                style={{outline: \"none\", backgroundColor:\"#34547A\"}}\r\n                onClick={() => {setCheckPost(true); setUser({}); handleModalAdmin();}}\r\n                >\r\n                Добавить нового пользователя\r\n            </Button>} />\r\n            <Grid item xs={12}>\r\n                <MUIDataTable\r\n                    title={<Typography variant=\"h6\">\r\n                    Список пользователей\r\n                    {usersData.length === 0 && <CircularProgress size={24} style={{ marginLeft: 15, position: 'relative', top: 4 }} />}\r\n                </Typography>}\r\n                    data={usersData.map(item => [item.username, item.first_name, item.last_name, item.email, item.phone_number, <Chip style={{backgroundColor: (item.is_active ? \"#22bd53\" : \"#f5364c\"), color: \"#fff\"}} label={item.is_active ? \"Разблокирован\" : \"Заблокирован\"}/>, item.role])}\r\n                    columns={[\"Логин\", \"Имя\", \"Фамилия\", \"E-mail\", \"Номер телефона\", \"Статус\", \"Роль\"]}\r\n                    options={{\r\n                    filterType: \"checkbox\",\r\n                    sort: false,\r\n                    print: false,\r\n                    download: false,\r\n                    textLabels: {\r\n                        body: {\r\n                          noMatch: \"Записей не найдено.\",\r\n                          toolTip: \"Сортировать\"\r\n                        },\r\n                        toolbar: {\r\n                          search: \"Поиск\",\r\n                          viewColumns: \"Показать столбцы\",\r\n                            filterTable: \"Фильтр таблицы\"\r\n                        },\r\n                        viewColumns: {\r\n                            title: \"Показать столбцы\"\r\n                          },\r\n                        selectedRows: {\r\n                          text: \"строка выбрана\"\r\n                        },\r\n                      },\r\n                    selectableRows: 'single',\r\n                    onRowsDelete: (rowMeta) => {\r\n                        if (window.confirm('Вы точно хотите удалить пользователя ' + usersData[rowMeta.data[0].dataIndex].username +'?'))\r\n                            deleteUser(usersData[rowMeta.data[0].dataIndex].id);\r\n                        else\r\n                            getUsers();\r\n                      },\r\n                    setRowProps: value => ({ style: { cursor: 'pointer' } }),\r\n                    onRowClick: (rowData, rowMeta) => {\r\n                        setCheckPost(false);\r\n                        setUser(usersData[rowMeta.dataIndex]);\r\n                        handleModalAdmin();\r\n                    }\r\n                    }}\r\n                />\r\n            </Grid>\r\n            </>\r\n        )\r\n    else return (<Blocked/>)\r\n}\r\n\r\nexport default Admin;\r\n","import React, {useState} from 'react';\r\n\r\nimport {\r\n    Button,\r\n    TextField,\r\n    Dialog, DialogContent, DialogTitle, DialogActions\r\n} from \"@material-ui/core\";\r\n\r\nimport {Form} from 'react-bootstrap';\r\n\r\nfunction AddStrataDialog({active, setActive, field_id}) {\r\n    const [selectedFile, setSelectedFile] = useState();\r\n    const [fileName, setFileName] = useState(\"\");\r\n    const [strata, setStrata] = useState(\"\");\r\n\r\n    function onSubmitStrata(e){\r\n        const formData = new FormData();\r\n        formData.append('name', strata);\r\n\t\tselectedFile && formData.append('strata_file', selectedFile);\r\n        fetch(process.env.REACT_APP_API+'strata/' + field_id + '?format=json',{\r\n            method: 'POST',\r\n            headers:{\r\n                'Accept':'application/json, text/html',\r\n                'Authorization': \"Token \" + localStorage.getItem('id_token')\r\n            },\r\n            body: formData \r\n        })\r\n    };\r\n\r\n    const handleFile = (event) => {\r\n        setSelectedFile(event.target.files[0]);\r\n        setFileName(event.target.files[0].name);\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <Dialog open={active} onClose={setActive} maxWidth=\"xs\" fullWidth>\r\n                <DialogTitle>Добавить пласт</DialogTitle>\r\n                <Form name=\"addstrata\" onSubmit={onSubmitStrata}>\r\n                    <DialogContent>\r\n                        <Form.Group>\r\n                            <Form.Control\r\n                            type=\"text\"\r\n                            id=\"add_strata\"\r\n                            onChange={e => setStrata(e.target.value)} \r\n                            placeholder=\"Введите название пласта\"\r\n                            />\r\n                        </Form.Group>\r\n                        <Button\r\n                            variant=\"contained\"\r\n                            component=\"label\"\r\n                            style={{width:\"100%\", fontSize:\"20px\"}}\r\n                            color={fileName ? \"success\" : \"primary\"}\r\n                            >\r\n                            {fileName ? fileName : \"Загрузить файл\"}\r\n                            <input\r\n                                id=\"add-file\"\r\n                                type=\"file\"\r\n                                hidden\r\n                                onChange={handleFile}\r\n                            />\r\n                        </Button>\r\n                    </DialogContent>\r\n                <DialogActions>\r\n                    <Button type=\"submit\" onClick={setActive} style={{outline: \"none\"}}>Сохранить</Button>\r\n                </DialogActions>\r\n                </Form>\r\n            </Dialog>   \r\n        </>\r\n    )\r\n}\r\n\r\nexport default AddStrataDialog;","import React, {useState, useEffect} from 'react';\r\n\r\nimport {\r\n    Button,\r\n    Dialog, DialogContent, DialogTitle, DialogActions\r\n} from \"@material-ui/core\";\r\n\r\nimport {Form} from 'react-bootstrap';\r\n\r\nfunction EditWellDialog({active, setActive, strata_id, strata_name, strata_file}) {\r\n    const [strata, setStrata] = useState(\"\");\r\n    const [selectedFile, setSelectedFile] = useState();\r\n    const [fileName, setFileName] = useState(\"\");\r\n\r\n    function onSubmitStrata(){\r\n        const formData = new FormData();\r\n        formData.append('name', strata);\r\n\t\tformData.append('strata_file', selectedFile);\r\n        fetch(process.env.REACT_APP_API+'strata/id/'+ strata_id + '?format=json',{\r\n            method: 'PUT',\r\n            headers:{\r\n                'Accept':'application/json, text/html',\r\n                'Authorization': \"Token \" + localStorage.getItem('id_token')\r\n            },\r\n            body: formData \r\n        })\r\n    };\r\n\r\n    const handleFile = (event) => {\r\n        setSelectedFile(event.target.files[0]);\r\n        setFileName(event.target.files[0].name);\r\n    }\r\n\r\n    useEffect(() => {\r\n        setStrata(strata_name);\r\n    }, [strata_name])\r\n\r\n    useEffect(() => {\r\n        strata_file !== null && setFileName(strata_file.slice(strata_file.lastIndexOf('/') + 1));\r\n    }, [strata_file])\r\n\r\n    return (\r\n        <>\r\n            <Dialog open={active} onClose={setActive} maxWidth=\"xs\" fullWidth>\r\n                <DialogTitle>Изменить параметры пласта</DialogTitle>\r\n                <Form name=\"editstrata\" onSubmit={e => onSubmitStrata()}>\r\n                    <DialogContent>\r\n                        <Form.Group>\r\n                            <Form.Label htmlFor=\"edit_strata\">Название пласта</Form.Label>\r\n                            <Form.Control\r\n                            type=\"text\"\r\n                            id=\"edit_strata\"\r\n                            name=\"edit_strata\"\r\n                            onChange={e => setStrata(e.target.value)}\r\n                            value={strata}\r\n                            />\r\n                        </Form.Group>\r\n                        <Button\r\n                            variant=\"contained\"\r\n                            component=\"label\"\r\n                            style={{width:\"100%\", fontSize:\"20px\"}}\r\n                            color={fileName ? \"success\" : \"primary\"}\r\n                            >\r\n                            {fileName ? fileName : \"Загрузить файл\"}\r\n                            <input\r\n                                id=\"add-file\"\r\n                                type=\"file\"\r\n                                hidden\r\n                                onChange={handleFile}\r\n                            />\r\n                        </Button>\r\n                    </DialogContent>\r\n                <DialogActions>\r\n                    <Button type=\"submit\" onClick={setActive} style={{outline: \"none\"}}>Сохранить</Button>\r\n                </DialogActions>\r\n                </Form>\r\n            </Dialog>   \r\n        </>\r\n    )\r\n}\r\n\r\nexport default EditWellDialog;","import React, {useEffect, useState} from 'react';\r\n\r\nimport {\r\n    Grid,\r\n    Button,\r\n    CircularProgress,\r\n    Typography,\r\n    Divider,\r\n    Card,\r\n    CardContent,\r\n    TextField,\r\n    FormControl,\r\n    InputLabel, Select, MenuItem\r\n  } from \"@material-ui/core\";\r\nimport MUIDataTable from \"mui-datatables\";\r\n\r\nimport {Form, Row, Col} from \"react-bootstrap\";\r\n\r\nimport { useHistory } from \"react-router\";\r\n\r\nimport CustomToolbarSelect from '../../components/Toolbar/CustomToolbarSelect';\r\nimport AddStrataDialog from '../../components/Dialogs/AddStrataDialog';\r\nimport EditStrataDialog from '../../components/Dialogs/EditStrataDialog';\r\n\r\nimport PageTitle from \"../../components/PageTitle\";\r\n\r\nfunction Strata(props) {\r\n    const history = useHistory();\r\n    const role = localStorage.getItem('role');\r\n    const constant = false;\r\n\r\n    const [field, setField] = useState({});\r\n    const [method, setMethod] = useState(\"\");\r\n    const [collectors, setCollectors] = useState(null);\r\n    const [saturation, setSaturation] = useState(null);\r\n    const [kp, setKp] = useState(null);\r\n    const [kng, setKng] = useState(null);\r\n    const [lithotype, setLithotype] = useState(null);\r\n\r\n    const [strata, setStrata] = useState([]);\r\n    const [strataObj, setStrataObj] = useState({\r\n        id: null,\r\n        name: \"\",\r\n        strata_file: \"\"\r\n    });\r\n    const [selectedRows, setSelectedRows] = useState([]);\r\n\r\n    const [allMethodsData, setAllMethodsData] = useState([]);\r\n    const [petroData, setPetroData] = useState([]);\r\n\r\n    const [load, setLoad] = useState(false);\r\n\r\n    const [showModalStrata, setShowModalStrata] = useState(false);\r\n    const [showModalEditStrata, setShowModalEditStrata] = useState(false);\r\n\r\n    const columns = [\r\n        {\r\n            name: \"Название пласта\"\r\n        },\r\n        {\r\n            name: \"Прикрепленный файл\",\r\n            options: {\r\n                customBodyRender: (value, tableMeta, updateValue) => {\r\n                    return (\r\n                        strata[tableMeta.rowIndex].strata_file ? <Button size=\"medium\" onClick={() => window.open(strata[tableMeta.rowIndex].strata_file, '_blank')} style={{outline: \"none\", width: \"25%\", backgroundColor:\"#34547A\", color:\"#fff\"}}>Открыть файл</Button>\r\n                        : <Button size=\"medium\" onClick={() => {setStrataObj(strata[tableMeta.rowIndex]); handleModalEditStrata();}} style={{outline: \"none\", backgroundColor:\"#F6D106\", color:\"#000\", width: \"25%\"}}>Добавить файл</Button>\r\n                        );\r\n                  }\r\n            }\r\n        }\r\n    ]\r\n\r\n    const putPetroValues = (petro_id) => {\r\n        fetch(process.env.REACT_APP_API+'petrophysics/id/'+ petro_id +'?format=json',{\r\n            method: 'PUT',\r\n            headers:{\r\n                'Accept':'application/json',\r\n                'Content-Type':'application/json',\r\n                'Authorization': \"Token \" + localStorage.getItem('id_token')\r\n            },\r\n            body: JSON.stringify({\r\n                \"separation_of_reservoirs\": collectors === \"\" ? null : collectors,\r\n                \"determination_nature_saturation\": saturation === \"\" ? null : saturation,\r\n                \"determination_Kp\": kp === \"\" ? null : kp,\r\n                \"determination_Kng\": kng === \"\" ? null : kng,\r\n                \"determination_lithotype\": lithotype === \"\" ? null : lithotype\r\n            }) \r\n        })\r\n    }\r\n\r\n    const getFieldInformation = (props) => {\r\n        setLoad(true);\r\n        fetch(process.env.REACT_APP_API+'fields/id/'+ props.match.params.id +'?format=json', { headers : { \r\n            'Content-Type': 'application/json',\r\n            'Accept': 'application/json',\r\n            'Authorization': \"Token \" + localStorage.getItem('id_token')\r\n           }\r\n        }) \r\n        .then(response=>response.json())\r\n        .then(data=>{\r\n            setField(data);\r\n        })\r\n        setLoad(false);\r\n    }\r\n\r\n    const getStrataInformation = (props) => {\r\n        fetch(process.env.REACT_APP_API+'strata/'+ props.match.params.id +'?format=json', { headers : { \r\n            'Content-Type': 'application/json',\r\n            'Accept': 'application/json',\r\n            'Authorization': \"Token \" + localStorage.getItem('id_token')\r\n           }\r\n        }) \r\n        .then(response=>response.json())\r\n        .then(data=>{\r\n            setStrata(data);\r\n        })\r\n    }\r\n\r\n    const getPetroInformation = (props, e) => {\r\n        fetch(process.env.REACT_APP_API+'petrophysics/'+ props.match.params.id + '/' + allMethodsData.find(item => item.name === e.target.value).id +'?format=json', { headers : { \r\n            'Content-Type': 'application/json',\r\n            'Accept': 'application/json',\r\n            'Authorization': \"Token \" + localStorage.getItem('id_token')\r\n           }\r\n        }) \r\n        .then(response=>response.json())\r\n        .then(data=>{\r\n            setPetroData(data);\r\n            if (data.length !== 0) {\r\n                setCollectors(data[0].separation_of_reservoirs)\r\n                setSaturation(data[0].determination_nature_saturation)\r\n                setKp(data[0].determination_Kp)\r\n                setKng(data[0].determination_Kng)\r\n                setLithotype(data[0].determination_lithotype)\r\n            }  \r\n        })\r\n    }\r\n\r\n    const changeName = () => {\r\n        setStrataObj(strata[selectedRows[0]]);\r\n        handleModalEditStrata();\r\n    }\r\n\r\n    const deleteStrata = (strata_id) => {\r\n        fetch(process.env.REACT_APP_API+'strata/id/'+ strata_id +'?format=json', { method: 'DELETE', headers: {'Authorization': \"Token \" + localStorage.getItem('id_token')} })\r\n    }\r\n\r\n    const rowsDelete = () => {\r\n        if (window.confirm('Вы точно хотите удалить пласт '+ strata[selectedRows[0]].name +'?')){\r\n          deleteStrata(strata[selectedRows[0]].id);\r\n          strata.splice(selectedRows[0], 1);\r\n          setSelectedRows([]);\r\n        }\r\n    }\r\n\r\n    const getAllMethods = () => {\r\n        fetch(process.env.REACT_APP_API+'methods/?format=json', { headers : { \r\n            'Content-Type': 'application/json',\r\n            'Accept': 'application/json',\r\n            'Authorization': \"Token \" + localStorage.getItem('id_token')\r\n           }\r\n        }) \r\n        .then(response=>response.json())\r\n        .then(data=>{\r\n            setAllMethodsData(data);\r\n        })\r\n    }\r\n\r\n    const updateMethod = (e) => {\r\n        setMethod(e.target.value)\r\n        getPetroInformation(props, e)\r\n    }\r\n\r\n    useEffect(() => {\r\n        getFieldInformation(props);\r\n        getStrataInformation(props);\r\n        getAllMethods();\r\n    }, [constant])\r\n\r\n    const handleModalStrata = () => {\r\n        setShowModalStrata(!showModalStrata);\r\n    }\r\n    const handleModalEditStrata = () => {\r\n        setShowModalEditStrata(!showModalEditStrata);\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <AddStrataDialog active={showModalStrata} setActive={handleModalStrata} field_id={props.match.params.id}/>\r\n            <EditStrataDialog active={showModalEditStrata} setActive={handleModalEditStrata} strata_id={strataObj.id} strata_name={strataObj.name} strata_file={strataObj.strata_file}/>\r\n            <Grid item xs={12}>\r\n                <PageTitle title=\"Настройка петрофизической задачи\"/>\r\n                <Form.Group as={Row} style={{paddingBottom:\"1rem\"}}>\r\n                        <Col xs=\"3\">\r\n                            <FormControl fullWidth variant=\"standard\">\r\n                                <InputLabel id=\"method\">Метод</InputLabel>\r\n                                    <Select labelId=\"method\" name=\"method\" label=\"Метод\" size=\"small\" value={method} onChange={e => updateMethod(e)}>\r\n                                        <MenuItem hidden disabled></MenuItem>\r\n                                        {allMethodsData.map(item => <MenuItem key={item.name} value={item.name} style={{fontSize:\"20px\"}}>{item.name}</MenuItem>)}\r\n                                    </Select>\r\n                            </FormControl>\r\n                        </Col>\r\n                        <Col xs=\"9\"></Col>\r\n                </Form.Group>\r\n                <Card sx={{ minWidth: 275 }}>\r\n                    <CardContent>\r\n                    <Form.Group as={Row} xs=\"10\">\r\n                        <Col xs=\"2\">\r\n                        <TextField type=\"number\" InputLabelProps={{ shrink: true }} fullWidth id=\"collectors\" label=\"Выделение коллекторов\" variant=\"standard\" value={collectors === null ? \"\" : collectors} onChange={e => setCollectors(e.target.value)}/>\r\n                        </Col>\r\n                        <Col xs=\"2\">\r\n                        <TextField type=\"number\" InputLabelProps={{ shrink: true }} fullWidth id=\"saturation\" label=\"Определение характера насыщения\" variant=\"standard\" value={saturation === null ? \"\" : saturation} onChange={e => setSaturation(e.target.value)}/>\r\n                        </Col>\r\n                        <Col xs=\"2\">\r\n                        <TextField type=\"number\" InputLabelProps={{ shrink: true }} fullWidth id=\"kp\" label=\"Определение Кп\" variant=\"standard\" value={kp === null ? \"\" : kp} onChange={e => setKp(e.target.value)}/>\r\n                        </Col>\r\n                        <Col xs=\"2\">\r\n                        <TextField type=\"number\" InputLabelProps={{ shrink: true }} fullWidth id=\"kng\" label=\"Определение Кнг\" variant=\"standard\" value={kng === null ? \"\" : kng} onChange={e => setKng(e.target.value)}/>\r\n                        </Col>\r\n                        <Col xs=\"2\">\r\n                        <TextField type=\"number\" InputLabelProps={{ shrink: true }} fullWidth id=\"lithotype\" label=\"Определение литотипа\" variant=\"standard\" value={lithotype === null ? \"\" : lithotype} onChange={e => setLithotype(e.target.value)}/>\r\n                        </Col>\r\n                        <Col xs=\"2\" style={{textAlign:\"center\"}}>\r\n                            <Button onClick={() => petroData.length !== 0 && putPetroValues(petroData[0].id)} style={{outline: \"none\", display: \"inline-block\", marginTop: \"0.75rem\", height:\"100%\", width:\"85%\", backgroundColor:\"#34547A\", color:\"#fff\", visibility: (role === \"user\" || role === \"superuser\" ? 'visible' : 'hidden')}}>Сохранить</Button>\r\n                        </Col>\r\n                    </Form.Group>\r\n                    </CardContent>\r\n                </Card>\r\n                <Divider/>\r\n            </Grid>\r\n            <PageTitle title={field.name !== undefined ? \"Пласты месторождения \" + field.name : \"Пласты месторождения \"} button={<Button\r\n            variant=\"contained\"\r\n            size=\"medium\"\r\n            color=\"secondary\"\r\n            style={{outline: \"none\", backgroundColor:\"#34547A\", visibility: (role === \"user\" || role === \"superuser\" ? 'visible' : 'hidden')}}\r\n            onClick={handleModalStrata}\r\n            >\r\n                Добавить пласт\r\n            </Button>} />\r\n            <Grid container spacing={4}>\r\n                <Grid item xs={12}>\r\n                    <MUIDataTable\r\n                        title={<Typography variant=\"h6\">\r\n                        Список пластов в базе\r\n                        {load && <CircularProgress size={24} style={{ marginLeft: 15, position: 'relative', top: 4 }} />}\r\n                    </Typography>}\r\n                        data={strata.map(item => [item.name])}\r\n                        columns={columns}\r\n                        options={{\r\n                        print: false,\r\n                        filter: false,\r\n                        download: false,\r\n                        rowsPerPage: 100,\r\n                        rowsPerPageOptions: [100,500,1000],\r\n                        viewColumns: \"false\",\r\n                        rowsSelected: selectedRows,\r\n                        textLabels: {\r\n                            body: {\r\n                              noMatch: \"Записей не найдено.\",\r\n                              toolTip: \"Сортировать\"\r\n                            },\r\n                            filter: {\r\n                              all: \"Все\",\r\n                              title: \"Фильтры\",\r\n                              reset: \"СБРОСИТЬ\",\r\n                            },\r\n                            toolbar: {\r\n                              search: \"Поиск\",\r\n                              viewColumns: \"Показать столбцы\",\r\n                                filterTable: \"Фильтр таблицы\"\r\n                            },\r\n                            viewColumns: {\r\n                                title: \"Показать столбцы\"\r\n                              },\r\n                            selectedRows: {\r\n                              text: \"строка выбрана\"\r\n                            },\r\n                            pagination: {\r\n                                next: \"Следующая страница\",\r\n                                previous: \"Предыдущая страница\",\r\n                                rowsPerPage: \"Строк на странице:\",\r\n                                displayRows: \"из\",\r\n                              },\r\n                          },\r\n                        onRowSelectionChange: (rowsSelectedData, allRows, rowsSelected) => {\r\n                            setSelectedRows(rowsSelected);\r\n                        },\r\n                        customToolbarSelect: (selectedRows, displayData, setSelectedRows) => (\r\n                            <CustomToolbarSelect selectedRows={selectedRows} displayData={displayData} setSelectedRows={setSelectedRows} onChangeName={changeName} onRowsDelete={rowsDelete}/>\r\n                        ),\r\n                        selectableRows: (role === \"user\" || role === \"superuser\" ? 'single' : 'none'),\r\n                        }}\r\n                    />\r\n                </Grid>\r\n                <Grid item xs={12}>\r\n                <Button color=\"secondary\" variant=\"contained\" onClick={() => {history.push({pathname: \"/app/customers\"})}} style={{outline: \"none\", backgroundColor:\"#34547A\"}}>Вернуться назад</Button>\r\n                </Grid>\r\n            </Grid>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Strata\r\n","import React from \"react\";\r\nimport { withStyles } from \"@material-ui/styles\";\r\nimport {\r\n    IconButton,\r\n    Tooltip\r\n  } from \"@material-ui/core\";\r\nimport {\r\n    Delete as DeleteIcon,\r\n    Loop as LoopIcon,\r\n  } from \"@material-ui/icons\";\r\n\r\nconst defaultToolbarSelectStyles = {\r\n  iconButton: {\r\n  },\r\n  iconContainer: {\r\n    marginRight: \"24px\",\r\n  },\r\n};\r\n\r\nclass CustomToolbarSelectTrash extends React.Component {\r\n  handleClickRowsDelete = () => {\r\n    this.props.onRowsDelete();\r\n  };\r\n\r\n  handleClickRowsRecovery = () => {\r\n    this.props.onRowsRecovery();\r\n  };\r\n\r\n  render() {\r\n    const { classes } = this.props;\r\n\r\n    return (\r\n      <div className={classes.iconContainer}>\r\n        <Tooltip title={\"Восстановить\"}>\r\n          <IconButton className={classes.iconButton} onClick={this.handleClickRowsRecovery} style={{outline:\"none\"}}>\r\n            <LoopIcon className={classes.icon} />\r\n          </IconButton>\r\n        </Tooltip>\r\n        <Tooltip title={\"Удалить\"}>\r\n          <IconButton className={classes.iconButton} onClick={this.handleClickRowsDelete} style={{outline:\"none\"}}>\r\n            <DeleteIcon className={classes.icon} />\r\n          </IconButton>\r\n        </Tooltip>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withStyles(defaultToolbarSelectStyles, { name: \"CustomToolbarSelectTrash\" })(CustomToolbarSelectTrash);","export const textLabels = {\r\n        body: {\r\n          noMatch: \"Записей не найдено.\",\r\n          toolTip: \"Сортировать\"\r\n        },\r\n        filter: {\r\n          all: \"Все\",\r\n          title: \"Фильтры\",\r\n          reset: \"СБРОСИТЬ\",\r\n        },\r\n        toolbar: {\r\n          search: \"Поиск\",\r\n          viewColumns: \"Показать столбцы\",\r\n            filterTable: \"Фильтр таблицы\"\r\n        },\r\n        viewColumns: {\r\n            title: \"Показать столбцы\"\r\n          },\r\n        selectedRows: {\r\n          text: \"строка выбрана\"\r\n        },\r\n        pagination: {\r\n            next: \"Следующая страница\",\r\n            previous: \"Предыдущая страница\",\r\n            rowsPerPage: \"Строк на странице:\",\r\n            displayRows: \"из\",\r\n        }\r\n}","import React, {useState, useEffect} from 'react';\r\n\r\nimport {\r\n    Grid,\r\n    Button,\r\n    CircularProgress,\r\n    Typography,\r\n    FormControl,\r\n    InputLabel, Select, MenuItem\r\n  } from \"@material-ui/core\";\r\n\r\nimport MUIDataTable from \"mui-datatables\";\r\n\r\nimport PageTitle from \"../../components/PageTitle\";\r\nimport CustomToolbarSelectTrash from '../../components/Toolbar/CustomToolbarSelectTrash';\r\nimport NotFound from '../../components/NotFound/NotFound';\r\nimport { textLabels } from '../textLabels';\r\n\r\nfunction Trash() {\r\n    const role = localStorage.getItem('role');\r\n    const [category, setCategory] = useState(\"\")\r\n\r\n    const [customersData, setCustomersData] = useState([])\r\n    const [fieldsData, setFieldsData] = useState([])\r\n    const [clustersData, setClustersData] = useState([])\r\n    const [wellsData, setWellsData] = useState([])\r\n    const [wellboresData, setWellboresData] = useState([])\r\n    const [stratasData, setStratasData] = useState([])\r\n    const [servicesData, setServicesData] = useState([])\r\n    const [serviceMethodsData, setServiceMethodsData] = useState([])\r\n    const [qualityControlsData, setQualityControlsData] = useState([])\r\n\r\n    const [selectedRows, setSelectedRows] = useState([]);\r\n\r\n    const columnsStrata = [\r\n        {\r\n            name: \"Название пласта\"\r\n        },\r\n        {\r\n            name: \"Месторождение\"\r\n        },\r\n        {\r\n            name: \"Прошедшее время с момента удаления\"\r\n        },\r\n        {\r\n            name: \"Прикрепленный файл\",\r\n            options: {\r\n                customBodyRender: (value, tableMeta, updateValue) => {\r\n                    return (\r\n                        stratasData[tableMeta.rowIndex].strata_file ? <Button size=\"medium\" onClick={() => window.open(stratasData[tableMeta.rowIndex].strata_file, '_blank')} style={{outline: \"none\", width: \"40%\", backgroundColor:\"#34547A\", color:\"#fff\"}}>Открыть файл</Button>\r\n                        : <Button disabled size=\"medium\" style={{outline: \"none\", backgroundColor:\"#F6D106\", color:\"#000\", width: \"40%\"}}>Файлов не обнаружено</Button>\r\n                        );\r\n                  }\r\n            }\r\n        }\r\n    ]\r\n\r\n    const getDeletedCustomers = () => {\r\n        fetch(process.env.REACT_APP_API+'deleted_customers/?format=json', { headers : { \r\n            'Content-Type': 'application/json',\r\n            'Accept': 'application/json',\r\n            'Authorization': \"Token \" + localStorage.getItem('id_token')\r\n           }\r\n        }) \r\n        .then(response=>response.json())\r\n        .then(data=>{\r\n            setCustomersData(data)\r\n        })\r\n    }\r\n    const getDeletedFields = () => {\r\n        fetch(process.env.REACT_APP_API+'deleted_fields/?format=json', { headers : { \r\n            'Content-Type': 'application/json',\r\n            'Accept': 'application/json',\r\n            'Authorization': \"Token \" + localStorage.getItem('id_token')\r\n           }\r\n        }) \r\n        .then(response=>response.json())\r\n        .then(data=>{\r\n            setFieldsData(data)\r\n        })\r\n    }\r\n    const getDeletedClusters = () => {\r\n        fetch(process.env.REACT_APP_API+'deleted_clusters/?format=json', { headers : { \r\n            'Content-Type': 'application/json',\r\n            'Accept': 'application/json',\r\n            'Authorization': \"Token \" + localStorage.getItem('id_token')\r\n           }\r\n        }) \r\n        .then(response=>response.json())\r\n        .then(data=>{\r\n            setClustersData(data)\r\n        })\r\n    }\r\n    const getDeletedWells = () => {\r\n        fetch(process.env.REACT_APP_API+'deleted_wells/?format=json', { headers : { \r\n            'Content-Type': 'application/json',\r\n            'Accept': 'application/json',\r\n            'Authorization': \"Token \" + localStorage.getItem('id_token')\r\n           }\r\n        }) \r\n        .then(response=>response.json())\r\n        .then(data=>{\r\n            setWellsData(data)\r\n        })\r\n    }\r\n    const getDeletedWellbores = () => {\r\n        fetch(process.env.REACT_APP_API+'deleted_wellbores/?format=json', { headers : { \r\n            'Content-Type': 'application/json',\r\n            'Accept': 'application/json',\r\n            'Authorization': \"Token \" + localStorage.getItem('id_token')\r\n           }\r\n        }) \r\n        .then(response=>response.json())\r\n        .then(data=>{\r\n            setWellboresData(data)\r\n        })\r\n    }\r\n    const getDeletedStratas = () => {\r\n        fetch(process.env.REACT_APP_API+'deleted_strata/?format=json', { headers : { \r\n            'Content-Type': 'application/json',\r\n            'Accept': 'application/json',\r\n            'Authorization': \"Token \" + localStorage.getItem('id_token')\r\n           }\r\n        }) \r\n        .then(response=>response.json())\r\n        .then(data=>{\r\n            setStratasData(data)\r\n        })\r\n    }\r\n    const getDeletedServices = () => {\r\n        fetch(process.env.REACT_APP_API+'deleted_services/?format=json', { headers : { \r\n            'Content-Type': 'application/json',\r\n            'Accept': 'application/json',\r\n            'Authorization': \"Token \" + localStorage.getItem('id_token')\r\n           }\r\n        }) \r\n        .then(response=>response.json())\r\n        .then(data=>{\r\n            setServicesData(data)\r\n        })\r\n    }\r\n    const getDeletedServiceMethods = () => {\r\n        fetch(process.env.REACT_APP_API+'deleted_service_methods/?format=json', { headers : { \r\n            'Content-Type': 'application/json',\r\n            'Accept': 'application/json',\r\n            'Authorization': \"Token \" + localStorage.getItem('id_token')\r\n           }\r\n        }) \r\n        .then(response=>response.json())\r\n        .then(data=>{\r\n            setServiceMethodsData(data)\r\n        })\r\n    }\r\n    const getDeletedQualityControls = () => {\r\n        fetch(process.env.REACT_APP_API+'deleted_quality/?format=json', { headers : { \r\n            'Content-Type': 'application/json',\r\n            'Accept': 'application/json',\r\n            'Authorization': \"Token \" + localStorage.getItem('id_token')\r\n           }\r\n        }) \r\n        .then(response=>response.json())\r\n        .then(data=>{\r\n            setQualityControlsData(data)\r\n        })\r\n    }\r\n\r\n    const recoveryCustomer = (id) => {\r\n        fetch(process.env.REACT_APP_API+'recovery_customer/'+ id +'?format=json',{\r\n            method: 'PUT',\r\n            headers:{\r\n                'Accept':'application/json',\r\n                'Content-Type':'application/json',\r\n                'Authorization': \"Token \" + localStorage.getItem('id_token')\r\n            },\r\n            body: JSON.stringify({\r\n                \"name\": customersData.find(item => item.id === id).name\r\n            }) \r\n        })\r\n    }\r\n    const recoveryField = (id) => {\r\n        fetch(process.env.REACT_APP_API+'recovery_field/'+ id +'?format=json',{\r\n            method: 'PUT',\r\n            headers:{\r\n                'Accept':'application/json',\r\n                'Content-Type':'application/json',\r\n                'Authorization': \"Token \" + localStorage.getItem('id_token')\r\n            },\r\n            body: JSON.stringify({\r\n                \"name\": fieldsData.find(item => item.id === id).name\r\n            }) \r\n        })\r\n    }\r\n    const recoveryCluster = (id) => {\r\n        fetch(process.env.REACT_APP_API+'recovery_cluster/'+ id +'?format=json',{\r\n            method: 'PUT',\r\n            headers:{\r\n                'Accept':'application/json',\r\n                'Content-Type':'application/json',\r\n                'Authorization': \"Token \" + localStorage.getItem('id_token')\r\n            },\r\n            body: JSON.stringify({\r\n                \"name\": clustersData.find(item => item.id === id).name\r\n            }) \r\n        })\r\n    }\r\n    const recoveryWell = (id) => {\r\n        fetch(process.env.REACT_APP_API+'recovery_well/'+ id +'?format=json',{\r\n            method: 'PUT',\r\n            headers:{\r\n                'Accept':'application/json',\r\n                'Content-Type':'application/json',\r\n                'Authorization': \"Token \" + localStorage.getItem('id_token')\r\n            },\r\n            body: JSON.stringify({\r\n                \"num_well\": wellsData.find(item => item.id === id).num_well,\r\n                \"num_pad\": wellsData.find(item => item.id === id).num_pad\r\n            }) \r\n        })\r\n    }\r\n    const recoveryWellbore = (id) => {\r\n        fetch(process.env.REACT_APP_API+'recovery_wellbore/'+ id +'?format=json',{\r\n            method: 'PUT',\r\n            headers:{\r\n                'Accept':'application/json',\r\n                'Content-Type':'application/json',\r\n                'Authorization': \"Token \" + localStorage.getItem('id_token')\r\n            },\r\n            body: JSON.stringify({\r\n                \"num_wellbore\": wellboresData.find(item => item.id === id).num_wellbore\r\n            }) \r\n        })\r\n    }\r\n    const recoveryStrata = (id) => {\r\n        fetch(process.env.REACT_APP_API+'recovery_strata/'+ id +'?format=json',{\r\n            method: 'PUT',\r\n            headers:{\r\n                'Accept':'application/json',\r\n                'Content-Type':'application/json',\r\n                'Authorization': \"Token \" + localStorage.getItem('id_token')\r\n            },\r\n            body: JSON.stringify({\r\n                \"name\": stratasData.find(item => item.id === id).name\r\n            }) \r\n        })\r\n    }\r\n    const recoveryService = (id) => {\r\n        fetch(process.env.REACT_APP_API+'recovery_service/'+ id +'?format=json',{\r\n            method: 'PUT',\r\n            headers:{\r\n                'Accept':'application/json',\r\n                'Content-Type':'application/json',\r\n                'Authorization': \"Token \" + localStorage.getItem('id_token')\r\n            },\r\n            body: JSON.stringify({\r\n                \"name\": servicesData.find(item => item.id === id).name\r\n            }) \r\n        })\r\n    }\r\n    const recoveryServiceMethod = (id) => {\r\n        fetch(process.env.REACT_APP_API+'recovery_service_method/'+ id +'?format=json',{\r\n            method: 'PUT',\r\n            headers:{\r\n                'Accept':'application/json',\r\n                'Content-Type':'application/json',\r\n                'Authorization': \"Token \" + localStorage.getItem('id_token')\r\n            },\r\n            body: JSON.stringify({}) \r\n        })\r\n    }\r\n    const recoveryQuality = (id) => {\r\n        fetch(process.env.REACT_APP_API+'recovery_quality/'+ id +'?format=json',{\r\n            method: 'PUT',\r\n            headers:{\r\n                'Accept':'application/json',\r\n                'Content-Type':'application/json',\r\n                'Authorization': \"Token \" + localStorage.getItem('id_token')\r\n            },\r\n            body: JSON.stringify({\r\n                \"data_type\": qualityControlsData.find(item => item.quality_control_id === id).data_type\r\n            }) \r\n        })\r\n    }\r\n\r\n    const deleteCustomer = (id) => {\r\n        fetch(process.env.REACT_APP_API+'del_customer/'+ id +'?format=json', { method: 'DELETE', headers: {'Authorization': \"Token \" + localStorage.getItem('id_token')} })\r\n    }\r\n    const deleteField = (id) => {\r\n        fetch(process.env.REACT_APP_API+'del_field/'+ id +'?format=json', { method: 'DELETE', headers: {'Authorization': \"Token \" + localStorage.getItem('id_token')} })\r\n    }\r\n    const deleteCluster = (id) => {\r\n        fetch(process.env.REACT_APP_API+'del_cluster/'+ id +'?format=json', { method: 'DELETE', headers: {'Authorization': \"Token \" + localStorage.getItem('id_token')} })\r\n    }\r\n    const deleteWell = (id) => {\r\n        fetch(process.env.REACT_APP_API+'del_well/'+ id +'?format=json', { method: 'DELETE', headers: {'Authorization': \"Token \" + localStorage.getItem('id_token')} })\r\n    }\r\n    const deleteWellbore = (id) => {\r\n        fetch(process.env.REACT_APP_API+'del_wellbore/'+ id +'?format=json', { method: 'DELETE', headers: {'Authorization': \"Token \" + localStorage.getItem('id_token')} })\r\n    }\r\n    const deleteStrata = (id) => {\r\n        fetch(process.env.REACT_APP_API+'del_strata/'+ id +'?format=json', { method: 'DELETE', headers: {'Authorization': \"Token \" + localStorage.getItem('id_token')} })\r\n    }\r\n    const deleteService = (id) => {\r\n        fetch(process.env.REACT_APP_API+'del_service/'+ id +'?format=json', { method: 'DELETE', headers: {'Authorization': \"Token \" + localStorage.getItem('id_token')} })\r\n    }\r\n    const deleteServiceMethod = (id) => {\r\n        fetch(process.env.REACT_APP_API+'del_service_method/'+ id +'?format=json', { method: 'DELETE', headers: {'Authorization': \"Token \" + localStorage.getItem('id_token')} })\r\n    }\r\n    const deleteQuality = (id) => {\r\n        fetch(process.env.REACT_APP_API+'del_quality/'+ id +'?format=json', { method: 'DELETE', headers: {'Authorization': \"Token \" + localStorage.getItem('id_token')} })\r\n    }\r\n\r\n    const rowsDeleteCustomer = () => {\r\n        if (window.confirm('Вы точно хотите удалить '+ customersData[selectedRows[0]].name +' из списка дочерних обществ?')){\r\n            deleteCustomer(customersData[selectedRows[0]].id);\r\n            customersData.splice(selectedRows[0], 1);\r\n          }\r\n        setSelectedRows([]);\r\n    }\r\n    const rowsDeleteField = () => {\r\n        if (window.confirm('Вы точно хотите удалить '+ fieldsData[selectedRows[0]].name +' из списка месторождений?')){\r\n            deleteField(fieldsData[selectedRows[0]].id);\r\n            fieldsData.splice(selectedRows[0], 1);\r\n          }\r\n        setSelectedRows([]);\r\n    }\r\n    const rowsDeleteCluster = () => {\r\n        if (window.confirm('Вы точно хотите удалить куст №'+ clustersData[selectedRows[0]].name +' из списка кустов?')){\r\n            deleteCluster(clustersData[selectedRows[0]].id);\r\n            clustersData.splice(selectedRows[0], 1);\r\n          }\r\n        setSelectedRows([]);\r\n    }\r\n    const rowsDeleteWell = () => {\r\n        if (window.confirm('Вы точно хотите удалить скважину №'+ wellsData[selectedRows[0]].num_well +' из списка скважин?')){\r\n            deleteWell(wellsData[selectedRows[0]].id);\r\n            wellsData.splice(selectedRows[0], 1);\r\n          }\r\n        setSelectedRows([]);\r\n    }\r\n    const rowsDeleteWellbore = () => {\r\n        if (window.confirm('Вы точно хотите удалить ствол №'+ wellboresData[selectedRows[0]].num_wellbore +' из списка стволов?')){\r\n            deleteWellbore(wellboresData[selectedRows[0]].id);\r\n            wellboresData.splice(selectedRows[0], 1);\r\n          }\r\n        setSelectedRows([]);\r\n    }\r\n    const rowsDeleteStrata = () => {\r\n        if (window.confirm('Вы точно хотите удалить пласт №'+ stratasData[selectedRows[0]].name +' из списка пластов?')){\r\n            deleteStrata(stratasData[selectedRows[0]].id);\r\n            stratasData.splice(selectedRows[0], 1);\r\n          }\r\n        setSelectedRows([]);\r\n    }\r\n    const rowsDeleteService = () => {\r\n        if (window.confirm('Вы точно хотите удалить '+ servicesData[selectedRows[0]].name +' из списка сервисных компаний?')){\r\n            deleteService(servicesData[selectedRows[0]].id);\r\n            servicesData.splice(selectedRows[0], 1);\r\n          }\r\n        setSelectedRows([]);\r\n    }\r\n    const rowsDeleteServiceMethod = () => {\r\n        if (window.confirm('Вы точно хотите удалить инструмент '+ serviceMethodsData[selectedRows[0]].tool_type + ' cервисной компании ' + serviceMethodsData[selectedRows[0]].service_name +' из списка сервисных методов?')){\r\n            deleteServiceMethod(serviceMethodsData[selectedRows[0]].service_method_id);\r\n            serviceMethodsData.splice(selectedRows[0], 1);\r\n          }\r\n        setSelectedRows([]);\r\n    }\r\n    const rowsDeleteQualityControl = () => {\r\n        if (window.confirm('Вы точно хотите удалить отчёт №'+ qualityControlsData[selectedRows[0]].quality_control_id +' из списка отчётов?')){\r\n            deleteQuality(qualityControlsData[selectedRows[0]].quality_control_id);\r\n            qualityControlsData.splice(selectedRows[0], 1);\r\n          }\r\n        setSelectedRows([]);\r\n    }\r\n\r\n    const recoveryRowsCustomer = () => {\r\n        recoveryCustomer(customersData[selectedRows[0]].id);\r\n        customersData.splice(selectedRows[0], 1);\r\n        setSelectedRows([])\r\n    }\r\n    const recoveryRowsField = () => {\r\n        recoveryField(fieldsData[selectedRows[0]].id);\r\n        fieldsData.splice(selectedRows[0], 1);\r\n        setSelectedRows([])\r\n    }\r\n    const recoveryRowsCluster = () => {\r\n        recoveryCluster(clustersData[selectedRows[0]].id);\r\n        clustersData.splice(selectedRows[0], 1);\r\n        setSelectedRows([])\r\n    }\r\n    const recoveryRowsWell = () => {\r\n        recoveryWell(wellsData[selectedRows[0]].id);\r\n        wellsData.splice(selectedRows[0], 1);\r\n        setSelectedRows([])\r\n    }\r\n    const recoveryRowsWellbore = () => {\r\n        recoveryWellbore(wellboresData[selectedRows[0]].id);\r\n        wellboresData.splice(selectedRows[0], 1);\r\n        setSelectedRows([])\r\n    }\r\n    const recoveryRowsStrata = () => {\r\n        recoveryStrata(stratasData[selectedRows[0]].id);\r\n        stratasData.splice(selectedRows[0], 1);\r\n        setSelectedRows([])\r\n    }\r\n    const recoveryRowsService = () => {\r\n        recoveryService(servicesData[selectedRows[0]].id);\r\n        servicesData.splice(selectedRows[0], 1);\r\n        setSelectedRows([])\r\n    }\r\n    const recoveryRowsServiceMethod = () => {\r\n        recoveryServiceMethod(serviceMethodsData[selectedRows[0]].service_method_id);\r\n        serviceMethodsData.splice(selectedRows[0], 1);\r\n        setSelectedRows([])\r\n    }\r\n    const recoveryRowsQualityControl = () => {\r\n        recoveryQuality(qualityControlsData[selectedRows[0]].quality_control_id);\r\n        qualityControlsData.splice(selectedRows[0], 1);\r\n        setSelectedRows([])\r\n    }\r\n    \r\n\r\n    const updateCategory = (name) => {\r\n        setCategory(name)\r\n        setSelectedRows([])\r\n        name === \"Дочерние общества\" && getDeletedCustomers()\r\n        name === \"Месторождения\" && getDeletedFields()\r\n        name === \"Кусты\" && getDeletedClusters()\r\n        name === \"Скважины\" && getDeletedWells()\r\n        name === \"Стволы\" && getDeletedWellbores()\r\n        name === \"Пласты\" && getDeletedStratas()\r\n        name === \"Сервисные компании\" && getDeletedServices()\r\n        name === \"Сервисные методы\" && getDeletedServiceMethods()\r\n        name === \"Отчеты качества ГИС\" && getDeletedQualityControls()\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <PageTitle title={category !== \"\" ? \"Корзина (\" + category + \")\" : \"Корзина\"}/>\r\n            <Grid container spacing={4}>\r\n                <Grid item xs={3}>\r\n                    <FormControl fullWidth variant=\"standard\">\r\n                        <InputLabel id=\"category\">Выберите категорию</InputLabel>\r\n                            <Select labelId=\"category\" name=\"category\" label=\"Выберите категорию\" size=\"small\" value={category} onChange={e => updateCategory(e.target.value)}>\r\n                                <MenuItem hidden disabled></MenuItem>\r\n                                <MenuItem key=\"customers\" value=\"Дочерние общества\" style={{fontSize: \"20px\"}}>Дочерние общества</MenuItem>\r\n                                <MenuItem key=\"fields\" value=\"Месторождения\" style={{fontSize: \"20px\"}}>Месторождения</MenuItem>\r\n                                <MenuItem key=\"clusters\" value=\"Кусты\" style={{fontSize: \"20px\"}}>Кусты</MenuItem>\r\n                                <MenuItem key=\"wells\" value=\"Скважины\" style={{fontSize: \"20px\"}}>Скважины</MenuItem>\r\n                                <MenuItem key=\"wellbores\" value=\"Стволы\" style={{fontSize: \"20px\"}}>Стволы</MenuItem>\r\n                                <MenuItem key=\"stratas\" value=\"Пласты\" style={{fontSize: \"20px\"}}>Пласты</MenuItem>\r\n                                <MenuItem key=\"services\" value=\"Сервисные компании\" style={{fontSize: \"20px\"}}>Сервисные компании</MenuItem>\r\n                                <MenuItem key=\"service_methods\" value=\"Сервисные методы\" style={{fontSize: \"20px\"}}>Сервисные методы</MenuItem>\r\n                                <MenuItem key=\"quality\" value=\"Отчеты качества ГИС\" style={{fontSize: \"20px\"}}>Отчеты качества ГИС</MenuItem>\r\n                            </Select>\r\n                    </FormControl>\r\n                </Grid>\r\n                <Grid item xs={9}></Grid>\r\n                {category === \"Дочерние общества\" && <Grid item xs={12}>\r\n                    {customersData.length === 0 ? <NotFound/> :\r\n                    <MUIDataTable\r\n                        title={<Typography variant=\"h6\">\r\n                        Удаленные дочерние общества\r\n                        {customersData.length === 0 && <CircularProgress size={24} style={{ marginLeft: 15, position: 'relative', top: 4 }} />}\r\n                    </Typography>}\r\n                        data={customersData.map(item => [item.name, item.time_before_del])}\r\n                        columns={[\"Название\", \"Прошедшее время с момента удаления\"]}\r\n                        options={{\r\n                        print: false,\r\n                        filter: false,\r\n                        download: false,\r\n                        rowsPerPage: 50,\r\n                        rowsPerPageOptions: [50,100,500],\r\n                        viewColumns: \"false\",\r\n                        textLabels: textLabels,\r\n                        rowsSelected: selectedRows,\r\n                        onRowSelectionChange: (rowsSelectedData, allRows, rowsSelected) => {\r\n                            setSelectedRows(rowsSelected)\r\n                          },\r\n                        customToolbarSelect: (selectedRows, displayData, setSelectedRows) => (\r\n                            <CustomToolbarSelectTrash selectedRows={selectedRows} displayData={displayData} setSelectedRows={setSelectedRows} onRowsRecovery={recoveryRowsCustomer} onRowsDelete={rowsDeleteCustomer}/>\r\n                        ),\r\n                        selectableRows: (role === \"user\" || role === \"superuser\" ? 'single' : 'none'),\r\n                        }}\r\n                    />}\r\n                </Grid>}\r\n                {category === \"Месторождения\" && <Grid item xs={12}>\r\n                    {fieldsData.length === 0 ? <NotFound/> :\r\n                    <MUIDataTable\r\n                        title={<Typography variant=\"h6\">\r\n                        Удаленные месторождения\r\n                        {fieldsData.length === 0 && <CircularProgress size={24} style={{ marginLeft: 15, position: 'relative', top: 4 }} />}\r\n                    </Typography>}\r\n                        data={fieldsData.map(item => [item.name, item.customer_name, item.time_before_del])}\r\n                        columns={[\"Название\", \"Дочернее общество\", \"Прошедшее время с момента удаления\"]}\r\n                        options={{\r\n                        print: false,\r\n                        filter: false,\r\n                        download: false,\r\n                        rowsPerPage: 50,\r\n                        rowsPerPageOptions: [50,100,500],\r\n                        viewColumns: \"false\",\r\n                        textLabels: textLabels,\r\n                        rowsSelected: selectedRows,\r\n                        onRowSelectionChange: (rowsSelectedData, allRows, rowsSelected) => {\r\n                            setSelectedRows(rowsSelected)\r\n                        },\r\n                        customToolbarSelect: (selectedRows, displayData, setSelectedRows) => (\r\n                            <CustomToolbarSelectTrash selectedRows={selectedRows} displayData={displayData} setSelectedRows={setSelectedRows} onRowsRecovery={recoveryRowsField} onRowsDelete={rowsDeleteField}/>\r\n                        ),\r\n                        selectableRows: (role === \"user\" || role === \"superuser\" ? 'single' : 'none'),\r\n                        }}\r\n                    />}\r\n                </Grid>}\r\n                {category === \"Кусты\" && <Grid item xs={12}>\r\n                    {clustersData.length === 0 ? <NotFound/> :\r\n                    <MUIDataTable\r\n                        title={<Typography variant=\"h6\">\r\n                        Удаленные кусты\r\n                        {clustersData.length === 0 && <CircularProgress size={24} style={{ marginLeft: 15, position: 'relative', top: 4 }} />}\r\n                    </Typography>}\r\n                        data={clustersData.map(item => [item.name, item.field_name, item.time_before_del])}\r\n                        columns={[\"Название\", \"Месторождение\", \"Прошедшее время с момента удаления\"]}\r\n                        options={{\r\n                        print: false,\r\n                        filter: false,\r\n                        download: false,\r\n                        rowsPerPage: 50,\r\n                        rowsPerPageOptions: [50,100,500],\r\n                        viewColumns: \"false\",\r\n                        textLabels: textLabels,\r\n                        rowsSelected: selectedRows,\r\n                        onRowSelectionChange: (rowsSelectedData, allRows, rowsSelected) => {\r\n                            setSelectedRows(rowsSelected)\r\n                        },\r\n                        customToolbarSelect: (selectedRows, displayData, setSelectedRows) => (\r\n                            <CustomToolbarSelectTrash selectedRows={selectedRows} displayData={displayData} setSelectedRows={setSelectedRows} onRowsRecovery={recoveryRowsCluster} onRowsDelete={rowsDeleteCluster}/>\r\n                        ),\r\n                        selectableRows: (role === \"user\" || role === \"superuser\" ? 'single' : 'none'),\r\n                        }}\r\n                    />}\r\n                </Grid>}\r\n                {category === \"Скважины\" && <Grid item xs={12}>\r\n                    {wellsData.length === 0 ? <NotFound/> :\r\n                    <MUIDataTable\r\n                        title={<Typography variant=\"h6\">\r\n                        Удаленные скважины\r\n                        {wellsData.length === 0 && <CircularProgress size={24} style={{ marginLeft: 15, position: 'relative', top: 4 }} />}\r\n                    </Typography>}\r\n                        data={wellsData.map(item => [item.num_well, item.num_pad, item.well_type, item.customer_name, item.time_before_del])}\r\n                        columns={[\"Номер скважины\", \"Номер куста\", \"Тип скважины\", \"Дочернее общество\", \"Прошедшее время с момента удаления\"]}\r\n                        options={{\r\n                        print: false,\r\n                        filter: false,\r\n                        download: false,\r\n                        rowsPerPage: 50,\r\n                        rowsPerPageOptions: [50,100,500],\r\n                        viewColumns: \"false\",\r\n                        textLabels: textLabels,\r\n                        rowsSelected: selectedRows,\r\n                        onRowSelectionChange: (rowsSelectedData, allRows, rowsSelected) => {\r\n                            setSelectedRows(rowsSelected)\r\n                        },\r\n                        customToolbarSelect: (selectedRows, displayData, setSelectedRows) => (\r\n                            <CustomToolbarSelectTrash selectedRows={selectedRows} displayData={displayData} setSelectedRows={setSelectedRows} onRowsRecovery={recoveryRowsWell} onRowsDelete={rowsDeleteWell}/>\r\n                        ),\r\n                        selectableRows: (role === \"user\" || role === \"superuser\" ? 'single' : 'none'),\r\n                        }}\r\n                    />}\r\n                </Grid>}\r\n                {category === \"Стволы\" && <Grid item xs={12}>\r\n                    {wellboresData.length === 0 ? <NotFound/> :\r\n                    <MUIDataTable\r\n                        title={<Typography variant=\"h6\">\r\n                        Удаленные стволы\r\n                        {wellboresData.length === 0 && <CircularProgress size={24} style={{ marginLeft: 15, position: 'relative', top: 4 }} />}\r\n                    </Typography>}\r\n                        data={wellboresData.map(item => [item.num_wellbore, item.pie_well, item.diametr, item.well_num, item.time_before_del])}\r\n                        columns={[\"Номер ствола\", \"Участок ствола\", \"Диаметр\", \"Номер скважины\", \"Прошедшее время с момента удаления\"]}\r\n                        options={{\r\n                        print: false,\r\n                        filter: false,\r\n                        download: false,\r\n                        rowsPerPage: 50,\r\n                        rowsPerPageOptions: [50,100,500],\r\n                        viewColumns: \"false\",\r\n                        textLabels: textLabels,\r\n                        rowsSelected: selectedRows,\r\n                        onRowSelectionChange: (rowsSelectedData, allRows, rowsSelected) => {\r\n                            setSelectedRows(rowsSelected)\r\n                        },\r\n                        customToolbarSelect: (selectedRows, displayData, setSelectedRows) => (\r\n                            <CustomToolbarSelectTrash selectedRows={selectedRows} displayData={displayData} setSelectedRows={setSelectedRows} onRowsRecovery={recoveryRowsWellbore} onRowsDelete={rowsDeleteWellbore}/>\r\n                        ),\r\n                        selectableRows: (role === \"user\" || role === \"superuser\" ? 'single' : 'none'),\r\n                        }}\r\n                    />}\r\n                </Grid>}\r\n                {category === \"Пласты\" && <Grid item xs={12}>\r\n                    {stratasData.length === 0 ? <NotFound/> :\r\n                    <MUIDataTable\r\n                        title={<Typography variant=\"h6\">\r\n                        Удаленные пласты\r\n                        {stratasData.length === 0 && <CircularProgress size={24} style={{ marginLeft: 15, position: 'relative', top: 4 }} />}\r\n                    </Typography>}\r\n                        data={stratasData.map(item => [item.name, item.field_name, item.time_before_del])}\r\n                        columns={columnsStrata}\r\n                        options={{\r\n                        print: false,\r\n                        filter: false,\r\n                        download: false,\r\n                        rowsPerPage: 50,\r\n                        rowsPerPageOptions: [50,100,500],\r\n                        viewColumns: \"false\",\r\n                        textLabels: textLabels,\r\n                        rowsSelected: selectedRows,\r\n                        onRowSelectionChange: (rowsSelectedData, allRows, rowsSelected) => {\r\n                            setSelectedRows(rowsSelected)\r\n                        },\r\n                        customToolbarSelect: (selectedRows, displayData, setSelectedRows) => (\r\n                            <CustomToolbarSelectTrash selectedRows={selectedRows} displayData={displayData} setSelectedRows={setSelectedRows} onRowsRecovery={recoveryRowsStrata} onRowsDelete={rowsDeleteStrata}/>\r\n                        ),\r\n                        selectableRows: (role === \"user\" || role === \"superuser\" ? 'single' : 'none'),\r\n                        }}\r\n                    />}\r\n                </Grid>}\r\n                {category === \"Сервисные компании\" && <Grid item xs={12}>\r\n                    {servicesData.length === 0 ? <NotFound/> :\r\n                    <MUIDataTable\r\n                        title={<Typography variant=\"h6\">\r\n                        Удаленные сервисные компании\r\n                        {servicesData.length === 0 && <CircularProgress size={24} style={{ marginLeft: 15, position: 'relative', top: 4 }} />}\r\n                    </Typography>}\r\n                        data={servicesData.map(item => [item.name, item.time_before_del])}\r\n                        columns={[\"Название\", \"Прошедшее время с момента удаления\"]}\r\n                        options={{\r\n                        print: false,\r\n                        filter: false,\r\n                        download: false,\r\n                        rowsPerPage: 50,\r\n                        rowsPerPageOptions: [50,100,500],\r\n                        viewColumns: \"false\",\r\n                        textLabels: textLabels,\r\n                        rowsSelected: selectedRows,\r\n                        onRowSelectionChange: (rowsSelectedData, allRows, rowsSelected) => {\r\n                            setSelectedRows(rowsSelected)\r\n                        },\r\n                        customToolbarSelect: (selectedRows, displayData, setSelectedRows) => (\r\n                            <CustomToolbarSelectTrash selectedRows={selectedRows} displayData={displayData} setSelectedRows={setSelectedRows} onRowsRecovery={recoveryRowsService} onRowsDelete={rowsDeleteService}/>\r\n                        ),\r\n                        selectableRows: (role === \"user\" || role === \"superuser\" ? 'single' : 'none'),\r\n                        }}\r\n                    />}\r\n                </Grid>}\r\n                {category === \"Сервисные методы\" && <Grid item xs={12}>\r\n                    {serviceMethodsData.length === 0 ? <NotFound/> :\r\n                    <MUIDataTable\r\n                        title={<Typography variant=\"h6\">\r\n                        Удаленные сервисные методы\r\n                        {serviceMethodsData.length === 0 && <CircularProgress size={24} style={{ marginLeft: 15, position: 'relative', top: 4 }} />}\r\n                    </Typography>}\r\n                        data={serviceMethodsData.map(item => [item.tool_type, item.method, item.service_name, item.time_before_del])}\r\n                        columns={[\"Название инструмента\", \"Метод\", \"Сервисная компания\", \"Прошедшее время с момента удаления\"]}\r\n                        options={{\r\n                        print: false,\r\n                        filter: false,\r\n                        download: false,\r\n                        rowsPerPage: 50,\r\n                        rowsPerPageOptions: [50,100,500],\r\n                        viewColumns: \"false\",\r\n                        textLabels: textLabels,\r\n                        rowsSelected: selectedRows,\r\n                        onRowSelectionChange: (rowsSelectedData, allRows, rowsSelected) => {\r\n                            setSelectedRows(rowsSelected)\r\n                        },\r\n                        customToolbarSelect: (selectedRows, displayData, setSelectedRows) => (\r\n                            <CustomToolbarSelectTrash selectedRows={selectedRows} displayData={displayData} setSelectedRows={setSelectedRows} onRowsRecovery={recoveryRowsServiceMethod} onRowsDelete={rowsDeleteServiceMethod}/>\r\n                        ),\r\n                        selectableRows: (role === \"user\" || role === \"superuser\" ? 'single' : 'none'),\r\n                        }}\r\n                    />}\r\n                </Grid>}\r\n                {category === \"Отчеты качества ГИС\" && <Grid item xs={12}>\r\n                    {qualityControlsData.length === 0 ? <NotFound/> :\r\n                    <MUIDataTable\r\n                        title={<Typography variant=\"h6\">\r\n                        Удаленные отчеты качества ГИС\r\n                        {qualityControlsData.length === 0 && <CircularProgress size={24} style={{ marginLeft: 15, position: 'relative', top: 4 }} />}\r\n                    </Typography>}\r\n                        data={qualityControlsData.map(item => [item.quality_control_id, item.customer, item.field, item.well, item.data_type === \"Реального времени\" ? \"Оперативный\" : \"Финальный\", item.section_interval_start + \" - \" + item.section_interval_end, item.value, item.time_before_del])}\r\n                        columns={[\"Номер отчета\", \"Дочернее общество\", \"Месторождение\", \"Скважина\", \"Тип отчёта\", \"Интервал секции (м)\", \"Оценка (%)\", \"Прошедшее время с момента удаления\"]}\r\n                        options={{\r\n                        print: false,\r\n                        filter: false,\r\n                        download: false,\r\n                        rowsPerPage: 50,\r\n                        rowsPerPageOptions: [50,100,500],\r\n                        viewColumns: \"false\",\r\n                        textLabels: textLabels,\r\n                        rowsSelected: selectedRows,\r\n                        onRowSelectionChange: (rowsSelectedData, allRows, rowsSelected) => {\r\n                            setSelectedRows(rowsSelected)\r\n                        },\r\n                        customToolbarSelect: (selectedRows, displayData, setSelectedRows) => (\r\n                            <CustomToolbarSelectTrash selectedRows={selectedRows} displayData={displayData} setSelectedRows={setSelectedRows} onRowsRecovery={recoveryRowsQualityControl} onRowsDelete={rowsDeleteQualityControl}/>\r\n                        ),\r\n                        selectableRows: (role === \"user\" || role === \"superuser\" ? 'single' : 'none'),\r\n                        }}\r\n                    />}\r\n                </Grid>}\r\n            </Grid>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Trash;\r\n","import React, {useState, useEffect} from 'react';\r\n\r\nimport {\r\n    Grid,\r\n    IconButton,\r\n    TextField,\r\n    InputAdornment,FormControl,\r\n    Button,\r\n    Typography,\r\n    CircularProgress\r\n  } from \"@material-ui/core\";\r\nimport {Form, Row, Col} from 'react-bootstrap';\r\n\r\nimport {\r\n  Settings as SettingsIcon,\r\n  Backspace as BackspaceIcon,\r\n  Check as CheckIcon\r\n} from \"@material-ui/icons\";\r\n\r\nimport MUIDataTable from \"mui-datatables\";\r\nimport ValidAdmin from '../../components/Toasts/ValidAdmin';\r\nimport PageTitle from \"../../components/PageTitle\";\r\n\r\nfunction Logs() {\r\n    const [logsData, setLogsData] = useState([]);\r\n    const [date_start, setDate_start] = useState(\"\");\r\n    const [date_end, setDate_end] = useState(\"\");\r\n    const constant = false;\r\n\r\n    const [showInputTime, setShowInputTime] = useState(false);\r\n    const [showValid, setShowValid] = useState(false);\r\n\r\n    useEffect(() => {\r\n        getLogs();\r\n    },[constant])\r\n\r\n    const getLogs = () => {\r\n        fetch(process.env.REACT_APP_API+'get_week_log/?format=json', { headers : { \r\n          'Content-Type': 'application/json',\r\n          'Accept': 'application/json',\r\n          'Authorization': \"Token \" + localStorage.getItem('id_token')\r\n         }\r\n      }) \r\n        .then(response=>response.json())\r\n        .then(data=>{\r\n            setLogsData(data);\r\n        })\r\n    }\r\n\r\n    const getTimeLogs = () => {\r\n        setLogsData([])\r\n        fetch(process.env.REACT_APP_API + 'get_range_log',{\r\n            method: 'POST',\r\n            headers:{\r\n                'Accept':'application/json',\r\n                'Content-Type':'application/json',\r\n                'Authorization': \"Token \" + localStorage.getItem('id_token')\r\n            },\r\n            body: JSON.stringify({\r\n                \"date_start\": date_start,\r\n                \"date_end\": date_end\r\n            }) \r\n        })\r\n        .then(response => response.json())\r\n        .then(data=>{\r\n            setLogsData(data)\r\n          })\r\n    }\r\n\r\n    return (\r\n        <>\r\n        <ValidAdmin active={showValid} setActive={() => setShowValid(!showValid)}/>\r\n        <PageTitle title={\r\n          <>Логи <IconButton aria-label=\"change_time\" onClick={() => setShowInputTime(!showInputTime)} style={{outline:'none'}}>\r\n            { showInputTime ? <BackspaceIcon/> : <SettingsIcon />}\r\n          </IconButton></>} \r\n          button={<Button\r\n            variant=\"contained\"\r\n            size=\"medium\"\r\n            color=\"secondary\"\r\n            style={{outline: \"none\", backgroundColor:\"#34547A\"}}\r\n            onClick={() => { setShowInputTime(false); setDate_start(\"\"); setDate_end(\"\"); setLogsData([]); getLogs()}}\r\n            >\r\n                Загрузить логи за последнюю неделю\r\n            </Button>}/>\r\n            <Grid container spacing={4}>\r\n                <Grid item xs={12} style={{display: (showInputTime ? 'flex' : 'none')}}>\r\n                    <Form.Group as={Row} style={{paddingBottom:\"0.25rem\"}}>\r\n                        <Col xs=\"2\">\r\n                            <FormControl fullWidth variant=\"standard\">\r\n                              <TextField type=\"date\" \r\n                                value={date_start}\r\n                                InputProps={{\r\n                                  startAdornment: <InputAdornment position=\"start\"><b>c</b></InputAdornment>,\r\n                                }}\r\n                                onChange={(e) => setDate_start(e.target.value)}/>\r\n                            </FormControl>\r\n                        </Col>\r\n                        <Col xs=\"2\">\r\n                            <FormControl fullWidth variant=\"standard\">\r\n                              <TextField type=\"date\"\r\n                                value={date_end} \r\n                                InputProps={{\r\n                                  startAdornment: <InputAdornment position=\"start\"><b>по</b></InputAdornment>,\r\n                                }}\r\n                                onChange={(e) => setDate_end(e.target.value)}/>\r\n                            </FormControl>\r\n                        </Col>\r\n                        <Col xs=\"1\" style={{padding: 0}}>\r\n                          <IconButton aria-label=\"getrangelog\" onClick={() => date_start !== \"\" && date_end !== \"\" ? getTimeLogs() : setShowValid(true)} style={{outline:'none'}}>\r\n                            <CheckIcon/>\r\n                          </IconButton>\r\n                        </Col>\r\n                        <Col xs=\"7\"></Col>\r\n                    </Form.Group>\r\n                </Grid>\r\n            <Grid item xs={12}>\r\n          <MUIDataTable\r\n            title={<Typography variant=\"h6\">\r\n            Список логов в базе\r\n            {logsData.length === 0 && <CircularProgress size={24} style={{ marginLeft: 15, position: 'relative', top: 4 }} />}\r\n          </Typography>}\r\n            data={logsData.map(item => [item.user_name, item.user_login, item.request.substring(0, 60), item.level, item.timestamp.substring(0, 10) + \" \" + item.timestamp.substring(11, 19)])}\r\n            columns={[\"Имя\", \"Логин\", \"Запрос пользователя\", \"Уровень\", \"Время запроса\"]}\r\n            options={{\r\n              filterType: \"textField\",\r\n              print: false,\r\n              download: false,\r\n              //pagination: false,\r\n              rowsPerPage: 20,\r\n              rowsPerPageOptions: [20, 50, 100, 500],\r\n              textLabels: {\r\n                body: {\r\n                  noMatch: \"Записей не найдено.\",\r\n                  toolTip: \"Сортировать\"\r\n                },\r\n                filter: {\r\n                  all: \"Все\",\r\n                  title: \"Фильтры\",\r\n                  reset: \"СБРОСИТЬ\",\r\n                },\r\n                pagination: {\r\n                  next: \"Следующая страница\",\r\n                  previous: \"Предыдущая страница\",\r\n                  rowsPerPage: \"Строк на странице:\",\r\n                  displayRows: \"из\",\r\n                },\r\n                toolbar: {\r\n                  search: \"Поиск\",\r\n                  viewColumns: \"Показать столбцы\",\r\n                    filterTable: \"Фильтр таблицы\"\r\n                },\r\n                viewColumns: {\r\n                    title: \"Показать столбцы\"\r\n                  },\r\n                selectedRows: {\r\n                  text: \"строка выбрана\"\r\n                },\r\n              },\r\n              selectableRows: 'none'\r\n            }}\r\n          />\r\n        </Grid>\r\n        </Grid>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Logs;\r\n","import React, {useState, useEffect} from 'react';\r\n\r\nimport {\r\n    Button,\r\n    Dialog, DialogContent, DialogTitle, DialogActions\r\n} from \"@material-ui/core\";\r\n\r\nimport {Form} from 'react-bootstrap';\r\n\r\nfunction EditClusterDialog({active, setActive, cluster_id, cluster_name, onUpdate}) {\r\n    const [cluster, setCluster] = useState(\"\");\r\n\r\n    function onSubmitCluster(e){\r\n        e.preventDefault()\r\n        fetch(process.env.REACT_APP_API+'clusters/id/'+ cluster_id + '?format=json',{\r\n            method: 'PUT',\r\n            headers:{\r\n                'Accept':'application/json',\r\n                'Content-Type':'application/json',\r\n                'Authorization': \"Token \" + localStorage.getItem('id_token')\r\n            },\r\n            body: JSON.stringify({\r\n                \"name\": cluster\r\n            }) \r\n        })\r\n        onUpdate();\r\n    };\r\n\r\n    useEffect(() => {\r\n        setCluster(cluster_name);\r\n    }, [cluster_name])\r\n\r\n    return (\r\n        <>\r\n            <Dialog open={active} onClose={setActive} maxWidth=\"xs\" fullWidth>\r\n                <DialogTitle>Изменить название куста</DialogTitle>\r\n                <Form name=\"editcluster\" onSubmit={e => onSubmitCluster(e)}>\r\n                    <DialogContent>\r\n                        <Form.Group>\r\n                            <Form.Label htmlFor=\"edit_cluster\">Номер куста</Form.Label>\r\n                            <Form.Control\r\n                            type=\"text\"\r\n                            id=\"edit_cluster\"\r\n                            name=\"edit_cluster\"\r\n                            onChange={e => setCluster(e.target.value)}\r\n                            value={cluster}\r\n                            />\r\n                        </Form.Group>\r\n                    </DialogContent>\r\n                <DialogActions>\r\n                    <Button type=\"submit\" onClick={setActive} style={{outline: \"none\"}}>Сохранить</Button>\r\n                </DialogActions>\r\n                </Form>\r\n            </Dialog>   \r\n        </>\r\n    )\r\n}\r\n\r\nexport default EditClusterDialog;","import React, {useState, useEffect} from 'react';\r\n\r\nimport {\r\n    Button,\r\n    Dialog, DialogContent, DialogTitle, DialogActions\r\n} from \"@material-ui/core\";\r\n\r\nimport {Form} from 'react-bootstrap';\r\n\r\nfunction EditWellDialog({active, setActive, well_id, well_name, well_type, num_pad, onUpdate}) {\r\n    const [well, setWell] = useState(\"\");\r\n    const [wellType, setWellType] = useState(\"\");\r\n\r\n    function onSubmitWell(e){\r\n        e.preventDefault()\r\n        fetch(process.env.REACT_APP_API+'wells/id/'+ well_id + '?format=json',{\r\n            method: 'PUT',\r\n            headers:{\r\n                'Accept':'application/json',\r\n                'Content-Type':'application/json',\r\n                'Authorization': \"Token \" + localStorage.getItem('id_token')\r\n            },\r\n            body: JSON.stringify({\r\n                \"num_well\": well,\r\n                \"well_type\": wellType,\r\n                \"num_pad\": num_pad\r\n            }) \r\n        })\r\n        onUpdate();\r\n    };\r\n\r\n    useEffect(() => {\r\n        setWell(well_name);\r\n    }, [well_name])\r\n\r\n    useEffect(() => {\r\n        setWellType(well_type);\r\n    }, [well_type])\r\n\r\n    return (\r\n        <>\r\n            <Dialog open={active} onClose={setActive} maxWidth=\"xs\" fullWidth>\r\n                <DialogTitle>Изменить параметры скважины</DialogTitle>\r\n                <Form name=\"editwell\" onSubmit={e => onSubmitWell(e)}>\r\n                    <DialogContent>\r\n                        <Form.Group>\r\n                            <Form.Label htmlFor=\"edit_well\">Номер скважины</Form.Label>\r\n                            <Form.Control\r\n                            type=\"text\"\r\n                            id=\"edit_well\"\r\n                            name=\"edit_well\"\r\n                            onChange={e => setWell(e.target.value)}\r\n                            value={well}\r\n                            />\r\n                        </Form.Group>\r\n                        <Form.Group>\r\n                        <Form.Label htmlFor=\"well_type\">Тип скважины</Form.Label>\r\n                        <Form.Control as=\"select\" id=\"well_type\" name=\"well_type\" value={wellType} onChange={e => setWellType(e.target.value)}>\r\n                            <option hidden disabled></option>\r\n                            <option key=\"1\" value=\"Горизонтальная\" style={{fontSize:\"20px\"}}>Горизонтальная</option>\r\n                            <option key=\"2\" value=\"Вертикальная\" style={{fontSize:\"20px\"}}>Вертикальная</option>\r\n                            <option key=\"3\" value=\"Наклонно-направленная\" style={{fontSize:\"20px\"}}>Наклонно-направленная</option>\r\n                            <option key=\"4\" value=\"Боковой наклонно-направленный ствол\" style={{fontSize:\"20px\"}}>Боковой наклонно-направленный ствол</option>\r\n                            <option key=\"5\" value=\"Боковой горизонтальный ствол\" style={{fontSize:\"20px\"}}>Боковой горизонтальный ствол</option>\r\n                            <option key=\"6\" value=\"Многозабойная скважина\" style={{fontSize:\"20px\"}}>Многозабойная скважина</option>\r\n                            <option key=\"7\" value=\"Многоствольная скважина\" style={{fontSize:\"20px\"}}>Многоствольная скважина</option>\r\n                            <option key=\"8\" value=\"Многозабойный боковой горизонтальный ствол\" style={{fontSize:\"20px\"}}>Многозабойный боковой горизонтальный ствол</option>\r\n                        </Form.Control>\r\n                    </Form.Group>\r\n                    </DialogContent>\r\n                <DialogActions>\r\n                    <Button type=\"submit\" onClick={setActive} style={{outline: \"none\"}}>Сохранить</Button>\r\n                </DialogActions>\r\n                </Form>\r\n            </Dialog>   \r\n        </>\r\n    )\r\n}\r\n\r\nexport default EditWellDialog;","import React, {useState, useEffect} from 'react';\r\n\r\nimport {\r\n    Button,\r\n    Dialog, DialogContent, DialogTitle, DialogActions\r\n} from \"@material-ui/core\";\r\n\r\nimport {Form} from 'react-bootstrap';\r\n\r\nfunction EditWellboreDialog({active, setActive, wellbore_id, wellbore_name, pie_well, diametr, onUpdate}) {\r\n    const [wellbore, setWellbore] = useState(\"\");\r\n    const [pieWell, setPieWell] = useState(\"\");\r\n    const [diametrEdit, setDiametrEdit] = useState(null);\r\n\r\n    function onSubmitWellbore(e){\r\n        e.preventDefault()\r\n        fetch(process.env.REACT_APP_API+'wellbores/id/'+ wellbore_id + '?format=json',{\r\n            method: 'PUT',\r\n            headers:{\r\n                'Accept':'application/json',\r\n                'Content-Type':'application/json',\r\n                'Authorization': \"Token \" + localStorage.getItem('id_token')\r\n            },\r\n            body: JSON.stringify({\r\n                \"num_wellbore\": wellbore,\r\n                \"pie_well\": pieWell,\r\n                \"diametr\": diametrEdit\r\n            }) \r\n        })\r\n        onUpdate();\r\n    };\r\n\r\n    useEffect(() => {\r\n        setWellbore(wellbore_name);\r\n    }, [wellbore_name])\r\n\r\n    useEffect(() => {\r\n        setPieWell(pie_well);\r\n    }, [pie_well])\r\n\r\n    useEffect(() => {\r\n        setDiametrEdit(diametr);\r\n    }, [diametr])\r\n\r\n    return (\r\n        <>\r\n            <Dialog open={active} onClose={setActive} maxWidth=\"xs\" fullWidth>\r\n                <DialogTitle>Изменить параметры ствола</DialogTitle>\r\n                <Form name=\"editwellbore\" onSubmit={e => onSubmitWellbore(e)}>\r\n                    <DialogContent>\r\n                        <Form.Group>\r\n                        <Form.Label htmlFor=\"edit_wellbore\">Номер ствола</Form.Label>\r\n                            <Form.Control\r\n                            type=\"text\"\r\n                            id=\"edit_wellbore\"\r\n                            name=\"edit_wellbore\"\r\n                            onChange={e => setWellbore(e.target.value)}\r\n                            value={wellbore}\r\n                            />\r\n                        </Form.Group>\r\n                        <Form.Group>\r\n                        <Form.Label htmlFor=\"pie_well\">Участок ствола скважины</Form.Label>\r\n                        <Form.Control as=\"select\" id=\"pie_well\" name=\"pie_well\" value={pieWell} onChange={e => setPieWell(e.target.value)}>\r\n                            <option hidden disabled></option>\r\n                            <option key=\"0\" value=\"Горизонтальный\" style={{fontSize:\"20px\"}}>Горизонтальный</option>\r\n                            <option key=\"1\" value=\"Транспортный\" style={{fontSize:\"20px\"}}>Транспортный</option>\r\n                            <option key=\"2\" value=\"Пилотный\" style={{fontSize:\"20px\"}}>Пилотный</option>\r\n                        </Form.Control>\r\n                    </Form.Group>\r\n                    <Form.Group>\r\n                        <Form.Label htmlFor=\"diametr\">Диаметр</Form.Label>\r\n                            <Form.Control\r\n                            type=\"number\"\r\n                            id=\"diametr\"\r\n                            name=\"diametr\"\r\n                            onChange={e => setDiametrEdit(e.target.value)}\r\n                            value={diametrEdit}\r\n                            />\r\n                        </Form.Group>\r\n                    </DialogContent>\r\n                <DialogActions>\r\n                    <Button type=\"submit\" onClick={setActive} style={{outline: \"none\"}}>Сохранить</Button>\r\n                </DialogActions>\r\n                </Form>\r\n            </Dialog>   \r\n        </>\r\n    )\r\n}\r\n\r\nexport default EditWellboreDialog;","import React from 'react';\r\n\r\nimport {Toast} from 'react-bootstrap';\r\n\r\nfunction WarningToast({active, setActive}) {\r\n    return (\r\n        <>\r\n            <Toast style={{display: \"block\", minWidth: \"500px\", minHeight: \"100px\", zIndex:\"9999\", position: 'absolute', top: \"20px\", right: \"calc(50vw - 250px)\"}} onClose={setActive} show={active} delay={5000} autohide>\r\n                <Toast.Header style={{fontSize: \"18px\"}}>\r\n                    <strong className=\"mr-auto\" style={{color: \"#f6d106\"}}>Предупреждение</strong>\r\n                    <small>сейчас</small>\r\n                </Toast.Header>\r\n                <Toast.Body style={{fontSize: \"16px\"}}>Элемент с таким номером уже создан!</Toast.Body>\r\n            </Toast>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default WarningToast;","import React, {useState, useEffect} from 'react';\r\n\r\nimport PageTitle from \"../../components/PageTitle\";\r\nimport CustomToolbarSelect from '../../components/Toolbar/CustomToolbarSelect';\r\nimport EditClusterDialog from '../../components/Dialogs/EditClusterDialog';\r\nimport EditWellDialog from '../../components/Dialogs/EditWellDialog';\r\nimport EditWellboreDialog from '../../components/Dialogs/EditWellboreDialog';\r\n\r\nimport WarningToast from '../../components/Toasts/WarningToast';\r\n\r\nimport MUIDataTable from \"mui-datatables\";\r\n\r\nimport {Form, Row, Col} from 'react-bootstrap';\r\nimport {\r\n    Grid,\r\n    IconButton,\r\n    TextField,\r\n    Box,\r\n    Typography,\r\n    Select, MenuItem, FormControl,\r\n    InputLabel\r\n} from \"@material-ui/core\";\r\nimport {\r\n    AddCircleOutline as PlusIcon,\r\n    Check as CheckIcon\r\n  } from \"@material-ui/icons\";\r\n\r\nfunction Database() {\r\n    const constant = false;\r\n    const [customersData, setCustomersData] = useState([]);\r\n    const [fieldsData, setFieldsData] = useState([]);\r\n    const [clustersData, setClustersData] = useState([]);\r\n    const [wellsData, setWellsData] = useState([]);\r\n    const [wellboresData, setWellboresData] = useState([]);\r\n    const [customer, setCustomer] = useState(\"\");\r\n    var customerId = null;\r\n    const [field, setField] = useState(\"\");\r\n    const [fieldId, setFieldId] = useState(null);\r\n    const [cluster, setCluster] = useState(\"\");\r\n    const [clusterId, setClusterId] = useState(null);\r\n    const [well, setWell] = useState(\"\");\r\n    const [well_type, setWell_type] = useState(\"\");\r\n    const [wellId, setWellId] = useState(null);\r\n    const [wellbore, setWellbore] = useState(\"\");\r\n    const [pie_well, setPie_well] = useState(\"\");\r\n    const [diametr, setDiametr] = useState(\"\");\r\n    const [wellboreId, setWellboreId] = useState(null);\r\n\r\n    const [selectedCluster, setSelectedCluster] = useState(null);\r\n    const [selectedClusterName, setSelectedClusterName] = useState(\"\");\r\n    const [selectedWell, setSelectedWell] = useState(null);\r\n\r\n    const [selectedRowsCluster, setSelectedRowsCluster] = useState([]);\r\n    const [selectedRowsWell, setSelectedRowsWell] = useState([]);\r\n    const [selectedRowsWellbore, setSelectedRowsWellbore] = useState([]);\r\n\r\n    const [showInputCluster, setShowInputCluster] = useState(false);\r\n    const [showInputWell, setShowInputWell] = useState(false);\r\n    const [showInputWellbore, setShowInputWellbore] = useState(false);\r\n\r\n    const [refreshCluster, setRefreshCluster] = useState(false);\r\n    const [refreshWell, setRefreshWell] = useState(false);\r\n    const [refreshWellbore, setRefreshWellbore] = useState(false);\r\n\r\n    const [showModalCluster, setShowModalCluster] = useState(false);\r\n    const [showModalWell, setShowModalWell] = useState(false);\r\n    const [showModalWellbore, setShowModalWellbore] = useState(false);\r\n\r\n    const [showWarning, setShowWarning] = useState(false);\r\n\r\n    const role = localStorage.getItem('role');\r\n\r\n    const getCustomers = () => {\r\n        fetch(process.env.REACT_APP_API+'customers/?format=json', { headers : { \r\n            'Content-Type': 'application/json',\r\n            'Accept': 'application/json',\r\n            'Authorization': \"Token \" + localStorage.getItem('id_token')\r\n           }\r\n        }) \r\n        .then(response=>response.json())\r\n        .then(data=>{\r\n            setCustomersData(data);\r\n        })\r\n    }\r\n\r\n    const getFields = (customer_id) => {\r\n        fetch(process.env.REACT_APP_API+'fields/'+ customer_id +'?format=json', { headers : { \r\n            'Content-Type': 'application/json',\r\n            'Accept': 'application/json',\r\n            'Authorization': \"Token \" + localStorage.getItem('id_token')\r\n           }\r\n        }) \r\n        .then(response=>response.json())\r\n        .then(data=>{\r\n            setFieldsData(data);\r\n        })\r\n    }\r\n\r\n    const getClusters = (field_id) => {\r\n        fetch(process.env.REACT_APP_API+'clusters/'+ field_id +'?format=json', { headers : { \r\n            'Content-Type': 'application/json',\r\n            'Accept': 'application/json',\r\n            'Authorization': \"Token \" + localStorage.getItem('id_token')\r\n           }\r\n        }) \r\n        .then(response=>response.json())\r\n        .then(data=>{\r\n            setClustersData(data);\r\n        })\r\n    }\r\n\r\n    const getWells = (cluster_id) => {\r\n        fetch(process.env.REACT_APP_API+'wells/'+ cluster_id +'?format=json', { headers : { \r\n            'Content-Type': 'application/json',\r\n            'Accept': 'application/json',\r\n            'Authorization': \"Token \" + localStorage.getItem('id_token')\r\n           }\r\n        }) \r\n        .then(response=>response.json())\r\n        .then(data=>{\r\n            setWellsData(data);\r\n        })\r\n    }\r\n\r\n    const getWellbores = (well_id) => {\r\n        fetch(process.env.REACT_APP_API+'wellbores/'+ well_id +'?format=json', { headers : { \r\n            'Content-Type': 'application/json',\r\n            'Accept': 'application/json',\r\n            'Authorization': \"Token \" + localStorage.getItem('id_token')\r\n           }\r\n        }) \r\n        .then(response=>response.json())\r\n        .then(data=>{\r\n            setWellboresData(data);\r\n        })\r\n    }\r\n\r\n    const saveCluster = (field_id) => {\r\n        fetch(process.env.REACT_APP_API+'clusters/' + field_id + '?format=json',{\r\n            method: 'POST',\r\n            headers:{\r\n                'Accept':'application/json',\r\n                'Content-Type':'application/json',\r\n                'Authorization': \"Token \" + localStorage.getItem('id_token')\r\n            },\r\n            body: JSON.stringify({\r\n                \"name\": cluster\r\n            }) \r\n        })\r\n        setCluster(\"\")\r\n    };\r\n\r\n    const saveWell = (cluster_id) => {\r\n        fetch(process.env.REACT_APP_API+'wells/' + cluster_id + '?format=json',{\r\n            method: 'POST',\r\n            headers:{\r\n                'Accept':'application/json',\r\n                'Content-Type':'application/json',\r\n                'Authorization': \"Token \" + localStorage.getItem('id_token')\r\n            },\r\n            body: JSON.stringify({\r\n                \"num_well\": well,\r\n                \"num_pad\": clustersData.find(item => item.id === selectedCluster).name,\r\n                \"well_type\": well_type\r\n            }) \r\n        })\r\n        setWell(\"\")\r\n        setWell_type(\"\")\r\n    };\r\n\r\n    const saveWellbore = (well_id) => {\r\n        fetch(process.env.REACT_APP_API+'wellbores/' + well_id + '?format=json',{\r\n            method: 'POST',\r\n            headers:{\r\n                'Accept':'application/json',\r\n                'Content-Type':'application/json',\r\n                'Authorization': \"Token \" + localStorage.getItem('id_token')\r\n            },\r\n            body: JSON.stringify({\r\n                \"num_wellbore\": wellbore,\r\n                \"pie_well\": pie_well,\r\n                \"diametr\": diametr\r\n            }) \r\n        })\r\n        console.log(JSON.stringify({\r\n            \"num_wellbore\": wellbore,\r\n            \"pie_well\": pie_well,\r\n            \"diametr\": diametr\r\n        }))\r\n        setWellbore(\"\")\r\n        setPie_well(\"\")\r\n        setDiametr(\"\")\r\n    };\r\n\r\n    const deleteCluster = (cluster_id) => {\r\n        fetch(process.env.REACT_APP_API+'clusters/id/'+ cluster_id +'?format=json', { method: 'DELETE', headers: {'Authorization': \"Token \" + localStorage.getItem('id_token')} })\r\n    }\r\n    const deleteWell = (well_id) => {\r\n        fetch(process.env.REACT_APP_API+'wells/id/'+ well_id +'?format=json', { method: 'DELETE', headers: {'Authorization': \"Token \" + localStorage.getItem('id_token')} })\r\n    }\r\n    const deleteWellbore = (wellbore_id) => {\r\n        fetch(process.env.REACT_APP_API+'wellbores/id/'+ wellbore_id +'?format=json', { method: 'DELETE', headers: {'Authorization': \"Token \" + localStorage.getItem('id_token')} })\r\n    }\r\n\r\n    const autoWellbore = (pie_well) => {\r\n        var data = wellboresData.filter(item => item.pie_well === pie_well)\r\n        if (data.length === 0)\r\n            return Number(1)\r\n        else\r\n            return Math.max.apply(Math, data.map(function(o) { return Number(o.num_wellbore) + 1; }))\r\n    }\r\n\r\n    const updateCustomer = (e) => {\r\n        setCustomer(e.target.value)\r\n        customerId = customersData.find(item => item.name === e.target.value).id\r\n        setField(\"\")\r\n        setClustersData([])\r\n        setWellsData([]);\r\n        setSelectedCluster(null);\r\n        setWellboresData([]);\r\n        setSelectedWell(null);\r\n        getFields(customerId)\r\n    }\r\n\r\n    const updateField = (e) => {\r\n        setField(e.target.value)\r\n        setFieldId(fieldsData.find(item => item.name === e.target.value).id);\r\n        getClusters(fieldsData.find(item => item.name === e.target.value).id);\r\n        setWellsData([]);\r\n        setWellboresData([]);\r\n        setSelectedCluster(null);\r\n        setSelectedWell(null);\r\n    }\r\n\r\n    const updateCluster = () => {\r\n        if (clustersData.find(item => item.name === cluster) === undefined) {\r\n            saveCluster(fieldsData.find(item => item.name === field).id)\r\n            setRefreshCluster(!refreshCluster)\r\n            setShowInputCluster(false)\r\n        } else handleWarning()\r\n    }\r\n\r\n    const updateWell = () => {\r\n        if (wellsData.find(item => item.num_well === well && item.well_type === well_type) === undefined) {\r\n            saveWell(selectedCluster)\r\n            setRefreshWell(!refreshWell)\r\n            setShowInputWell(false)\r\n        } else handleWarning()\r\n    }\r\n\r\n    const updateWellbore = () => {\r\n        if (wellboresData.find(item => item.num_wellbore === wellbore && item.pie_well === pie_well) === undefined) {\r\n            saveWellbore(selectedWell)\r\n            setRefreshWellbore(!refreshWellbore)\r\n            setShowInputWellbore(false)\r\n        } else handleWarning()\r\n    }\r\n\r\n    const changeNameCluster = () => {\r\n        setClusterId(clustersData[selectedRowsCluster[0]].id);\r\n        handleModalCluster();\r\n    }\r\n\r\n    const changeNameWell = () => {\r\n        setWellId(wellsData[selectedRowsWell[0]].id);\r\n        handleModalWell();\r\n    }\r\n\r\n    const changeNameWellbore = () => {\r\n        setWellboreId(wellboresData[selectedRowsWellbore[0]].id);\r\n        handleModalWellbore();\r\n    }\r\n\r\n    const rowsDeleteCluster = () => {\r\n        if (window.confirm('Вы точно хотите удалить куст '+ clustersData[selectedRowsCluster[0]].name +'?')){\r\n          deleteCluster(clustersData[selectedRowsCluster[0]].id);\r\n          clustersData.splice(selectedRowsCluster[0], 1);\r\n          setSelectedRowsCluster([]);\r\n        }\r\n    }\r\n\r\n    const rowsDeleteWell = () => {\r\n        if (window.confirm('Вы точно хотите удалить скважину '+ wellsData[selectedRowsWell[0]].num_well +'?')){\r\n          deleteWell(wellsData[selectedRowsWell[0]].id);\r\n          wellsData.splice(selectedRowsWell[0], 1);\r\n          setSelectedRowsWell([]);\r\n        }\r\n    }\r\n\r\n    const rowsDeleteWellbore = () => {\r\n        if (window.confirm('Вы точно хотите удалить ствол '+ wellboresData[selectedRowsWellbore[0]].num_wellbore +'?')){\r\n          deleteWellbore(wellboresData[selectedRowsWellbore[0]].id);\r\n          wellboresData.splice(selectedRowsWellbore[0], 1);\r\n          setSelectedRowsWellbore([]);\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        getCustomers();\r\n    }, [constant])\r\n\r\n    //опять ебучие костыли как же я их ненавижу, но что делать\r\n    useEffect(() => { \r\n        fieldsData.length !== 0 && getClusters(fieldId);\r\n    }, [refreshCluster])\r\n\r\n    useEffect(() => { \r\n        clustersData.length !== 0 && getWells(selectedCluster);\r\n    }, [refreshWell])\r\n    \r\n    useEffect(() => { \r\n        wellsData.length !== 0 && getWellbores(selectedWell);\r\n    }, [refreshWellbore])\r\n\r\n    const onUpdateCluster = () => {\r\n        setRefreshCluster(!refreshCluster);\r\n        setSelectedRowsCluster([]);\r\n\r\n    }\r\n    const onUpdateWell = () => {\r\n        setRefreshWell(!refreshWell);\r\n        setSelectedRowsWell([]);\r\n    }\r\n    const onUpdateWellbore = () => {\r\n        setRefreshWellbore(!refreshWellbore);\r\n        setSelectedRowsWellbore([]);\r\n    }\r\n\r\n    const onUpdatePieWell = (e) => {\r\n        setPie_well(e.target.value)\r\n        setWellbore(autoWellbore(e.target.value))\r\n    }\r\n\r\n    const handleModalCluster = () => {\r\n        setShowModalCluster(!showModalCluster);\r\n    }\r\n    const handleModalWell = () => {\r\n        setShowModalWell(!showModalWell);\r\n    }\r\n    const handleModalWellbore = () => {\r\n        setShowModalWellbore(!showModalWellbore);\r\n    }\r\n    const handleWarning = () => {\r\n        setShowWarning(!showWarning);\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <EditClusterDialog active={showModalCluster} setActive={handleModalCluster} cluster_id={clusterId} field_id={fieldId} onUpdate={onUpdateCluster} cluster_name={clustersData[selectedRowsCluster[0]] !== undefined ? clustersData[selectedRowsCluster[0]].name : \"\"}/> \r\n            <EditWellDialog active={showModalWell} setActive={handleModalWell} well_id={wellId} num_pad={selectedClusterName} onUpdate={onUpdateWell} well_type={wellsData[selectedRowsWell[0]] !== undefined ? wellsData[selectedRowsWell[0]].well_type : \"\"} well_name={wellsData[selectedRowsWell[0]] !== undefined ? wellsData[selectedRowsWell[0]].num_well : \"\"}/> \r\n            <EditWellboreDialog active={showModalWellbore} setActive={handleModalWellbore} wellbore_id={wellboreId} onUpdate={onUpdateWellbore} diametr={wellboresData[selectedRowsWellbore[0]] !== undefined ? wellboresData[selectedRowsWellbore[0]].diametr : \"\"} pie_well={wellboresData[selectedRowsWellbore[0]] !== undefined ? wellboresData[selectedRowsWellbore[0]].pie_well : \"\"} wellbore_name={wellboresData[selectedRowsWellbore[0]] !== undefined ? wellboresData[selectedRowsWellbore[0]].num_wellbore : \"\"}/> \r\n            <WarningToast active={showWarning} setActive={handleWarning}/>\r\n            <PageTitle title=\"База данных скважин\"/>\r\n            <Grid container spacing={4}>\r\n                <Grid item xs={12}>\r\n                    <Form.Group as={Row} style={{paddingBottom:\"0.5rem\"}}>\r\n                        <Col xs=\"3\">\r\n                            <FormControl fullWidth variant=\"standard\">\r\n                                <InputLabel id=\"customer\">Общество</InputLabel>\r\n                                    <Select labelId=\"customer\" name=\"customer\" label=\"Общество\" size=\"small\" value={customer} onChange={e => updateCustomer(e)}>\r\n                                        <MenuItem hidden disabled></MenuItem>\r\n                                        {customersData.map(item => (<MenuItem key={item.name} value={item.name} style={{fontSize:\"20px\"}}>{item.name}</MenuItem>))}\r\n                                    </Select>\r\n                            </FormControl>\r\n                        </Col>\r\n                        <Col xs=\"3\">\r\n                            <FormControl fullWidth variant=\"standard\">\r\n                                <InputLabel id=\"field\">Месторождение</InputLabel>\r\n                                    <Select labelId=\"field\" name=\"field\" label=\"Месторождение\" size=\"small\" value={field} onChange={e => updateField(e)}>\r\n                                        <MenuItem hidden disabled></MenuItem>\r\n                                        {fieldsData.map(item => (<MenuItem key={item.name} value={item.name} style={{fontSize:\"20px\"}}>{item.name}</MenuItem>))}\r\n                                    </Select>\r\n                            </FormControl>\r\n                        </Col>\r\n                        <Col xs=\"6\"></Col>\r\n                    </Form.Group>\r\n                </Grid>\r\n                <Grid item xs={4}>\r\n                    <MUIDataTable\r\n                        title={<Typography variant=\"h6\">\r\n                        Кусты\r\n                        {<><IconButton aria-label=\"add_cluster\" onClick={() => setShowInputCluster(true)} style={{outline:'none', visibility:((role === \"user\" || role === \"superuser\") && field !== \"\" ? 'visible' : 'hidden')}}>\r\n                            <PlusIcon />\r\n                        </IconButton>\r\n                        <Box sx={{ display: 'inline-block', visibility:(showInputCluster ? 'visible' : 'hidden')}}>\r\n                            <TextField id=\"input-cluster\" variant=\"standard\" label=\"Номер\" value={cluster} style = {{verticalAlign:\"middle\"}} onChange={e => setCluster(e.target.value)}/>\r\n                            <IconButton aria-label=\"save_cluster\" onClick={() => updateCluster()} style={{outline:'none'}}>\r\n                                <CheckIcon sx={{ color: 'action.active', mr: 1, my: 0.5 }} />\r\n                            </IconButton>\r\n                        </Box>\r\n                        </>\r\n                        }\r\n                        </Typography>}\r\n                        data={clustersData.map(item => [item.name])}\r\n                        columns={[\"Номер куста\"]}\r\n                        options={{\r\n                            viewColumns: false,\r\n                            filter: false,\r\n                            print: false,\r\n                            download: false,\r\n                            pagination: false,\r\n                            rowsPerPage: 1000000,\r\n                            textLabels: {\r\n                                body: {\r\n                                  noMatch: \"Записей не найдено.\",\r\n                                  toolTip: \"Сортировать\"\r\n                                },\r\n                                toolbar: {\r\n                                  search: \"Поиск\"\r\n                                },\r\n                                selectedRows: {\r\n                                  text: \"строка выбрана\"\r\n                                },\r\n                              },\r\n                            setRowProps: (row, index) => ({ style: {cursor: 'pointer' } }),\r\n                            rowsSelected: selectedRowsCluster,\r\n                            onRowSelectionChange: (rowsSelectedData, allRows, rowsSelected) => {\r\n                                setSelectedRowsCluster(rowsSelected);\r\n                                if (rowsSelected.length !== 0) {\r\n                                    getWells(clustersData[rowsSelected[0]].id);\r\n                                    setSelectedCluster(clustersData[rowsSelected[0]].id);\r\n                                    setSelectedClusterName(clustersData[rowsSelected[0]].name);\r\n                                } else {\r\n                                    setWellsData([])\r\n                                    setSelectedCluster(null)\r\n                                }\r\n                                setWellboresData([]);\r\n                                setSelectedRowsWell([]);\r\n                                setSelectedRowsWellbore([]);\r\n                                setSelectedWell(null);\r\n                                setShowInputWell(false);\r\n                                setShowInputWellbore(false);\r\n                            },\r\n                            selectableRows: (role === \"user\" || role === \"superuser\" ? 'single' : 'none'),\r\n                            customToolbarSelect: (selectedRows, displayData, setSelectedRows) => (\r\n                                <CustomToolbarSelect selectedRows={selectedRows} displayData={displayData} setSelectedRows={setSelectedRows} onChangeName={changeNameCluster} onRowsDelete={rowsDeleteCluster}/>\r\n                            ),\r\n                            onRowClick: (rowData, rowMeta) => {\r\n                                if (selectedRowsCluster[0] !== rowMeta.dataIndex){\r\n                                    getWells(clustersData[rowMeta.dataIndex].id);\r\n                                    setSelectedRowsCluster([rowMeta.dataIndex]);\r\n                                    setSelectedCluster(clustersData[rowMeta.dataIndex].id);\r\n                                    setSelectedClusterName(clustersData[rowMeta.dataIndex].name);\r\n                                } else {\r\n                                    setSelectedRowsCluster([])\r\n                                    setSelectedCluster(null)\r\n                                    setSelectedClusterName(\"\")\r\n                                    setWellsData([])\r\n                                }\r\n                                setWellboresData([]);\r\n                                setSelectedRowsWell([]);\r\n                                setSelectedRowsWellbore([]);\r\n                                setSelectedWell(null);\r\n                                setShowInputWell(false);\r\n                                setShowInputWellbore(false);\r\n                            }\r\n                        }}\r\n                    />\r\n                </Grid>\r\n                <Grid item xs={4}>\r\n                    <MUIDataTable\r\n                        title={<Typography variant=\"h6\">\r\n                        Скважины\r\n                        {<><IconButton aria-label=\"add_well\" onClick={() => setShowInputWell(true)} style={{outline: 'none', visibility:((role === \"user\" || role === \"superuser\") && selectedCluster !== null ? 'visible' : 'hidden')}}>\r\n                            <PlusIcon />\r\n                        </IconButton>\r\n                        <Box sx={{ display: showInputWell ? 'inline-block' : 'none'}}>\r\n                            <TextField id=\"input-well\" variant=\"standard\" label=\"Номер\" value={well} style = {{verticalAlign:\"middle\", marginRight:\"1rem\", width: \"5rem\"}} onChange={e => setWell(e.target.value)}/>\r\n                            <FormControl variant=\"standard\" style={{verticalAlign:\"middle\", width:\"17rem\"}}>\r\n                                <InputLabel id=\"well_type\">Тип скважины</InputLabel>\r\n                                    <Select labelId=\"well_type\" name=\"well_type\" label=\"Тип скважины\" value={well_type} onChange={e => setWell_type(e.target.value)}>\r\n                                        <MenuItem key=\"1\" value=\"Вертикальная\" style={{fontSize:\"20px\"}}>Вертикальная</MenuItem>\r\n                                        <MenuItem key=\"2\" value=\"Горизонтальная\" style={{fontSize:\"20px\"}}>Горизонтальная</MenuItem>\r\n                                        <MenuItem key=\"3\" value=\"Многозабойная\" style={{fontSize:\"20px\"}}>Многозабойная</MenuItem>\r\n                                        <MenuItem key=\"4\" value=\"Многоствольная\" style={{fontSize:\"20px\"}}>Многоствольная</MenuItem>\r\n                                        <MenuItem key=\"5\" value=\"Наклонно-направленная\" style={{fontSize:\"20px\"}}>Наклонно-направленная</MenuItem>\r\n                                    </Select>\r\n                            </FormControl>\r\n                            <IconButton aria-label=\"save_well\" onClick={() => updateWell()} style={{outline:'none'}}>\r\n                                <CheckIcon sx={{ color: 'action.active', mr: 1, my: 0.5 }} />\r\n                            </IconButton>\r\n                        </Box>\r\n                        </>}\r\n                        </Typography>}\r\n                        data={wellsData.map(item => [item.num_well, item.well_type])}\r\n                        columns={[\"Номер скважины\", \"Тип скважины\"]}\r\n                        options={{\r\n                            viewColumns: false,\r\n                            setRowProps: (row, index) => ({ style: { cursor: 'pointer' } }),\r\n                            print: false,\r\n                            filter: false,\r\n                            download: false,\r\n                            pagination: false,\r\n                            rowsPerPage: 1000000,\r\n                            textLabels: {\r\n                                body: {\r\n                                  noMatch: \"Записей не найдено.\",\r\n                                  toolTip: \"Сортировать\"\r\n                                },\r\n                                toolbar: {\r\n                                  search: \"Поиск\"\r\n                                },\r\n                                selectedRows: {\r\n                                  text: \"строка выбрана\"\r\n                                },\r\n                              },\r\n                            selectableRows: (role === \"user\" || role === \"superuser\" ? 'single' : 'none'),\r\n                            rowsSelected: selectedRowsWell,\r\n                            onRowSelectionChange: (rowsSelectedData, allRows, rowsSelected) => {\r\n                                setSelectedRowsWell(rowsSelected);\r\n                                if (rowsSelected.length !== 0) {\r\n                                    getWellbores(wellsData[rowsSelected[0]].id);\r\n                                    setSelectedWell(wellsData[rowsSelected[0]].id);\r\n                                } else {\r\n                                    setWellboresData([])\r\n                                    setSelectedWell(null)\r\n                                }\r\n                                setSelectedRowsWellbore([]);\r\n                                setShowInputWellbore(false);\r\n                            },\r\n                            customToolbarSelect: (selectedRows, displayData, setSelectedRows) => (\r\n                                <CustomToolbarSelect selectedRows={selectedRows} displayData={displayData} setSelectedRows={setSelectedRows} onChangeName={changeNameWell} onRowsDelete={rowsDeleteWell}/>\r\n                            ),\r\n                            onRowClick: (rowData, rowMeta) => {\r\n                                if (selectedRowsWell[0] !== rowMeta.dataIndex){\r\n                                    getWellbores(wellsData[rowMeta.dataIndex].id);\r\n                                    setSelectedRowsWell([rowMeta.dataIndex]);\r\n                                    setSelectedWell(wellsData[rowMeta.dataIndex].id);\r\n                                }\r\n                                else {\r\n                                    setSelectedRowsWell([])\r\n                                    setSelectedWell(null)\r\n                                    setWellboresData([])\r\n                                }\r\n                                setSelectedRowsWellbore([]);\r\n                                setShowInputWellbore(false);\r\n                             }\r\n                        }}\r\n                    />\r\n                </Grid>\r\n                <Grid item xs={4}>\r\n                    <MUIDataTable\r\n                        title={<Typography variant=\"h6\">\r\n                        Стволы\r\n                        {<><IconButton aria-label=\"add_wellbore\" onClick={() => setShowInputWellbore(true)} style={{outline: 'none', visibility:((role === \"user\" || role === \"superuser\") && selectedWell !== null ? 'visible' : 'hidden')}}>\r\n                            <PlusIcon />\r\n                        </IconButton>\r\n                        <Box sx={{ display: showInputWellbore ? 'inline-block' : 'none'}}>\r\n                            <FormControl variant=\"standard\" style={{width:\"10rem\", verticalAlign:\"middle\", marginRight:\"1rem\"}}>\r\n                                <InputLabel id=\"pie_well\">Участок ствола</InputLabel>\r\n                                    <Select labelId=\"pie_well\" name=\"pie_well\" label=\"Участок ствола скважины\" value={pie_well} onChange={e => onUpdatePieWell(e)}>\r\n                                        <MenuItem key=\"1\" value=\"Боковой\" style={{fontSize:\"20px\"}}>Боковой</MenuItem>\r\n                                        <MenuItem key=\"2\" value=\"Пилотный\" style={{fontSize:\"20px\"}}>Пилотный</MenuItem>\r\n                                        <MenuItem key=\"3\" value=\"Транспортный\" style={{fontSize:\"20px\"}}>Транспортный</MenuItem>\r\n                                        <MenuItem key=\"4\" value=\"Горизонтальный\" style={{fontSize:\"20px\"}}>Горизонтальный</MenuItem>\r\n                                    </Select>\r\n                            </FormControl>\r\n                            <TextField id=\"input-wellbore\" variant=\"standard\" label=\"Номер\" value={wellbore} style = {{verticalAlign:\"middle\", marginRight:\"1rem\", width: \"5rem\"}} onChange={e => setWellbore(e.target.value)}/>\r\n                            <TextField id=\"input-diametr\" variant=\"standard\" label=\"Диаметр\" type=\"number\" value={diametr} style = {{verticalAlign:\"middle\", width: \"5rem\"}} onChange={e => setDiametr(e.target.value)}/>\r\n                            <IconButton aria-label=\"save_wellbore\" onClick={() => updateWellbore()} style={{outline:'none'}}>\r\n                                <CheckIcon sx={{ color: 'action.active', mr: 1, my: 0.5 }} />\r\n                            </IconButton>\r\n                        </Box>\r\n                        </>}\r\n                        </Typography>}\r\n                        data={wellboresData.map(item => [item.num_wellbore, item.pie_well, item.diametr])}\r\n                        columns={[\"Номер ствола\", \"Участок ствола скважины\", \"Диаметр\"]}\r\n                        options={{\r\n                            viewColumns: false,\r\n                            setRowProps: value => ({ style: { cursor: 'pointer' } }),\r\n                            print: false,\r\n                            filter: false,\r\n                            download: false,\r\n                            pagination: false,\r\n                            rowsPerPage: 1000000,\r\n                            textLabels: {\r\n                                body: {\r\n                                  noMatch: \"Записей не найдено.\",\r\n                                  toolTip: \"Сортировать\"\r\n                                },\r\n                                toolbar: {\r\n                                  search: \"Поиск\"\r\n                                },\r\n                                selectedRows: {\r\n                                  text: \"строка выбрана\"\r\n                                },\r\n                              },\r\n                            selectableRows: (role === \"user\" || role === \"superuser\" ? 'single' : 'none'),\r\n                            rowsSelected: selectedRowsWellbore,\r\n                            onRowSelectionChange: (rowsSelectedData, allRows, rowsSelected) => {\r\n                                setSelectedRowsWellbore(rowsSelected);\r\n                            },\r\n                            onRowClick: (rowData, rowMeta) => {\r\n                                selectedRowsWellbore[0] !== rowMeta.dataIndex ? setSelectedRowsWellbore([rowMeta.dataIndex]) : setSelectedRowsWellbore([])\r\n                            },\r\n                            customToolbarSelect: (selectedRows, displayData, setSelectedRows) => (\r\n                                <CustomToolbarSelect selectedRows={selectedRows} displayData={displayData} setSelectedRows={setSelectedRows} onChangeName={changeNameWellbore} onRowsDelete={rowsDeleteWellbore}/>\r\n                            ),\r\n                        }}\r\n                    />\r\n                </Grid>\r\n            </Grid>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Database;\r\n","import React from \"react\";\r\nimport {\r\n  Route,\r\n  Switch,\r\n  withRouter,\r\n} from \"react-router-dom\";\r\nimport classnames from \"classnames\";\r\n\r\n//icons\r\n\r\n// styles\r\nimport useStyles from \"./styles\";\r\n\r\n// components\r\nimport Header from \"../Header\";\r\nimport Sidebar from \"../Sidebar\";\r\n\r\n// pages\r\nimport Dashboard from \"../../pages/dashboard\";\r\nimport Tables from \"../../pages/tables\";\r\nimport Customers from \"../../pages/customers/Customers\";\r\nimport Reports from \"../../pages/reports/Reports\";\r\nimport Report from \"../../pages/reports/Report\";\r\nimport Services from \"../../pages/services/Services\";\r\nimport Service from \"../../pages/services/Service\";\r\nimport Checklist from \"../../pages/checklist/Checklist\";\r\nimport Help from \"../../pages/help/Help\";\r\nimport Admin from \"../../pages/admin/Admin\";\r\nimport Strata from \"../../pages/strata/Strata\";\r\nimport Trash from \"../../pages/trash/Trash\";\r\nimport Logs from \"../../pages/logs/Logs\";\r\nimport Database from \"../../pages/database/Database\";\r\n\r\n// context\r\nimport { useLayoutState } from \"../../context/LayoutContext\";\r\n\r\nfunction Layout(props) {\r\n  var classes = useStyles();\r\n\r\n  // global\r\n  var layoutState = useLayoutState();\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n        <>\r\n          <Header history={props.history} />\r\n          <Sidebar />\r\n          <div\r\n            className={classnames(classes.content, {\r\n              [classes.contentShift]: layoutState.isSidebarOpened,\r\n            })}\r\n          >\r\n            <div className={classes.fakeToolbar} />\r\n            <Switch>\r\n              <Route path=\"/app/customers\" component={Customers} />\r\n              <Route path=\"/app/dashboard\" component={Dashboard} />\r\n              <Route path=\"/app/tables\" component={Tables} />\r\n              <Route exact path=\"/app/reports\" component={Reports} />\r\n              <Route path=\"/app/reports/:id\" component={Report} />\r\n              <Route exact path=\"/app/services\" component={Services} />\r\n              <Route path=\"/app/services/:id\" component={Service} />\r\n              <Route path=\"/app/help\" component={Help} />\r\n              <Route path=\"/app/trash\" component={Trash} />\r\n              <Route path=\"/app/database\" component={Database} />\r\n              <Route path=\"/app/logs\" component={Logs} />\r\n              <Route path=\"/app/checklist\" component={Checklist} />\r\n              <Route path=\"/app/admin\" component={Admin} />\r\n              <Route path=\"/app/strata/:id\" component={Strata} />\r\n            </Switch>\r\n          </div>\r\n        </>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default withRouter(Layout);\r\n","import { makeStyles } from \"@material-ui/styles\";\r\n\r\nexport default makeStyles(theme => ({\r\n  container: {\r\n    height: \"100vh\",\r\n    width: \"100vw\",\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    justifyContent: \"center\",\r\n    alignItems: \"center\",\r\n    backgroundColor: theme.palette.primary.main,\r\n    position: \"absolute\",\r\n    top: 0,\r\n    left: 0,\r\n  },\r\n  logotype: {\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    marginBottom: theme.spacing(12),\r\n    [theme.breakpoints.down(\"sm\")]: {\r\n      display: \"none\",\r\n    },\r\n  },\r\n  logotypeText: {\r\n    fontWeight: 500,\r\n    color: \"white\",\r\n    marginLeft: theme.spacing(2),\r\n  },\r\n  logotypeIcon: {\r\n    width: 70,\r\n    marginRight: theme.spacing(2),\r\n  },\r\n  paperRoot: {\r\n    boxShadow: theme.customShadows.widgetDark,\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    alignItems: \"center\",\r\n    paddingTop: theme.spacing(8),\r\n    paddingBottom: theme.spacing(8),\r\n    paddingLeft: theme.spacing(6),\r\n    paddingRight: theme.spacing(6),\r\n    maxWidth: 404,\r\n  },\r\n  textRow: {\r\n    marginBottom: theme.spacing(10),\r\n    textAlign: \"center\",\r\n  },\r\n  errorCode: {\r\n    fontSize: 148,\r\n    fontWeight: 600,\r\n  },\r\n  safetyText: {\r\n    fontWeight: 300,\r\n    color: theme.palette.text.hint,\r\n  },\r\n  backButton: {\r\n    boxShadow: theme.customShadows.widget,\r\n    textTransform: \"none\",\r\n    fontSize: 22,\r\n  },\r\n}));\r\n","export default __webpack_public_path__ + \"static/media/logo.d0e27845.svg\";","import React from \"react\";\r\nimport { Grid, Paper, Typography, Button } from \"@material-ui/core\";\r\nimport { Link } from \"react-router-dom\";\r\nimport classnames from \"classnames\";\r\n\r\n// styles\r\nimport useStyles from \"./styles\";\r\n\r\n// logo\r\nimport logo from \"./logo.svg\";\r\n\r\nexport default function Error() {\r\n  var classes = useStyles();\r\n\r\n  return (\r\n    <Grid container className={classes.container}>\r\n      <div className={classes.logotype}>\r\n        <img className={classes.logotypeIcon} src={logo} alt=\"logo\" />\r\n        <Typography variant=\"h3\" color=\"white\" className={classes.logotypeText}>\r\n          Material Admin\r\n        </Typography>\r\n      </div>\r\n      <Paper classes={{ root: classes.paperRoot }}>\r\n        <Typography\r\n          variant=\"h1\"\r\n          color=\"primary\"\r\n          className={classnames(classes.textRow, classes.errorCode)}\r\n        >\r\n          404\r\n        </Typography>\r\n        <Typography variant=\"h5\" color=\"primary\" className={classes.textRow}>\r\n          Oops. Looks like the page you're looking for no longer exists\r\n        </Typography>\r\n        <Typography\r\n          variant=\"h6\"\r\n          color=\"text\"\r\n          colorBrightness=\"secondary\"\r\n          className={classnames(classes.textRow, classes.safetyText)}\r\n        >\r\n          But we're here to bring you back to safety\r\n        </Typography>\r\n        <Button\r\n          variant=\"contained\"\r\n          color=\"primary\"\r\n          component={Link}\r\n          to=\"/\"\r\n          size=\"large\"\r\n          className={classes.backButton}\r\n        >\r\n          Back to Home\r\n        </Button>\r\n      </Paper>\r\n    </Grid>\r\n  );\r\n}\r\n","import { makeStyles } from \"@material-ui/styles\";\r\n\r\nexport default makeStyles(theme => ({\r\n  container: {\r\n    height: \"100vh\",\r\n    width: \"100vw\",\r\n    display: \"flex\",\r\n    justifyContent: \"center\",\r\n    alignItems: \"center\",\r\n    position: \"absolute\",\r\n    top: 0,\r\n    left: 0,\r\n  },\r\n  logotypeContainer: {\r\n    backgroundColor: theme.palette.primary.main,\r\n    width: \"60%\",\r\n    height: \"100%\",\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    justifyContent: \"center\",\r\n    alignItems: \"center\",\r\n    [theme.breakpoints.down(\"md\")]: {\r\n      width: \"50%\",\r\n    },\r\n    [theme.breakpoints.down(\"md\")]: {\r\n      display: \"none\",\r\n    },\r\n  },\r\n  logotypeImage: {\r\n    width: 165,\r\n    marginBottom: theme.spacing(4),\r\n  },\r\n  logotypeText: {\r\n    color: \"white\",\r\n    fontWeight: 500,\r\n    fontSize: 84,\r\n    [theme.breakpoints.down(\"md\")]: {\r\n      fontSize: 48,\r\n    },\r\n  },\r\n  formContainer: {\r\n    width: \"40%\",\r\n    height: \"100%\",\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    justifyContent: \"center\",\r\n    alignItems: \"center\",\r\n    [theme.breakpoints.down(\"md\")]: {\r\n      width: \"50%\",\r\n    },\r\n  },\r\n  form: {\r\n    width: 320,\r\n  },\r\n  tab: {\r\n    fontWeight: 400,\r\n    fontSize: 18,\r\n  },\r\n  greeting: {\r\n    fontWeight: 500,\r\n    textAlign: \"center\",\r\n    marginTop: theme.spacing(4),\r\n  },\r\n  subGreeting: {\r\n    fontWeight: 500,\r\n    textAlign: \"center\",\r\n    marginTop: theme.spacing(2),\r\n  },\r\n  googleButton: {\r\n    marginTop: theme.spacing(6),\r\n    boxShadow: theme.customShadows.widget,\r\n    backgroundColor: \"white\",\r\n    width: \"100%\",\r\n    textTransform: \"none\",\r\n  },\r\n  googleButtonCreating: {\r\n    marginTop: 0,\r\n  },\r\n  googleIcon: {\r\n    width: 30,\r\n    marginRight: theme.spacing(2),\r\n  },\r\n  creatingButtonContainer: {\r\n    marginTop: theme.spacing(2.5),\r\n    height: 46,\r\n    display: \"flex\",\r\n    justifyContent: \"center\",\r\n    alignItems: \"center\",\r\n  },\r\n  createAccountButton: {\r\n    height: 46,\r\n    textTransform: \"none\",\r\n  },\r\n  formDividerContainer: {\r\n    marginTop: theme.spacing(4),\r\n    marginBottom: theme.spacing(4),\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n  },\r\n  formDividerWord: {\r\n    paddingLeft: theme.spacing(2),\r\n    paddingRight: theme.spacing(2),\r\n  },\r\n  formDivider: {\r\n    flexGrow: 1,\r\n    height: 1,\r\n    backgroundColor: theme.palette.text.hint + \"40\",\r\n  },\r\n  errorMessage: {\r\n    textAlign: \"center\",\r\n  },\r\n  textFieldUnderline: {\r\n    \"&:before\": {\r\n      borderBottomColor: theme.palette.primary.light,\r\n    },\r\n    \"&:after\": {\r\n      borderBottomColor: theme.palette.primary.main,\r\n    },\r\n    \"&:hover:before\": {\r\n      borderBottomColor: `${theme.palette.primary.light} !important`,\r\n    },\r\n  },\r\n  textField: {\r\n    borderBottomColor: theme.palette.background.light,\r\n  },\r\n  formButtons: {\r\n    width: \"100%\",\r\n    marginTop: theme.spacing(4),\r\n    display: \"flex\",\r\n    justifyContent: \"space-between\",\r\n    alignItems: \"center\",\r\n  },\r\n  forgetButton: {\r\n    textTransform: \"none\",\r\n    fontWeight: 400,\r\n  },\r\n  loginLoader: {\r\n    marginLeft: theme.spacing(4),\r\n  },\r\n  copyright: {\r\n    marginTop: theme.spacing(4),\r\n    whiteSpace: \"nowrap\",\r\n    [theme.breakpoints.up(\"md\")]: {\r\n      position: \"absolute\",\r\n      bottom: theme.spacing(2),\r\n    },\r\n  },\r\n}));\r\n","export default __webpack_public_path__ + \"static/media/4_IGIRGI.36833ead.png\";","import React, { useState } from \"react\";\r\nimport {\r\n  Grid,\r\n  CircularProgress,\r\n  Typography,\r\n  Button,\r\n  Tabs,\r\n  Tab,\r\n  TextField,\r\n  Fade,\r\n} from \"@material-ui/core\";\r\nimport { withRouter } from \"react-router-dom\";\r\n\r\n// styles\r\nimport useStyles from \"./styles\";\r\n\r\n// logo\r\nimport logo2 from \"./4_IGIRGI.png\"\r\n// context\r\nimport { useUserDispatch, loginUser } from \"../../context/UserContext\";\r\n\r\nfunction Login(props) {\r\n  var classes = useStyles();\r\n\r\n  // global\r\n  var userDispatch = useUserDispatch();\r\n\r\n  // local\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  var [error, setError] = useState(false);\r\n  const [activeTabId, setActiveTabId] = useState(0);\r\n  const [nameValue, setNameValue] = useState(\"\");\r\n  const [loginValue, setLoginValue] = useState(\"\");\r\n  const [passwordValue, setPasswordValue] = useState(\"\");\r\n\r\n  return (\r\n    <Grid container className={classes.container}>\r\n      <div className={classes.logotypeContainer} style={{backgroundColor:\"#b2b2b2\"}}>\r\n        <img src={logo2} alt=\"logo\" className={classes.logotypeImage} />\r\n        <Typography className={classes.logotypeText}>АО «‎ИГиРГИ»</Typography>\r\n      </div>\r\n      <div className={classes.formContainer} style={{backgroundColor:\"white\"}}>\r\n        <div className={classes.form}>\r\n          <Tabs\r\n            value={activeTabId}\r\n            onChange={(e, id) => setActiveTabId(id)}\r\n            indicatorColor=\"primary\"\r\n            textColor=\"primary\"\r\n            centered\r\n          >\r\n            <Tab label=\"Войти\" classes={{ root: classes.tab }} />\r\n            {/*<Tab label=\"Новый\" classes={{ root: classes.tab }} />*/}\r\n          </Tabs>\r\n          {activeTabId === 0 && (\r\n            <React.Fragment>\r\n              <Typography variant=\"h2\" className={classes.greeting}>\r\n                Введите свой логин и пароль\r\n              </Typography>\r\n              <div className={classes.formDividerContainer}>\r\n                <div className={classes.formDivider} /> \r\n              </div>\r\n              <Fade in={error}>\r\n                <Typography color=\"secondary\" className={classes.errorMessage}>\r\n                  Ошибка в логине или пароле.\r\n                </Typography>\r\n              </Fade>\r\n              <TextField\r\n                id=\"email\"\r\n                InputProps={{\r\n                  classes: {\r\n                    underline: classes.textFieldUnderline,\r\n                    input: classes.textField,\r\n                  },\r\n                }}\r\n                value={loginValue}\r\n                onChange={e => {setLoginValue(e.target.value.toLowerCase()); localStorage.setItem('login', e.target.value.toLowerCase());}}\r\n                margin=\"normal\"\r\n                placeholder=\"Введите логин\"\r\n                type=\"email\"\r\n                fullWidth\r\n              />\r\n              <TextField\r\n                id=\"password\"\r\n                InputProps={{\r\n                  classes: {\r\n                    underline: classes.textFieldUnderline,\r\n                    input: classes.textField,\r\n                  },\r\n                }}\r\n                value={passwordValue}\r\n                onChange={e => setPasswordValue(e.target.value)}\r\n                margin=\"normal\"\r\n                placeholder=\"Введите пароль\"\r\n                type=\"password\"\r\n                fullWidth\r\n              />\r\n              <div className={classes.formButtons}>\r\n                {isLoading ? (\r\n                  <CircularProgress size={26} className={classes.loginLoader} />\r\n                ) : (\r\n                  <Button\r\n                    disabled={\r\n                      loginValue.length === 0 || passwordValue.length === 0\r\n                    }\r\n                    onClick={() =>\r\n                      loginUser(\r\n                        userDispatch,\r\n                        loginValue,\r\n                        passwordValue,\r\n                        props.history,\r\n                        setIsLoading,\r\n                        setError,\r\n                      )\r\n                    }\r\n                    variant=\"contained\"\r\n                    color=\"primary\"\r\n                    size=\"large\"\r\n                  >\r\n                    Войти\r\n                  </Button>\r\n                )}\r\n                {/*<Button\r\n                  color=\"primary\"\r\n                  size=\"large\"\r\n                  className={classes.forgetButton}\r\n                >\r\n                  Забыли пароль\r\n                </Button>*/}\r\n              </div>\r\n            </React.Fragment>\r\n          )}\r\n          {activeTabId === 1 && (\r\n            <React.Fragment>\r\n              <Typography variant=\"h2\" className={classes.subGreeting}>\r\n                Отправьте заявку на создание нового аккаунта\r\n              </Typography>\r\n              <div className={classes.formDividerContainer}>\r\n                <div className={classes.formDivider} /> \r\n              </div>\r\n              <Fade in={error}>\r\n                <Typography color=\"secondary\" className={classes.errorMessage}>\r\n                  Ошибка в логине или пароле.\r\n                </Typography>\r\n              </Fade>\r\n              <TextField\r\n                id=\"name\"\r\n                InputProps={{\r\n                  classes: {\r\n                    underline: classes.textFieldUnderline,\r\n                    input: classes.textField,\r\n                  },\r\n                }}\r\n                value={nameValue}\r\n                onChange={e => setNameValue(e.target.value)}\r\n                margin=\"normal\"\r\n                placeholder=\"Full Name\"\r\n                type=\"text\"\r\n                fullWidth\r\n              />\r\n              <TextField\r\n                id=\"email\"\r\n                InputProps={{\r\n                  classes: {\r\n                    underline: classes.textFieldUnderline,\r\n                    input: classes.textField,\r\n                  },\r\n                }}\r\n                value={loginValue}\r\n                onChange={e => setLoginValue(e.target.value)}\r\n                margin=\"normal\"\r\n                placeholder=\"Email Adress\"\r\n                type=\"email\"\r\n                fullWidth\r\n              />\r\n              <TextField\r\n                id=\"password\"\r\n                InputProps={{\r\n                  classes: {\r\n                    underline: classes.textFieldUnderline,\r\n                    input: classes.textField,\r\n                  },\r\n                }}\r\n                value={passwordValue}\r\n                onChange={e => setPasswordValue(e.target.value)}\r\n                margin=\"normal\"\r\n                placeholder=\"Password\"\r\n                type=\"password\"\r\n                fullWidth\r\n              />\r\n              <div className={classes.creatingButtonContainer}>\r\n                {isLoading ? (\r\n                  <CircularProgress size={26} />\r\n                ) : (\r\n                  <Button\r\n                    onClick={() =>\r\n                      loginUser(\r\n                        userDispatch,\r\n                        loginValue,\r\n                        passwordValue,\r\n                        props.history,\r\n                        setIsLoading,\r\n                        setError,\r\n                        error\r\n                      )\r\n                    }\r\n                    disabled={\r\n                      loginValue.length === 0 ||\r\n                      passwordValue.length === 0 ||\r\n                      nameValue.length === 0\r\n                    }\r\n                    size=\"large\"\r\n                    variant=\"contained\"\r\n                    color=\"primary\"\r\n                    fullWidth\r\n                    className={classes.createAccountButton}\r\n                  >\r\n                    Отправить заявку\r\n                  </Button>\r\n                )}\r\n              </div>\r\n            </React.Fragment>\r\n                  )}\r\n        </div>\r\n        <Typography color=\"primary\" className={classes.copyright}>\r\n        © {new Date().getFullYear()} <a style={{ textDecoration: 'none', color: 'inherit' }}>АО «‎ИГиРГИ»</a>. Все права защищены.\r\n        </Typography>\r\n      </div>\r\n    </Grid>\r\n  );\r\n}\r\n\r\nexport default withRouter(Login);\r\n","import React from \"react\";\r\nimport { BrowserRouter as Router, Route, Switch, Redirect } from \"react-router-dom\";\r\n// components\r\nimport Layout from \"./Layout\";\r\n\r\n// pages\r\nimport Error from \"../pages/error\";\r\nimport Login from \"../pages/login\";\r\n\r\nimport \"./App.css\"\r\n\r\n// context\r\nimport { useUserState } from \"../context/UserContext\";\r\n\r\nexport default function App() {\r\n  // global\r\n  var { isAuthenticated } = useUserState();\r\n\r\n  return (\r\n    <Router>\r\n      <Switch>\r\n        <Route exact path=\"/\" render={() => <Redirect to=\"/app/customers\" />} />\r\n        <Route\r\n          exact\r\n          path=\"/app\"\r\n          render={() => <Redirect to=\"/app/customers\" />}\r\n        />\r\n        <PrivateRoute path=\"/app\" component={Layout} />\r\n        <PublicRoute path=\"/login\" component={Login} />\r\n        <Route component={Error} />\r\n      </Switch>\r\n    </Router>\r\n  );\r\n\r\n  // #######################################################################\r\n\r\n  function PrivateRoute({ component, ...rest }) {\r\n    return (\r\n      <Route\r\n        {...rest}\r\n        render={props =>\r\n          isAuthenticated ? (\r\n            React.createElement(component, props)\r\n          ) : (\r\n            <Redirect\r\n              to={{\r\n                pathname: \"/login\",\r\n                state: {\r\n                  from: props.location,\r\n                },\r\n              }}\r\n            />\r\n          )\r\n        }\r\n      />\r\n    );\r\n  }\r\n\r\n  function PublicRoute({ component, ...rest }) {\r\n    return (\r\n      <Route\r\n        {...rest}\r\n        render={props =>\r\n          isAuthenticated ? (\r\n            <Redirect\r\n              to={{\r\n                pathname: \"/app/customers\",\r\n              }}\r\n            />\r\n          ) : (\r\n            React.createElement(component, props)\r\n          )\r\n        }\r\n      />\r\n    );\r\n  }\r\n}\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read http://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport { ThemeProvider } from \"@material-ui/styles\";\r\nimport { CssBaseline } from \"@material-ui/core\";\r\n\r\nimport Themes from \"./themes\";\r\nimport App from \"./components/App\";\r\nimport * as serviceWorker from \"./serviceWorker\";\r\nimport { LayoutProvider } from \"./context/LayoutContext\";\r\nimport { UserProvider } from \"./context/UserContext\";\r\n\r\nReactDOM.render(\r\n  <LayoutProvider>\r\n    <UserProvider>\r\n      <ThemeProvider theme={Themes.default}>\r\n        <CssBaseline />\r\n        <App />\r\n      </ThemeProvider>\r\n    </UserProvider>\r\n  </LayoutProvider>,\r\n  document.getElementById(\"root\"),\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: http://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}